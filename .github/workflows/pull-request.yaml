name: Pull Request
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths:
      - .github/workflows/pull-request.yaml
      - api/**
      - cli/**
      - examples/**
      - server/**
      - tracetesting/**
      - web/**
      - Dockerfile
      - k8s/**

jobs:
  test-cli:
    name: Run CLI unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.work'
          cache: true
          cache-dependency-path: go.work
      - name: Run unit tests
        run: cd cli; make test

  test-server:
    name: Run backend unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.work'
          cache: true
          cache-dependency-path: go.work
      - name: Run unit tests
        run: cd server; make test

  # test-web:
  #   name: Run frontend unit tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         cache: npm
  #         cache-dependency-path: web/package-lock.json
  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           web/node_modules
  #           /home/runner/.cache/Cypress
  #         key: npm--${{ hashFiles('web/package-lock.json') }}
  #         restore-keys: npm-
  #     - run: cd web; npm ci
  #     - run: cd web; npm run lint
  #     - run: cd web; npm test

  build-go:
    needs: [test-cli, test-server]
    name: build go binaries
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.work'
        cache: true
        cache-dependency-path: go.work
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser-pro
        version: latest
        args: build --single-target --rm-dist --snapshot
      env:
        VERSION: pr-${{ github.event.pull_request.number }}
        TRACETEST_ENV: pr
        ANALYTICS_FE_KEY: ${{ secrets.ANALYTICS_FE_KEY }}
        ANALYTICS_BE_KEY: ${{ secrets.ANALYTICS_BE_KEY }}
    - name: Upload assets
      uses: actions/upload-artifact@v3
      with:
        name: tracetest-go
        path: dist/

  # build-web:
  #   needs: [test-web]
  #   name: build web
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         cache: npm
  #         cache-dependency-path: web/package-lock.json
  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           web/node_modules
  #           /home/runner/.cache/Cypress
  #         key: npm--${{ hashFiles('web/package-lock.json') }}
  #         restore-keys: npm-
  #     - run: cd web; npm ci
  #     - run: cd web; CI= npm run build
  #     - name: Upload assets
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: tracetest-web
  #         path: web/build/

  build-docker:
    # needs: [build-go, build-web]
    needs: [build-go]
    name: build docker image
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v3
        with:
          name: tracetest-go
      - uses: actions/download-artifact@v3
        with:
          name: tracetest-web
      - name: Display structure of downloaded files
        run: ls -R
      - run: find . -not -path '*/\.*' | grep -v "node_modules"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: kubeshop/tracetest:pr-${{ github.event.pull_request.number }}
          push: true

  # test-examples:
  #   needs:  [build-docker]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       example_dir: [collector, tracetest-jaeger, tracetest-opensearch, tracetest-tempo, tracetest-no-tracing]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: '^1.18'
  #     - name: Build example
  #       run: |
  #         cd examples/${{ matrix.example_dir }}
  #         TAG=pr-${{ github.event.pull_request.number }} docker-compose up -d
  #     - name: Build CLI
  #       run: |
  #         cd cli
  #         make build
  #         ./dist/tracetest configure -g --endpoint http://localhost:11633 --analytics=false
  #     - name: Run example test
  #       run: |
  #         ./scripts/wait-for-port.sh 11633
  #         ./cli/dist/tracetest test run -d examples/${{ matrix.example_dir }}/tests/list-tests.yaml --wait-for-result

  # deploy:
  #   needs:  [unit-test-frontend, unit-test-backend, unit-test-cli, build-docker]
  #   name: Deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  #     with:
  #       service_account_key: ${{ secrets.GKE_SA_KEY }}
  #       project_id: ${{ secrets.GKE_PROJECT }}

  #   - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
  #     with:
  #       cluster_name: ${{ secrets.GKE_CLUSTER }}
  #       location: ${{ secrets.GKE_ZONE }}
  #       credentials: ${{ secrets.GKE_SA_KEY }}

  #   - name: Deploy
  #     run: |
  #       TAG=pr-${{ github.event.pull_request.number }} \
  #       NAME=tracetest-$TAG \
  #       CONFIG_FILE=./k8s/tracetest.beta.yaml \
  #       ./k8s/deploy.sh

  # e2e:
  #   needs: [deploy, trace-testing]
  #   name: Run e2e tests
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # run copies of the current job in parallel
  #       containers: [1, 2, 3, 4, 5, 6, 7, 8]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.13.x
  #         cache: npm
  #         cache-dependency-path: web/package-lock.json

  #     - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  #       with:
  #         service_account_key: ${{ secrets.GKE_SA_KEY }}
  #         project_id: ${{ secrets.GKE_PROJECT }}

  #     - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
  #       with:
  #         cluster_name: ${{ secrets.GKE_CLUSTER }}
  #         location: ${{ secrets.GKE_ZONE }}
  #         credentials: ${{ secrets.GKE_SA_KEY }}

  #     - name: Forward port
  #       run: |
  #         kubectl port-forward \
  #           --namespace tracetest-pr-${{ github.event.pull_request.number }} \
  #           svc/tracetest-pr-${{ github.event.pull_request.number }} 3000:11633 &

  #     - name: Cache dependencies
  #       id: cache-nodemodules
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           web/node_modules
  #           /home/runner/.cache/Cypress
  #         key: npm--${{ hashFiles('web/package-lock.json') }}
  #         restore-keys: npm-

  #     - name: Install test dependencies
  #       if: steps.cache-nodemodules.outputs.cache-hit != 'true'
  #       run: |
  #         cd web/
  #         npm ci

  #     - name: Run integration tests
  #       run: |
  #         ./scripts/wait-for-port.sh 3000
  #         cd web/
  #         npm run cy:ci
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

  # trace-testing:
  #   needs: deploy
  #   name: Run trace testing using tracetest
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: '^1.18'
  #     - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  #       with:
  #         service_account_key: ${{ secrets.GKE_SA_KEY }}
  #         project_id: ${{ secrets.GKE_PROJECT }}

  #     - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
  #       with:
  #         cluster_name: ${{ secrets.GKE_CLUSTER }}
  #         location: ${{ secrets.GKE_ZONE }}
  #         credentials: ${{ secrets.GKE_SA_KEY }}

  #     - name: Build Current CLI
  #       run: |
  #         cd cli
  #         go build -o ./tracetest main.go

  #     - name: Install CLI intergation version (latest main)
  #       run: |
  #         git clone --depth 1 https://github.com/kubeshop/tracetest /tmp/tracetest-main
  #         cd /tmp/tracetest-main/cli
  #         make build
  #     - name: Forward port
  #       run: |
  #         kubectl port-forward \
  #           --namespace tracetest-integration \
  #           svc/tracetest-integration 11633 &
  #         kubectl port-forward \
  #           --namespace tracetest-pr-${{ github.event.pull_request.number }} \
  #           svc/tracetest-pr-${{ github.event.pull_request.number }} 11634:11633 &

  #         ./scripts/wait-for-port.sh 11633
  #         ./scripts/wait-for-port.sh 11634


  #     - name: Run integration tests
  #       run: |
  #         cd tracetesting
  #         TRACETEST_CLI_MAIN="/tmp/tracetest-main/cli/dist/tracetest" \
  #         TRACETEST_CLI_TARGET="../cli/tracetest" \
  #         TARGET_URL="http://tracetest-pr-${{ github.event.pull_request.number }}.tracetest-pr-${{ github.event.pull_request.number }}:11633" \
  #         ./run.bash

  # cleanup:
  #   runs-on: ubuntu-latest
  #   needs: [trace-testing, e2e]
  #   if: always()
  #   steps:
  #     - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  #       with:
  #         service_account_key: ${{ secrets.GKE_SA_KEY }}
  #         project_id: ${{ secrets.GKE_PROJECT }}

  #     - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
  #       with:
  #         cluster_name: ${{ secrets.GKE_CLUSTER }}
  #         location: ${{ secrets.GKE_ZONE }}
  #         credentials: ${{ secrets.GKE_SA_KEY }}

  #     - name: Uninstall tracetest
  #       run: |
  #         helm delete tracetest-pr-${{ github.event.pull_request.number }} \
  #         --namespace tracetest-pr-${{ github.event.pull_request.number }}
  #         kubectl delete ns tracetest-pr-${{ github.event.pull_request.number }}
