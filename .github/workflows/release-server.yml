name: Release Tracetest

permissions:
  contents: write

concurrency:
  group: "release-server"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"
jobs:
  # release-server:
  #   name: Build and push server docker image
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1
  #   - name: Cache Docker layers
  #     uses: actions/cache@v2
  #     with:
  #       path: /tmp/.buildx-cache
  #       key: ${{ runner.os }}-buildx-main
  #       restore-keys: |
  #         ${{ runner.os }}-buildx-
  #   - name: Login to DockerHub
  #     if: github.event_name != 'pull_request'
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Docker metadata for Tracetest
  #     id: meta
  #     uses: docker/metadata-action@v3
  #     with:
  #       images: kubeshop/tracetest
  #       tags: |
  #         type=match,pattern=v(.*)
  #         type=sha
  #       flavor: |
  #         latest=true
  #   - name: Build and push Tracetest
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: .
  #       file: Dockerfile
  #       push: ${{ github.event_name != 'pull_request' }}
  #       tags: ${{ steps.meta.outputs.tags }}
  #       labels: ${{ steps.meta.outputs.labels }}
  #       cache-from: type=local,src=/tmp/.buildx-cache
  #       cache-to: type=local,dest=/tmp/.buildx-cache-new
  #       build-args: |
  #         ANALYTICS_BE_KEY=${{ secrets.ANALYTICS_BE_KEY }}
  #         ANALYTICS_FE_KEY=${{ secrets.ANALYTICS_FE_KEY }}
  #         VERSION=${{ github.ref_name}}
  #         TRACETEST_ENV=main

  release-cli:
    name: Build CLI release arctifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          workdir: ./cli/
          args: release --debug --rm-dist -f ../.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}

  # helm_chart_version_bump:
  #     name: "Trigger Helm chart appVersion update"
  #     needs: "release-server"
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         repository: "kubeshop/helm-charts"
  #         ref: "main"
  #         fetch-depth: 0
  #         token: ${{ secrets.CI_BOT_TOKEN }}
  #     - name: Install Helm
  #       uses: azure/setup-helm@v1
  #       with:
  #         version: v3.4.0
  #     - name: Bump up tracetest chart
  #       run: |
  #         # sets appVersion in the Chart.yaml
  #         echo New appVersion: ${{ github.ref_name }}
  #         sed  -i -e "s/^appVersion: .*$/appVersion: \"${{ github.ref_name}}\"/" charts/tracetest/Chart.yaml
  #         # Bumps charts patch version
  #         CURRENT_VERSION=$(sed  -n  -e  "s/^version: \(.*\)$/\1/p"  charts/tracetest/Chart.yaml)
  #         echo Current chart version ${CURRENT_VERSION}
  #         NEW_VERSION=$(echo $CURRENT_VERSION |awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
  #         echo New version ${NEW_VERSION}
  #         sed -i -e "s/^version: .*/version: ${NEW_VERSION}/g" charts/tracetest/Chart.yaml

  #     - name: Lint the chart
  #       run: |
  #         helm dependency update charts/tracetest
  #         helm lint charts/tracetest
  #     - name: Push updated chart
  #       run: |
  #         git config user.name "$GITHUB_ACTOR"
  #         git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
  #         git remote -v
  #         git add .
  #         git commit -m "automatically updated tracetest related charts"
  #         git push

  #     - name: Slack Notification if the helm version bump succeeded
  #       uses: rtCamp/action-slack-notify@v2
  #       env:
  #         SLACK_CHANNEL: tracetest
  #         SLACK_COLOR: good
  #         SLACK_ICON: https://github.githubassets.com/images/modules/site/features/actions-icon-actions.svg
  #         SLACK_TITLE: Helm chart version bump succeeded :party_blob:!
  #         SLACK_MESSAGE: "Tracetest chart version was bumped"
  #         SLACK_USERNAME: GitHub
  #         SLACK_LINK_NAMES: true
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #         SLACK_FOOTER: "Kubeshop --> Tracetest"

  # demo-build:
  #   name: Create and upload docker image
  #   runs-on: ubuntu-latest
  #   needs: helm_chart_version_bump
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1
  #   - name: Cache Docker layers
  #     uses: actions/cache@v2
  #     with:
  #       path: /tmp/.buildx-cache
  #       key: ${{ runner.os }}-buildx-main
  #       restore-keys: |
  #         ${{ runner.os }}-buildx-
  #   - name: Login to DockerHub
  #     if: github.event_name != 'pull_request'
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Docker metadata for Tracetest
  #     id: meta
  #     uses: docker/metadata-action@v3
  #     with:
  #       images: kubeshop/tracetest
  #       tags: |
  #         type=match,pattern=v(.*),suffix=-demo
  #       flavor: |
  #         latest=false
  #   - name: Build and push Tracetest
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: .
  #       file: Dockerfile
  #       push: ${{ github.event_name != 'pull_request' }}
  #       tags: ${{ steps.meta.outputs.tags }}
  #       labels: ${{ steps.meta.outputs.labels }}
  #       cache-from: type=local,src=/tmp/.buildx-cache
  #       cache-to: type=local,dest=/tmp/.buildx-cache-new
  #       build-args: |
  #         ANALYTICS_BE_KEY=${{ secrets.ANALYTICS_BE_KEY }}
  #         ANALYTICS_FE_KEY=${{ secrets.ANALYTICS_FE_KEY }}
  #         VERSION=${{ github.ref_name}}-demo
  #         TRACETEST_ENV=demo
  #   - name: Set ouput docker tag
  #     run: echo "::set-output tag=${{ steps.meta.outputs.tags }}"

  # demo-deploy:
  #   if: github.event_name == 'push'
  #   needs: demo-build
  #   name: Deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  #     with:
  #       service_account_key: ${{ secrets.GKE_SA_KEY }}
  #       project_id: ${{ secrets.GKE_PROJECT }}

  #   - run: |-
  #       gcloud --quiet auth configure-docker

  #   - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
  #     with:
  #       cluster_name: ${{ secrets.GKE_CLUSTER }}
  #       location: ${{ secrets.GKE_ZONE }}
  #       credentials: ${{ secrets.GKE_SA_KEY }}

  #   - name: Deploy
  #     run: |
  #       helm repo add kubeshop https://kubeshop.github.io/helm-charts && \
  #       helm repo update && \
  #       helm upgrade tracetest-demo kubeshop/tracetest \
  #         --namespace tracetest-demo \
  #         --set image.tag=${{ github.ref_name}}-demo \
  #         --set analytics.enabled=true \
  #         --set telemetry.dataStores.jaeger.jaeger.endpoint="jaeger-query.tracetest.svc.cluster.local:16685" \
  #         --set telemetry.exporters.collector.exporter.collector.endpoint="otel-collector.tracetest.svc.cluster.local:4317" \
  #         --set server.telemetry.dataStore="jaeger" \
  #         --set service.annotations."cloud\.google\.com/backend-config"='\{\"default\":\"tracetest-beta\"\}' \
  #         --set ingress.enabled=true \
  #         --set 'ingress.hosts[0].host=demo.tracetest.io,ingress.hosts[0].paths[0].path=/,ingress.hosts[0].paths[0].pathType=Prefix' \
  #         --set service.annotations."cloud\.google\.com/backend-config"='\{\"default\":\"tracetest-demo\"\}' \
  #         --set ingress.annotations."networking\.gke\.io/managed-certificates"=tracetest-demo \
  #         --set ingress.annotations."networking\.gke\.io/v1beta1\.FrontendConfig"="ssl-redirect"


  # notify_slack_if_helm_chart_bump_fails:
  #   runs-on: ubuntu-latest
  #   needs: helm_chart_version_bump
  #   if: always() && (needs.helm_chart_version_bump.result == 'failure')
  #   steps:
  #   - name: Slack Notification if Helm Release action failed
  #     uses: rtCamp/action-slack-notify@v2
  #     env:
  #       SLACK_CHANNEL: tracetest
  #       SLACK_COLOR: ${{ needs.helm_chart_version_bump.result }}
  #       SLACK_ICON: https://github.githubassets.com/images/modules/site/features/actions-icon-actions.svg
  #       SLACK_TITLE: Helm Chart version bump action failed :boom:!
  #       SLACK_USERNAME: GitHub
  #       SLACK_LINK_NAMES: true
  #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #       SLACK_FOOTER: "Kubeshop --> Tracetest"
