/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GraphqlRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphqlRequest{}

// GraphqlRequest struct for GraphqlRequest
type GraphqlRequest struct {
	Url             *string      `json:"url,omitempty"`
	Headers         []HTTPHeader `json:"headers,omitempty"`
	Auth            *HTTPAuth    `json:"auth,omitempty"`
	Body            *string      `json:"body,omitempty"`
	SslVerification *bool        `json:"sslVerification,omitempty"`
	Schema          *string      `json:"schema,omitempty"`
}

// NewGraphqlRequest instantiates a new GraphqlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphqlRequest() *GraphqlRequest {
	this := GraphqlRequest{}
	var sslVerification bool = false
	this.SslVerification = &sslVerification
	return &this
}

// NewGraphqlRequestWithDefaults instantiates a new GraphqlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphqlRequestWithDefaults() *GraphqlRequest {
	this := GraphqlRequest{}
	var sslVerification bool = false
	this.SslVerification = &sslVerification
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GraphqlRequest) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlRequest) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GraphqlRequest) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GraphqlRequest) SetUrl(v string) {
	o.Url = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *GraphqlRequest) GetHeaders() []HTTPHeader {
	if o == nil || isNil(o.Headers) {
		var ret []HTTPHeader
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlRequest) GetHeadersOk() ([]HTTPHeader, bool) {
	if o == nil || isNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *GraphqlRequest) HasHeaders() bool {
	if o != nil && !isNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []HTTPHeader and assigns it to the Headers field.
func (o *GraphqlRequest) SetHeaders(v []HTTPHeader) {
	o.Headers = v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *GraphqlRequest) GetAuth() HTTPAuth {
	if o == nil || isNil(o.Auth) {
		var ret HTTPAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlRequest) GetAuthOk() (*HTTPAuth, bool) {
	if o == nil || isNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *GraphqlRequest) HasAuth() bool {
	if o != nil && !isNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given HTTPAuth and assigns it to the Auth field.
func (o *GraphqlRequest) SetAuth(v HTTPAuth) {
	o.Auth = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *GraphqlRequest) GetBody() string {
	if o == nil || isNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlRequest) GetBodyOk() (*string, bool) {
	if o == nil || isNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *GraphqlRequest) HasBody() bool {
	if o != nil && !isNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *GraphqlRequest) SetBody(v string) {
	o.Body = &v
}

// GetSslVerification returns the SslVerification field value if set, zero value otherwise.
func (o *GraphqlRequest) GetSslVerification() bool {
	if o == nil || isNil(o.SslVerification) {
		var ret bool
		return ret
	}
	return *o.SslVerification
}

// GetSslVerificationOk returns a tuple with the SslVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlRequest) GetSslVerificationOk() (*bool, bool) {
	if o == nil || isNil(o.SslVerification) {
		return nil, false
	}
	return o.SslVerification, true
}

// HasSslVerification returns a boolean if a field has been set.
func (o *GraphqlRequest) HasSslVerification() bool {
	if o != nil && !isNil(o.SslVerification) {
		return true
	}

	return false
}

// SetSslVerification gets a reference to the given bool and assigns it to the SslVerification field.
func (o *GraphqlRequest) SetSslVerification(v bool) {
	o.SslVerification = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *GraphqlRequest) GetSchema() string {
	if o == nil || isNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlRequest) GetSchemaOk() (*string, bool) {
	if o == nil || isNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *GraphqlRequest) HasSchema() bool {
	if o != nil && !isNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *GraphqlRequest) SetSchema(v string) {
	o.Schema = &v
}

func (o GraphqlRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphqlRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !isNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !isNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !isNil(o.SslVerification) {
		toSerialize["sslVerification"] = o.SslVerification
	}
	if !isNil(o.Schema) {
		toSerialize["schema"] = o.Schema
	}
	return toSerialize, nil
}

type NullableGraphqlRequest struct {
	value *GraphqlRequest
	isSet bool
}

func (v NullableGraphqlRequest) Get() *GraphqlRequest {
	return v.value
}

func (v *NullableGraphqlRequest) Set(val *GraphqlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphqlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphqlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphqlRequest(val *GraphqlRequest) *NullableGraphqlRequest {
	return &NullableGraphqlRequest{value: val, isSet: true}
}

func (v NullableGraphqlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphqlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
