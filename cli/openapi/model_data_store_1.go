/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// DataStore1 struct for DataStore1
type DataStore1 struct {
	Id         *string              `json:"id,omitempty"`
	Name       *string              `json:"name,omitempty"`
	Type       *SupportedDataStores `json:"type,omitempty"`
	IsDefault  *bool                `json:"isDefault,omitempty"`
	Jaeger     *GRPCClientSettings1 `json:"jaeger,omitempty"`
	Tempo      *GRPCClientSettings1 `json:"tempo,omitempty"`
	OpenSearch *OpenSearch          `json:"openSearch,omitempty"`
	SignalFx   *SignalFX            `json:"signalFx,omitempty"`
	CreatedAt  *time.Time           `json:"createdAt,omitempty"`
}

// NewDataStore1 instantiates a new DataStore1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataStore1() *DataStore1 {
	this := DataStore1{}
	return &this
}

// NewDataStore1WithDefaults instantiates a new DataStore1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataStore1WithDefaults() *DataStore1 {
	this := DataStore1{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DataStore1) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DataStore1) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DataStore1) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DataStore1) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DataStore1) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DataStore1) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DataStore1) GetType() SupportedDataStores {
	if o == nil || o.Type == nil {
		var ret SupportedDataStores
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetTypeOk() (*SupportedDataStores, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DataStore1) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given SupportedDataStores and assigns it to the Type field.
func (o *DataStore1) SetType(v SupportedDataStores) {
	o.Type = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *DataStore1) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *DataStore1) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *DataStore1) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetJaeger returns the Jaeger field value if set, zero value otherwise.
func (o *DataStore1) GetJaeger() GRPCClientSettings1 {
	if o == nil || o.Jaeger == nil {
		var ret GRPCClientSettings1
		return ret
	}
	return *o.Jaeger
}

// GetJaegerOk returns a tuple with the Jaeger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetJaegerOk() (*GRPCClientSettings1, bool) {
	if o == nil || o.Jaeger == nil {
		return nil, false
	}
	return o.Jaeger, true
}

// HasJaeger returns a boolean if a field has been set.
func (o *DataStore1) HasJaeger() bool {
	if o != nil && o.Jaeger != nil {
		return true
	}

	return false
}

// SetJaeger gets a reference to the given GRPCClientSettings1 and assigns it to the Jaeger field.
func (o *DataStore1) SetJaeger(v GRPCClientSettings1) {
	o.Jaeger = &v
}

// GetTempo returns the Tempo field value if set, zero value otherwise.
func (o *DataStore1) GetTempo() GRPCClientSettings1 {
	if o == nil || o.Tempo == nil {
		var ret GRPCClientSettings1
		return ret
	}
	return *o.Tempo
}

// GetTempoOk returns a tuple with the Tempo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetTempoOk() (*GRPCClientSettings1, bool) {
	if o == nil || o.Tempo == nil {
		return nil, false
	}
	return o.Tempo, true
}

// HasTempo returns a boolean if a field has been set.
func (o *DataStore1) HasTempo() bool {
	if o != nil && o.Tempo != nil {
		return true
	}

	return false
}

// SetTempo gets a reference to the given GRPCClientSettings1 and assigns it to the Tempo field.
func (o *DataStore1) SetTempo(v GRPCClientSettings1) {
	o.Tempo = &v
}

// GetOpenSearch returns the OpenSearch field value if set, zero value otherwise.
func (o *DataStore1) GetOpenSearch() OpenSearch {
	if o == nil || o.OpenSearch == nil {
		var ret OpenSearch
		return ret
	}
	return *o.OpenSearch
}

// GetOpenSearchOk returns a tuple with the OpenSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetOpenSearchOk() (*OpenSearch, bool) {
	if o == nil || o.OpenSearch == nil {
		return nil, false
	}
	return o.OpenSearch, true
}

// HasOpenSearch returns a boolean if a field has been set.
func (o *DataStore1) HasOpenSearch() bool {
	if o != nil && o.OpenSearch != nil {
		return true
	}

	return false
}

// SetOpenSearch gets a reference to the given OpenSearch and assigns it to the OpenSearch field.
func (o *DataStore1) SetOpenSearch(v OpenSearch) {
	o.OpenSearch = &v
}

// GetSignalFx returns the SignalFx field value if set, zero value otherwise.
func (o *DataStore1) GetSignalFx() SignalFX {
	if o == nil || o.SignalFx == nil {
		var ret SignalFX
		return ret
	}
	return *o.SignalFx
}

// GetSignalFxOk returns a tuple with the SignalFx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetSignalFxOk() (*SignalFX, bool) {
	if o == nil || o.SignalFx == nil {
		return nil, false
	}
	return o.SignalFx, true
}

// HasSignalFx returns a boolean if a field has been set.
func (o *DataStore1) HasSignalFx() bool {
	if o != nil && o.SignalFx != nil {
		return true
	}

	return false
}

// SetSignalFx gets a reference to the given SignalFX and assigns it to the SignalFx field.
func (o *DataStore1) SetSignalFx(v SignalFX) {
	o.SignalFx = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DataStore1) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStore1) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DataStore1) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *DataStore1) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o DataStore1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if o.Jaeger != nil {
		toSerialize["jaeger"] = o.Jaeger
	}
	if o.Tempo != nil {
		toSerialize["tempo"] = o.Tempo
	}
	if o.OpenSearch != nil {
		toSerialize["openSearch"] = o.OpenSearch
	}
	if o.SignalFx != nil {
		toSerialize["signalFx"] = o.SignalFx
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDataStore1 struct {
	value *DataStore1
	isSet bool
}

func (v NullableDataStore1) Get() *DataStore1 {
	return v.value
}

func (v *NullableDataStore1) Set(val *DataStore1) {
	v.value = val
	v.isSet = true
}

func (v NullableDataStore1) IsSet() bool {
	return v.isSet
}

func (v *NullableDataStore1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataStore1(val *DataStore1) *NullableDataStore1 {
	return &NullableDataStore1{value: val, isSet: true}
}

func (v NullableDataStore1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataStore1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
