/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PlaywrightEngineRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaywrightEngineRequest{}

// PlaywrightEngineRequest struct for PlaywrightEngineRequest
type PlaywrightEngineRequest struct {
	Target *string `json:"target,omitempty"`
	Method *string `json:"method,omitempty"`
	Script *string `json:"script,omitempty"`
}

// NewPlaywrightEngineRequest instantiates a new PlaywrightEngineRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaywrightEngineRequest() *PlaywrightEngineRequest {
	this := PlaywrightEngineRequest{}
	return &this
}

// NewPlaywrightEngineRequestWithDefaults instantiates a new PlaywrightEngineRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaywrightEngineRequestWithDefaults() *PlaywrightEngineRequest {
	this := PlaywrightEngineRequest{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *PlaywrightEngineRequest) GetTarget() string {
	if o == nil || isNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaywrightEngineRequest) GetTargetOk() (*string, bool) {
	if o == nil || isNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *PlaywrightEngineRequest) HasTarget() bool {
	if o != nil && !isNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *PlaywrightEngineRequest) SetTarget(v string) {
	o.Target = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *PlaywrightEngineRequest) GetMethod() string {
	if o == nil || isNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaywrightEngineRequest) GetMethodOk() (*string, bool) {
	if o == nil || isNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *PlaywrightEngineRequest) HasMethod() bool {
	if o != nil && !isNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *PlaywrightEngineRequest) SetMethod(v string) {
	o.Method = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *PlaywrightEngineRequest) GetScript() string {
	if o == nil || isNil(o.Script) {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaywrightEngineRequest) GetScriptOk() (*string, bool) {
	if o == nil || isNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *PlaywrightEngineRequest) HasScript() bool {
	if o != nil && !isNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *PlaywrightEngineRequest) SetScript(v string) {
	o.Script = &v
}

func (o PlaywrightEngineRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaywrightEngineRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !isNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !isNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	return toSerialize, nil
}

type NullablePlaywrightEngineRequest struct {
	value *PlaywrightEngineRequest
	isSet bool
}

func (v NullablePlaywrightEngineRequest) Get() *PlaywrightEngineRequest {
	return v.value
}

func (v *NullablePlaywrightEngineRequest) Set(val *PlaywrightEngineRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaywrightEngineRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaywrightEngineRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaywrightEngineRequest(val *PlaywrightEngineRequest) *NullablePlaywrightEngineRequest {
	return &NullablePlaywrightEngineRequest{value: val, isSet: true}
}

func (v NullablePlaywrightEngineRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaywrightEngineRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
