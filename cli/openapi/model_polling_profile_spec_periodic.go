/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PollingProfileSpecPeriodic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PollingProfileSpecPeriodic{}

// PollingProfileSpecPeriodic Configuration for the strategy 'periodic'. It only should be filled if the field strategy is equals to 'periodic'.
type PollingProfileSpecPeriodic struct {
	// Time that the poller should wait until try to fetch more traces. It should be written in duration format (example: 1s, 30s, 1m).
	RetryDelay *string `json:"retryDelay,omitempty"`
	// Total time that the poller should try to continue to fetch traces. It should be written in duration format (example: 1s, 30s, 1m).
	Timeout *string `json:"timeout,omitempty"`
}

// NewPollingProfileSpecPeriodic instantiates a new PollingProfileSpecPeriodic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPollingProfileSpecPeriodic() *PollingProfileSpecPeriodic {
	this := PollingProfileSpecPeriodic{}
	return &this
}

// NewPollingProfileSpecPeriodicWithDefaults instantiates a new PollingProfileSpecPeriodic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollingProfileSpecPeriodicWithDefaults() *PollingProfileSpecPeriodic {
	this := PollingProfileSpecPeriodic{}
	return &this
}

// GetRetryDelay returns the RetryDelay field value if set, zero value otherwise.
func (o *PollingProfileSpecPeriodic) GetRetryDelay() string {
	if o == nil || isNil(o.RetryDelay) {
		var ret string
		return ret
	}
	return *o.RetryDelay
}

// GetRetryDelayOk returns a tuple with the RetryDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PollingProfileSpecPeriodic) GetRetryDelayOk() (*string, bool) {
	if o == nil || isNil(o.RetryDelay) {
		return nil, false
	}
	return o.RetryDelay, true
}

// HasRetryDelay returns a boolean if a field has been set.
func (o *PollingProfileSpecPeriodic) HasRetryDelay() bool {
	if o != nil && !isNil(o.RetryDelay) {
		return true
	}

	return false
}

// SetRetryDelay gets a reference to the given string and assigns it to the RetryDelay field.
func (o *PollingProfileSpecPeriodic) SetRetryDelay(v string) {
	o.RetryDelay = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *PollingProfileSpecPeriodic) GetTimeout() string {
	if o == nil || isNil(o.Timeout) {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PollingProfileSpecPeriodic) GetTimeoutOk() (*string, bool) {
	if o == nil || isNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *PollingProfileSpecPeriodic) HasTimeout() bool {
	if o != nil && !isNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *PollingProfileSpecPeriodic) SetTimeout(v string) {
	o.Timeout = &v
}

func (o PollingProfileSpecPeriodic) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PollingProfileSpecPeriodic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RetryDelay) {
		toSerialize["retryDelay"] = o.RetryDelay
	}
	if !isNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return toSerialize, nil
}

type NullablePollingProfileSpecPeriodic struct {
	value *PollingProfileSpecPeriodic
	isSet bool
}

func (v NullablePollingProfileSpecPeriodic) Get() *PollingProfileSpecPeriodic {
	return v.value
}

func (v *NullablePollingProfileSpecPeriodic) Set(val *PollingProfileSpecPeriodic) {
	v.value = val
	v.isSet = true
}

func (v NullablePollingProfileSpecPeriodic) IsSet() bool {
	return v.isSet
}

func (v *NullablePollingProfileSpecPeriodic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePollingProfileSpecPeriodic(val *PollingProfileSpecPeriodic) *NullablePollingProfileSpecPeriodic {
	return &NullablePollingProfileSpecPeriodic{value: val, isSet: true}
}

func (v NullablePollingProfileSpecPeriodic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePollingProfileSpecPeriodic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
