/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PollingProfileSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PollingProfileSpec{}

// PollingProfileSpec Represents the attributes of a Polling Profile.
type PollingProfileSpec struct {
	// ID of this Polling Profile.
	Id string `json:"id"`
	// Name given for this profile.
	Name string `json:"name"`
	// Is default polling profile
	Default *bool `json:"default,omitempty"`
	// Name of the strategy that will be used on this profile.
	Strategy string                      `json:"strategy"`
	Periodic *PollingProfileSpecPeriodic `json:"periodic,omitempty"`
}

// NewPollingProfileSpec instantiates a new PollingProfileSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPollingProfileSpec(id string, name string, strategy string) *PollingProfileSpec {
	this := PollingProfileSpec{}
	this.Id = id
	this.Name = name
	this.Strategy = strategy
	return &this
}

// NewPollingProfileSpecWithDefaults instantiates a new PollingProfileSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollingProfileSpecWithDefaults() *PollingProfileSpec {
	this := PollingProfileSpec{}
	return &this
}

// GetId returns the Id field value
func (o *PollingProfileSpec) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PollingProfileSpec) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PollingProfileSpec) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PollingProfileSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PollingProfileSpec) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PollingProfileSpec) SetName(v string) {
	o.Name = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *PollingProfileSpec) GetDefault() bool {
	if o == nil || isNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PollingProfileSpec) GetDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *PollingProfileSpec) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *PollingProfileSpec) SetDefault(v bool) {
	o.Default = &v
}

// GetStrategy returns the Strategy field value
func (o *PollingProfileSpec) GetStrategy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value
// and a boolean to check if the value has been set.
func (o *PollingProfileSpec) GetStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strategy, true
}

// SetStrategy sets field value
func (o *PollingProfileSpec) SetStrategy(v string) {
	o.Strategy = v
}

// GetPeriodic returns the Periodic field value if set, zero value otherwise.
func (o *PollingProfileSpec) GetPeriodic() PollingProfileSpecPeriodic {
	if o == nil || isNil(o.Periodic) {
		var ret PollingProfileSpecPeriodic
		return ret
	}
	return *o.Periodic
}

// GetPeriodicOk returns a tuple with the Periodic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PollingProfileSpec) GetPeriodicOk() (*PollingProfileSpecPeriodic, bool) {
	if o == nil || isNil(o.Periodic) {
		return nil, false
	}
	return o.Periodic, true
}

// HasPeriodic returns a boolean if a field has been set.
func (o *PollingProfileSpec) HasPeriodic() bool {
	if o != nil && !isNil(o.Periodic) {
		return true
	}

	return false
}

// SetPeriodic gets a reference to the given PollingProfileSpecPeriodic and assigns it to the Periodic field.
func (o *PollingProfileSpec) SetPeriodic(v PollingProfileSpecPeriodic) {
	o.Periodic = &v
}

func (o PollingProfileSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PollingProfileSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	toSerialize["strategy"] = o.Strategy
	if !isNil(o.Periodic) {
		toSerialize["periodic"] = o.Periodic
	}
	return toSerialize, nil
}

type NullablePollingProfileSpec struct {
	value *PollingProfileSpec
	isSet bool
}

func (v NullablePollingProfileSpec) Get() *PollingProfileSpec {
	return v.value
}

func (v *NullablePollingProfileSpec) Set(val *PollingProfileSpec) {
	v.value = val
	v.isSet = true
}

func (v NullablePollingProfileSpec) IsSet() bool {
	return v.isSet
}

func (v *NullablePollingProfileSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePollingProfileSpec(val *PollingProfileSpec) *NullablePollingProfileSpec {
	return &NullablePollingProfileSpec{value: val, isSet: true}
}

func (v NullablePollingProfileSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePollingProfileSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
