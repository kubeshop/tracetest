/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RunGroups type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunGroups{}

// RunGroups struct for RunGroups
type RunGroups struct {
	Items []RunGroup
}

// NewRunGroups instantiates a new RunGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunGroups() *RunGroups {
	this := RunGroups{}
	return &this
}

// NewRunGroupsWithDefaults instantiates a new RunGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunGroupsWithDefaults() *RunGroups {
	this := RunGroups{}
	return &this
}

func (o RunGroups) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunGroups) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *RunGroups) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableRunGroups struct {
	value RunGroups
	isSet bool
}

func (v NullableRunGroups) Get() RunGroups {
	return v.value
}

func (v *NullableRunGroups) Set(val RunGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableRunGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableRunGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunGroups(val RunGroups) *NullableRunGroups {
	return &NullableRunGroups{value: val, isSet: true}
}

func (v NullableRunGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
