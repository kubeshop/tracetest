/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GRPCResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GRPCResponse{}

// GRPCResponse struct for GRPCResponse
type GRPCResponse struct {
	StatusCode *int32       `json:"statusCode,omitempty"`
	Metadata   []GRPCHeader `json:"metadata,omitempty"`
	Body       *string      `json:"body,omitempty"`
}

// NewGRPCResponse instantiates a new GRPCResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGRPCResponse() *GRPCResponse {
	this := GRPCResponse{}
	var statusCode int32 = 0
	this.StatusCode = &statusCode
	return &this
}

// NewGRPCResponseWithDefaults instantiates a new GRPCResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGRPCResponseWithDefaults() *GRPCResponse {
	this := GRPCResponse{}
	var statusCode int32 = 0
	this.StatusCode = &statusCode
	return &this
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *GRPCResponse) GetStatusCode() int32 {
	if o == nil || isNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GRPCResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil || isNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *GRPCResponse) HasStatusCode() bool {
	if o != nil && !isNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *GRPCResponse) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GRPCResponse) GetMetadata() []GRPCHeader {
	if o == nil || isNil(o.Metadata) {
		var ret []GRPCHeader
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GRPCResponse) GetMetadataOk() ([]GRPCHeader, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GRPCResponse) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []GRPCHeader and assigns it to the Metadata field.
func (o *GRPCResponse) SetMetadata(v []GRPCHeader) {
	o.Metadata = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *GRPCResponse) GetBody() string {
	if o == nil || isNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GRPCResponse) GetBodyOk() (*string, bool) {
	if o == nil || isNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *GRPCResponse) HasBody() bool {
	if o != nil && !isNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *GRPCResponse) SetBody(v string) {
	o.Body = &v
}

func (o GRPCResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GRPCResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableGRPCResponse struct {
	value *GRPCResponse
	isSet bool
}

func (v NullableGRPCResponse) Get() *GRPCResponse {
	return v.value
}

func (v *NullableGRPCResponse) Set(val *GRPCResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGRPCResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGRPCResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGRPCResponse(val *GRPCResponse) *NullableGRPCResponse {
	return &NullableGRPCResponse{value: val, isSet: true}
}

func (v NullableGRPCResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGRPCResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
