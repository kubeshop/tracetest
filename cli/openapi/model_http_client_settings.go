/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HTTPClientSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HTTPClientSettings{}

// HTTPClientSettings struct for HTTPClientSettings
type HTTPClientSettings struct {
	Url     *string            `json:"url,omitempty"`
	Headers *map[string]string `json:"headers,omitempty"`
	Tls     *TLS               `json:"tls,omitempty"`
	Auth    *HTTPAuth          `json:"auth,omitempty"`
}

// NewHTTPClientSettings instantiates a new HTTPClientSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHTTPClientSettings() *HTTPClientSettings {
	this := HTTPClientSettings{}
	return &this
}

// NewHTTPClientSettingsWithDefaults instantiates a new HTTPClientSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHTTPClientSettingsWithDefaults() *HTTPClientSettings {
	this := HTTPClientSettings{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *HTTPClientSettings) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPClientSettings) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *HTTPClientSettings) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *HTTPClientSettings) SetUrl(v string) {
	o.Url = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *HTTPClientSettings) GetHeaders() map[string]string {
	if o == nil || isNil(o.Headers) {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPClientSettings) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *HTTPClientSettings) HasHeaders() bool {
	if o != nil && !isNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *HTTPClientSettings) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *HTTPClientSettings) GetTls() TLS {
	if o == nil || isNil(o.Tls) {
		var ret TLS
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPClientSettings) GetTlsOk() (*TLS, bool) {
	if o == nil || isNil(o.Tls) {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *HTTPClientSettings) HasTls() bool {
	if o != nil && !isNil(o.Tls) {
		return true
	}

	return false
}

// SetTls gets a reference to the given TLS and assigns it to the Tls field.
func (o *HTTPClientSettings) SetTls(v TLS) {
	o.Tls = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *HTTPClientSettings) GetAuth() HTTPAuth {
	if o == nil || isNil(o.Auth) {
		var ret HTTPAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPClientSettings) GetAuthOk() (*HTTPAuth, bool) {
	if o == nil || isNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *HTTPClientSettings) HasAuth() bool {
	if o != nil && !isNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given HTTPAuth and assigns it to the Auth field.
func (o *HTTPClientSettings) SetAuth(v HTTPAuth) {
	o.Auth = &v
}

func (o HTTPClientSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HTTPClientSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !isNil(o.Tls) {
		toSerialize["tls"] = o.Tls
	}
	if !isNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	return toSerialize, nil
}

type NullableHTTPClientSettings struct {
	value *HTTPClientSettings
	isSet bool
}

func (v NullableHTTPClientSettings) Get() *HTTPClientSettings {
	return v.value
}

func (v *NullableHTTPClientSettings) Set(val *HTTPClientSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableHTTPClientSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableHTTPClientSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHTTPClientSettings(val *HTTPClientSettings) *NullableHTTPClientSettings {
	return &NullableHTTPClientSettings{value: val, isSet: true}
}

func (v NullableHTTPClientSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHTTPClientSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
