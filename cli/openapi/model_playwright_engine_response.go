/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PlaywrightEngineResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaywrightEngineResponse{}

// PlaywrightEngineResponse struct for PlaywrightEngineResponse
type PlaywrightEngineResponse struct {
	Success *bool   `json:"success,omitempty"`
	Out     *string `json:"out,omitempty"`
}

// NewPlaywrightEngineResponse instantiates a new PlaywrightEngineResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaywrightEngineResponse() *PlaywrightEngineResponse {
	this := PlaywrightEngineResponse{}
	return &this
}

// NewPlaywrightEngineResponseWithDefaults instantiates a new PlaywrightEngineResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaywrightEngineResponseWithDefaults() *PlaywrightEngineResponse {
	this := PlaywrightEngineResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *PlaywrightEngineResponse) GetSuccess() bool {
	if o == nil || isNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaywrightEngineResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || isNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *PlaywrightEngineResponse) HasSuccess() bool {
	if o != nil && !isNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *PlaywrightEngineResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetOut returns the Out field value if set, zero value otherwise.
func (o *PlaywrightEngineResponse) GetOut() string {
	if o == nil || isNil(o.Out) {
		var ret string
		return ret
	}
	return *o.Out
}

// GetOutOk returns a tuple with the Out field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaywrightEngineResponse) GetOutOk() (*string, bool) {
	if o == nil || isNil(o.Out) {
		return nil, false
	}
	return o.Out, true
}

// HasOut returns a boolean if a field has been set.
func (o *PlaywrightEngineResponse) HasOut() bool {
	if o != nil && !isNil(o.Out) {
		return true
	}

	return false
}

// SetOut gets a reference to the given string and assigns it to the Out field.
func (o *PlaywrightEngineResponse) SetOut(v string) {
	o.Out = &v
}

func (o PlaywrightEngineResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaywrightEngineResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !isNil(o.Out) {
		toSerialize["out"] = o.Out
	}
	return toSerialize, nil
}

type NullablePlaywrightEngineResponse struct {
	value *PlaywrightEngineResponse
	isSet bool
}

func (v NullablePlaywrightEngineResponse) Get() *PlaywrightEngineResponse {
	return v.value
}

func (v *NullablePlaywrightEngineResponse) Set(val *PlaywrightEngineResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaywrightEngineResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaywrightEngineResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaywrightEngineResponse(val *PlaywrightEngineResponse) *NullablePlaywrightEngineResponse {
	return &NullablePlaywrightEngineResponse{value: val, isSet: true}
}

func (v NullablePlaywrightEngineResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaywrightEngineResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
