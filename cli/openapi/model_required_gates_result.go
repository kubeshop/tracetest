/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RequiredGatesResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequiredGatesResult{}

// RequiredGatesResult struct for RequiredGatesResult
type RequiredGatesResult struct {
	Required []SupportedGates `json:"required"`
	Failed   []SupportedGates `json:"failed"`
	Passed   bool             `json:"passed"`
}

// NewRequiredGatesResult instantiates a new RequiredGatesResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequiredGatesResult(required []SupportedGates, failed []SupportedGates, passed bool) *RequiredGatesResult {
	this := RequiredGatesResult{}
	this.Required = required
	this.Failed = failed
	this.Passed = passed
	return &this
}

// NewRequiredGatesResultWithDefaults instantiates a new RequiredGatesResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequiredGatesResultWithDefaults() *RequiredGatesResult {
	this := RequiredGatesResult{}
	return &this
}

// GetRequired returns the Required field value
func (o *RequiredGatesResult) GetRequired() []SupportedGates {
	if o == nil {
		var ret []SupportedGates
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *RequiredGatesResult) GetRequiredOk() ([]SupportedGates, bool) {
	if o == nil {
		return nil, false
	}
	return o.Required, true
}

// SetRequired sets field value
func (o *RequiredGatesResult) SetRequired(v []SupportedGates) {
	o.Required = v
}

// GetFailed returns the Failed field value
func (o *RequiredGatesResult) GetFailed() []SupportedGates {
	if o == nil {
		var ret []SupportedGates
		return ret
	}

	return o.Failed
}

// GetFailedOk returns a tuple with the Failed field value
// and a boolean to check if the value has been set.
func (o *RequiredGatesResult) GetFailedOk() ([]SupportedGates, bool) {
	if o == nil {
		return nil, false
	}
	return o.Failed, true
}

// SetFailed sets field value
func (o *RequiredGatesResult) SetFailed(v []SupportedGates) {
	o.Failed = v
}

// GetPassed returns the Passed field value
func (o *RequiredGatesResult) GetPassed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Passed
}

// GetPassedOk returns a tuple with the Passed field value
// and a boolean to check if the value has been set.
func (o *RequiredGatesResult) GetPassedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passed, true
}

// SetPassed sets field value
func (o *RequiredGatesResult) SetPassed(v bool) {
	o.Passed = v
}

func (o RequiredGatesResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequiredGatesResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["required"] = o.Required
	toSerialize["failed"] = o.Failed
	toSerialize["passed"] = o.Passed
	return toSerialize, nil
}

type NullableRequiredGatesResult struct {
	value *RequiredGatesResult
	isSet bool
}

func (v NullableRequiredGatesResult) Get() *RequiredGatesResult {
	return v.value
}

func (v *NullableRequiredGatesResult) Set(val *RequiredGatesResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRequiredGatesResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRequiredGatesResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequiredGatesResult(val *RequiredGatesResult) *NullableRequiredGatesResult {
	return &NullableRequiredGatesResult{value: val, isSet: true}
}

func (v NullableRequiredGatesResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequiredGatesResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
