/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GraphqlResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphqlResponse{}

// GraphqlResponse struct for GraphqlResponse
type GraphqlResponse struct {
	Status     *string      `json:"status,omitempty"`
	StatusCode *int32       `json:"statusCode,omitempty"`
	Headers    []HTTPHeader `json:"headers,omitempty"`
	Body       *string      `json:"body,omitempty"`
}

// NewGraphqlResponse instantiates a new GraphqlResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphqlResponse() *GraphqlResponse {
	this := GraphqlResponse{}
	return &this
}

// NewGraphqlResponseWithDefaults instantiates a new GraphqlResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphqlResponseWithDefaults() *GraphqlResponse {
	this := GraphqlResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GraphqlResponse) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlResponse) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GraphqlResponse) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GraphqlResponse) SetStatus(v string) {
	o.Status = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *GraphqlResponse) GetStatusCode() int32 {
	if o == nil || isNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil || isNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *GraphqlResponse) HasStatusCode() bool {
	if o != nil && !isNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *GraphqlResponse) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *GraphqlResponse) GetHeaders() []HTTPHeader {
	if o == nil || isNil(o.Headers) {
		var ret []HTTPHeader
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlResponse) GetHeadersOk() ([]HTTPHeader, bool) {
	if o == nil || isNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *GraphqlResponse) HasHeaders() bool {
	if o != nil && !isNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []HTTPHeader and assigns it to the Headers field.
func (o *GraphqlResponse) SetHeaders(v []HTTPHeader) {
	o.Headers = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *GraphqlResponse) GetBody() string {
	if o == nil || isNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlResponse) GetBodyOk() (*string, bool) {
	if o == nil || isNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *GraphqlResponse) HasBody() bool {
	if o != nil && !isNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *GraphqlResponse) SetBody(v string) {
	o.Body = &v
}

func (o GraphqlResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphqlResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !isNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !isNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableGraphqlResponse struct {
	value *GraphqlResponse
	isSet bool
}

func (v NullableGraphqlResponse) Get() *GraphqlResponse {
	return v.value
}

func (v *NullableGraphqlResponse) Set(val *GraphqlResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphqlResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphqlResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphqlResponse(val *GraphqlResponse) *NullableGraphqlResponse {
	return &NullableGraphqlResponse{value: val, isSet: true}
}

func (v NullableGraphqlResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphqlResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
