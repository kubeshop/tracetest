/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectionResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionResult{}

// ConnectionResult struct for ConnectionResult
type ConnectionResult struct {
	PortCheck      *ConnectionTestStep `json:"portCheck,omitempty"`
	Connectivity   *ConnectionTestStep `json:"connectivity,omitempty"`
	Authentication *ConnectionTestStep `json:"authentication,omitempty"`
	FetchTraces    *ConnectionTestStep `json:"fetchTraces,omitempty"`
}

// NewConnectionResult instantiates a new ConnectionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionResult() *ConnectionResult {
	this := ConnectionResult{}
	return &this
}

// NewConnectionResultWithDefaults instantiates a new ConnectionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionResultWithDefaults() *ConnectionResult {
	this := ConnectionResult{}
	return &this
}

// GetPortCheck returns the PortCheck field value if set, zero value otherwise.
func (o *ConnectionResult) GetPortCheck() ConnectionTestStep {
	if o == nil || isNil(o.PortCheck) {
		var ret ConnectionTestStep
		return ret
	}
	return *o.PortCheck
}

// GetPortCheckOk returns a tuple with the PortCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionResult) GetPortCheckOk() (*ConnectionTestStep, bool) {
	if o == nil || isNil(o.PortCheck) {
		return nil, false
	}
	return o.PortCheck, true
}

// HasPortCheck returns a boolean if a field has been set.
func (o *ConnectionResult) HasPortCheck() bool {
	if o != nil && !isNil(o.PortCheck) {
		return true
	}

	return false
}

// SetPortCheck gets a reference to the given ConnectionTestStep and assigns it to the PortCheck field.
func (o *ConnectionResult) SetPortCheck(v ConnectionTestStep) {
	o.PortCheck = &v
}

// GetConnectivity returns the Connectivity field value if set, zero value otherwise.
func (o *ConnectionResult) GetConnectivity() ConnectionTestStep {
	if o == nil || isNil(o.Connectivity) {
		var ret ConnectionTestStep
		return ret
	}
	return *o.Connectivity
}

// GetConnectivityOk returns a tuple with the Connectivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionResult) GetConnectivityOk() (*ConnectionTestStep, bool) {
	if o == nil || isNil(o.Connectivity) {
		return nil, false
	}
	return o.Connectivity, true
}

// HasConnectivity returns a boolean if a field has been set.
func (o *ConnectionResult) HasConnectivity() bool {
	if o != nil && !isNil(o.Connectivity) {
		return true
	}

	return false
}

// SetConnectivity gets a reference to the given ConnectionTestStep and assigns it to the Connectivity field.
func (o *ConnectionResult) SetConnectivity(v ConnectionTestStep) {
	o.Connectivity = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *ConnectionResult) GetAuthentication() ConnectionTestStep {
	if o == nil || isNil(o.Authentication) {
		var ret ConnectionTestStep
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionResult) GetAuthenticationOk() (*ConnectionTestStep, bool) {
	if o == nil || isNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *ConnectionResult) HasAuthentication() bool {
	if o != nil && !isNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given ConnectionTestStep and assigns it to the Authentication field.
func (o *ConnectionResult) SetAuthentication(v ConnectionTestStep) {
	o.Authentication = &v
}

// GetFetchTraces returns the FetchTraces field value if set, zero value otherwise.
func (o *ConnectionResult) GetFetchTraces() ConnectionTestStep {
	if o == nil || isNil(o.FetchTraces) {
		var ret ConnectionTestStep
		return ret
	}
	return *o.FetchTraces
}

// GetFetchTracesOk returns a tuple with the FetchTraces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionResult) GetFetchTracesOk() (*ConnectionTestStep, bool) {
	if o == nil || isNil(o.FetchTraces) {
		return nil, false
	}
	return o.FetchTraces, true
}

// HasFetchTraces returns a boolean if a field has been set.
func (o *ConnectionResult) HasFetchTraces() bool {
	if o != nil && !isNil(o.FetchTraces) {
		return true
	}

	return false
}

// SetFetchTraces gets a reference to the given ConnectionTestStep and assigns it to the FetchTraces field.
func (o *ConnectionResult) SetFetchTraces(v ConnectionTestStep) {
	o.FetchTraces = &v
}

func (o ConnectionResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PortCheck) {
		toSerialize["portCheck"] = o.PortCheck
	}
	if !isNil(o.Connectivity) {
		toSerialize["connectivity"] = o.Connectivity
	}
	if !isNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !isNil(o.FetchTraces) {
		toSerialize["fetchTraces"] = o.FetchTraces
	}
	return toSerialize, nil
}

type NullableConnectionResult struct {
	value *ConnectionResult
	isSet bool
}

func (v NullableConnectionResult) Get() *ConnectionResult {
	return v.value
}

func (v *NullableConnectionResult) Set(val *ConnectionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionResult(val *ConnectionResult) *NullableConnectionResult {
	return &NullableConnectionResult{value: val, isSet: true}
}

func (v NullableConnectionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
