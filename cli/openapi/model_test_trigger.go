/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TestTrigger struct for TestTrigger
type TestTrigger struct {
	Type        *string      `json:"type,omitempty"`
	HttpRequest *HTTPRequest `json:"httpRequest,omitempty"`
}

// NewTestTrigger instantiates a new TestTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestTrigger() *TestTrigger {
	this := TestTrigger{}
	return &this
}

// NewTestTriggerWithDefaults instantiates a new TestTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestTriggerWithDefaults() *TestTrigger {
	this := TestTrigger{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TestTrigger) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestTrigger) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TestTrigger) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TestTrigger) SetType(v string) {
	o.Type = &v
}

// GetHttpRequest returns the HttpRequest field value if set, zero value otherwise.
func (o *TestTrigger) GetHttpRequest() HTTPRequest {
	if o == nil || o.HttpRequest == nil {
		var ret HTTPRequest
		return ret
	}
	return *o.HttpRequest
}

// GetHttpRequestOk returns a tuple with the HttpRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestTrigger) GetHttpRequestOk() (*HTTPRequest, bool) {
	if o == nil || o.HttpRequest == nil {
		return nil, false
	}
	return o.HttpRequest, true
}

// HasHttpRequest returns a boolean if a field has been set.
func (o *TestTrigger) HasHttpRequest() bool {
	if o != nil && o.HttpRequest != nil {
		return true
	}

	return false
}

// SetHttpRequest gets a reference to the given HTTPRequest and assigns it to the HttpRequest field.
func (o *TestTrigger) SetHttpRequest(v HTTPRequest) {
	o.HttpRequest = &v
}

func (o TestTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.HttpRequest != nil {
		toSerialize["httpRequest"] = o.HttpRequest
	}
	return json.Marshal(toSerialize)
}

type NullableTestTrigger struct {
	value *TestTrigger
	isSet bool
}

func (v NullableTestTrigger) Get() *TestTrigger {
	return v.value
}

func (v *NullableTestTrigger) Set(val *TestTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableTestTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableTestTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestTrigger(val *TestTrigger) *NullableTestTrigger {
	return &NullableTestTrigger{value: val, isSet: true}
}

func (v NullableTestTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
