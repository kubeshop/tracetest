id: 8540b712-8ad6-48f0-a261-457c7da68921
name: gRPC Test Create
description: ""
trigger:
  type: http
  httpRequest:
    url: ${TARGET_URL}/api/tests
    method: POST
    headers:
    - key: Content-Type
      value: application/json
    body: |
      {
        "name": "gRPC pokemon list",
        "serviceUnderTest": {
          "triggerType": "grpc",
          "triggerSettings": {
            "grpc": {
              "protobufFile": "syntax = \"proto3\";\r\n\r\noption java_multiple_files = true;\r\noption java_outer_classname = \"PokeshopProto\";\r\noption objc_class_prefix = \"PKS\";\r\n\r\npackage pokeshop;\r\n\r\nservice Pokeshop {\r\n  rpc getPokemonList (GetPokemonRequest) returns (GetPokemonListResponse) {}\r\n  rpc createPokemon (Pokemon) returns (Pokemon) {}\r\n  rpc importPokemon (ImportPokemonRequest) returns (ImportPokemonRequest) {}\r\n}\r\n\r\nmessage ImportPokemonRequest {\r\n  int32 id = 1;\r\n}\r\n\r\nmessage GetPokemonRequest {\r\n  optional int32 skip = 1;\r\n  optional int32 take = 2;\r\n}\r\n\r\nmessage GetPokemonListResponse {\r\n  repeated Pokemon items = 1;\r\n  int32 totalCount = 2;\r\n}\r\n\r\nmessage Pokemon {\r\n  optional int32 id = 1;\r\n  string name = 2;\r\n  string type = 3;\r\n  bool isFeatured = 4;\r\n  optional string imageUrl = 5;\r\n}",
              "address": "${DEMO_APP_GRPC_URL}",
              "method": "pokeshop.Pokeshop.importPokemon",
              "request": "{\"id\": 52}"
            }
          }
        },
        "definition": {
          "definitions": [
            {
              "selector": {
                "query": "span[name = \"queue.synchronizePokemon send\"]"
              },
              "assertions": [
                {
                  "attribute": "tracetest.selected_spans.count",
                  "comparator": ">",
                  "expected": "0"
                }
              ]
            }
          ]
        }
      }
testDefinition:
- selector: span[name="POST /api/tests" tracetest.span.type="http"]
  assertions:
  - tracetest.selected_spans.count = 1
  - tracetest.response.status = 200
- selector: span[name = "exec INSERT"]
  assertions:
  - tracetest.selected_spans.count = 2
- selector: span[name = "exec INSERT"]:first
  assertions:
  - sql.query contains "INSERT INTO tests"
- selector: span[name = "exec INSERT"]:last
  assertions:
  - sql.query contains "INSERT INTO definitions"
