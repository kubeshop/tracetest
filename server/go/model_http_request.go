/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type HttpRequest struct {
	Url string `json:"url,omitempty"`

	Method string `json:"method,omitempty"`

	Headers []HttpResponseHeaders `json:"headers,omitempty"`

	Body string `json:"body,omitempty"`

	// TODO
	Auth map[string]interface{} `json:"auth,omitempty"`

	// TODO
	Proxy map[string]interface{} `json:"proxy,omitempty"`

	// TODO
	Certificate map[string]interface{} `json:"certificate,omitempty"`
}

// AssertHttpRequestRequired checks if the required fields are not zero-ed
func AssertHttpRequestRequired(obj HttpRequest) error {
	for _, el := range obj.Headers {
		if err := AssertHttpResponseHeadersRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseHttpRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of HttpRequest (e.g. [][]HttpRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseHttpRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aHttpRequest, ok := obj.(HttpRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertHttpRequestRequired(aHttpRequest)
	})
}
