/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"flag"
	"log"
	"os"
	"os/signal"
	"sync"
	"syscall"

	"github.com/kubeshop/tracetest/server/app"
	"github.com/kubeshop/tracetest/server/config"
	"github.com/kubeshop/tracetest/server/testdb"
)

var cfg = flag.String("config", "config.yaml", "path to the config file")

func main() {

	flag.Parse()
	cfg, err := config.FromFile(*cfg)
	if err != nil {
		log.Fatal(err)
	}

	db, err := testdb.Connect(cfg.PostgresConnString)
	if err != nil {
		log.Fatal(err)
	}

	appCfg := app.Config{
		Config: cfg,
	}

	app, err := app.New(appCfg, db)
	if err != nil {
		log.Fatal(err)
	}

	var wg sync.WaitGroup
	c := make(chan os.Signal)
	signal.Notify(c, os.Interrupt, syscall.SIGTERM)
	go func() {
		<-c
		wg.Done()
		app.Stop()
		os.Exit(1)
	}()

	wg.Add(1)
	err = app.Start()
	if err != nil {
		log.Fatal(err)
	}

	wg.Wait()
}
