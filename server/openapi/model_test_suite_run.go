/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type TestSuiteRun struct {
	Id int32 `json:"id,omitempty"`

	Version int32 `json:"version,omitempty"`

	RunGroupId string `json:"runGroupId,omitempty"`

	CreatedAt time.Time `json:"createdAt,omitempty"`

	CompletedAt time.Time `json:"completedAt,omitempty"`

	State string `json:"state,omitempty"`

	Steps []TestRun `json:"steps,omitempty"`

	VariableSet VariableSet `json:"variableSet,omitempty"`

	Metadata map[string]string `json:"metadata,omitempty"`

	Pass int32 `json:"pass,omitempty"`

	Fail int32 `json:"fail,omitempty"`

	AllStepsRequiredGatesPassed bool `json:"allStepsRequiredGatesPassed,omitempty"`
}

// AssertTestSuiteRunRequired checks if the required fields are not zero-ed
func AssertTestSuiteRunRequired(obj TestSuiteRun) error {
	for _, el := range obj.Steps {
		if err := AssertTestRunRequired(el); err != nil {
			return err
		}
	}
	if err := AssertVariableSetRequired(obj.VariableSet); err != nil {
		return err
	}
	return nil
}

// AssertRecurseTestSuiteRunRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TestSuiteRun (e.g. [][]TestSuiteRun), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTestSuiteRunRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTestSuiteRun, ok := obj.(TestSuiteRun)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTestSuiteRunRequired(aTestSuiteRun)
	})
}
