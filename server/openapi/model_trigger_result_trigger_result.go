/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type TriggerResultTriggerResult struct {
	Http HttpResponse `json:"http,omitempty"`

	Grpc GrpcResponse `json:"grpc,omitempty"`

	Traceid TraceidResponse `json:"traceid,omitempty"`

	Kafka KafkaResponse `json:"kafka,omitempty"`

	Error TriggerError `json:"error,omitempty"`
}

// AssertTriggerResultTriggerResultRequired checks if the required fields are not zero-ed
func AssertTriggerResultTriggerResultRequired(obj TriggerResultTriggerResult) error {
	if err := AssertHttpResponseRequired(obj.Http); err != nil {
		return err
	}
	if err := AssertGrpcResponseRequired(obj.Grpc); err != nil {
		return err
	}
	if err := AssertTraceidResponseRequired(obj.Traceid); err != nil {
		return err
	}
	if err := AssertKafkaResponseRequired(obj.Kafka); err != nil {
		return err
	}
	if err := AssertTriggerErrorRequired(obj.Error); err != nil {
		return err
	}
	return nil
}

// AssertRecurseTriggerResultTriggerResultRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TriggerResultTriggerResult (e.g. [][]TriggerResultTriggerResult), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTriggerResultTriggerResultRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTriggerResultTriggerResult, ok := obj.(TriggerResultTriggerResult)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTriggerResultTriggerResultRequired(aTriggerResultTriggerResult)
	})
}
