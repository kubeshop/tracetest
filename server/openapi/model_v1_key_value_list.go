/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// V1KeyValueList - KeyValueList is a list of KeyValue messages. We need KeyValueList as a message since `oneof` in AnyValue does not allow repeated fields. Everywhere else where we need a list of KeyValue messages (e.g. in Span) we use `repeated KeyValue` directly to avoid unnecessary extra wrapping (which slows down the protocol). The 2 approaches are semantically equivalent.
type V1KeyValueList struct {

	// A collection of key/value pairs of key-value pairs. The list may be empty (may contain 0 elements). The keys MUST be unique (it is not allowed to have more than one value with the same key).
	Values []V1KeyValue `json:"values,omitempty"`
}

// AssertV1KeyValueListRequired checks if the required fields are not zero-ed
func AssertV1KeyValueListRequired(obj V1KeyValueList) error {
	for _, el := range obj.Values {
		if err := AssertV1KeyValueRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseV1KeyValueListRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V1KeyValueList (e.g. [][]V1KeyValueList), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseV1KeyValueListRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV1KeyValueList, ok := obj.(V1KeyValueList)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertV1KeyValueListRequired(aV1KeyValueList)
	})
}
