/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type SpanAssertion struct {

	// ID
	SpanAssertionId string `json:"spanAssertionId,omitempty"`

	// Example \"SPAN_ATTRIBUTES\"
	LocationName string `json:"locationName,omitempty"`

	// Example \"http.status.code\"
	PropertyName string `json:"propertyName,omitempty"`

	// Example \"intValue\"
	ValueType string `json:"valueType,omitempty"`

	// Example \"EQUALS\"
	Operator string `json:"operator,omitempty"`

	// Example \"200\"
	ComparisonValue string `json:"comparisonValue,omitempty"`
}

// AssertSpanAssertionRequired checks if the required fields are not zero-ed
func AssertSpanAssertionRequired(obj SpanAssertion) error {
	return nil
}

// AssertRecurseSpanAssertionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SpanAssertion (e.g. [][]SpanAssertion), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSpanAssertionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSpanAssertion, ok := obj.(SpanAssertion)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSpanAssertionRequired(aSpanAssertion)
	})
}
