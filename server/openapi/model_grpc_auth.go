/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GrpcAuth struct {
	Type string `json:"type,omitempty"`

	ApiKey HttpAuthApiKey `json:"apiKey,omitempty"`

	Basic HttpAuthBasic `json:"basic,omitempty"`

	Bearer HttpAuthBearer `json:"bearer,omitempty"`
}

// AssertGrpcAuthRequired checks if the required fields are not zero-ed
func AssertGrpcAuthRequired(obj GrpcAuth) error {
	if err := AssertHttpAuthApiKeyRequired(obj.ApiKey); err != nil {
		return err
	}
	if err := AssertHttpAuthBasicRequired(obj.Basic); err != nil {
		return err
	}
	if err := AssertHttpAuthBearerRequired(obj.Bearer); err != nil {
		return err
	}
	return nil
}

// AssertRecurseGrpcAuthRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GrpcAuth (e.g. [][]GrpcAuth), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGrpcAuthRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGrpcAuth, ok := obj.(GrpcAuth)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGrpcAuthRequired(aGrpcAuth)
	})
}
