/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ConnectionResult struct {
	PortCheck ConnectionTestStep `json:"portCheck,omitempty"`

	Connectivity ConnectionTestStep `json:"connectivity,omitempty"`

	Authentication ConnectionTestStep `json:"authentication,omitempty"`

	FetchTraces ConnectionTestStep `json:"fetchTraces,omitempty"`
}

// AssertConnectionResultRequired checks if the required fields are not zero-ed
func AssertConnectionResultRequired(obj ConnectionResult) error {
	if err := AssertConnectionTestStepRequired(obj.PortCheck); err != nil {
		return err
	}
	if err := AssertConnectionTestStepRequired(obj.Connectivity); err != nil {
		return err
	}
	if err := AssertConnectionTestStepRequired(obj.Authentication); err != nil {
		return err
	}
	if err := AssertConnectionTestStepRequired(obj.FetchTraces); err != nil {
		return err
	}
	return nil
}

// AssertRecurseConnectionResultRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ConnectionResult (e.g. [][]ConnectionResult), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseConnectionResultRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aConnectionResult, ok := obj.(ConnectionResult)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertConnectionResultRequired(aConnectionResult)
	})
}
