/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type RunGroup struct {
	Id string `json:"id"`

	CreatedAt time.Time `json:"createdAt,omitempty"`

	Status string `json:"status,omitempty"`

	Summary RunGroupSummary `json:"summary,omitempty"`

	Metadata map[string]string `json:"metadata,omitempty"`
}

// AssertRunGroupRequired checks if the required fields are not zero-ed
func AssertRunGroupRequired(obj RunGroup) error {
	elements := map[string]interface{}{
		"id": obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertRunGroupSummaryRequired(obj.Summary); err != nil {
		return err
	}
	return nil
}

// AssertRecurseRunGroupRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RunGroup (e.g. [][]RunGroup), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRunGroupRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRunGroup, ok := obj.(RunGroup)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRunGroupRequired(aRunGroup)
	})
}
