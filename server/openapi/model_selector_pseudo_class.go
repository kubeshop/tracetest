/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type SelectorPseudoClass struct {
	Name string `json:"name"`

	Argument int32 `json:"argument,omitempty"`
}

// AssertSelectorPseudoClassRequired checks if the required fields are not zero-ed
func AssertSelectorPseudoClassRequired(obj SelectorPseudoClass) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSelectorPseudoClassRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SelectorPseudoClass (e.g. [][]SelectorPseudoClass), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSelectorPseudoClassRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSelectorPseudoClass, ok := obj.(SelectorPseudoClass)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSelectorPseudoClassRequired(aSelectorPseudoClass)
	})
}
