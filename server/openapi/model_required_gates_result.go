/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type RequiredGatesResult struct {
	Required []SupportedGates `json:"required"`

	Failed []SupportedGates `json:"failed"`

	Passed bool `json:"passed"`
}

// AssertRequiredGatesResultRequired checks if the required fields are not zero-ed
func AssertRequiredGatesResultRequired(obj RequiredGatesResult) error {
	elements := map[string]interface{}{
		"required": obj.Required,
		"failed":   obj.Failed,
		"passed":   obj.Passed,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseRequiredGatesResultRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RequiredGatesResult (e.g. [][]RequiredGatesResult), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRequiredGatesResultRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRequiredGatesResult, ok := obj.(RequiredGatesResult)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRequiredGatesResultRequired(aRequiredGatesResult)
	})
}
