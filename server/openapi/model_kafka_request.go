/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type KafkaRequest struct {
	BrokerUrls []string `json:"brokerUrls,omitempty"`

	Topic string `json:"topic,omitempty"`

	Authentication KafkaAuthentication `json:"authentication,omitempty"`

	SslVerification bool `json:"sslVerification,omitempty"`

	Headers []KafkaMessageHeader `json:"headers,omitempty"`

	MessageKey string `json:"messageKey,omitempty"`

	MessageValue string `json:"messageValue,omitempty"`
}

// AssertKafkaRequestRequired checks if the required fields are not zero-ed
func AssertKafkaRequestRequired(obj KafkaRequest) error {
	if err := AssertKafkaAuthenticationRequired(obj.Authentication); err != nil {
		return err
	}
	for _, el := range obj.Headers {
		if err := AssertKafkaMessageHeaderRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseKafkaRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaRequest (e.g. [][]KafkaRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaRequest, ok := obj.(KafkaRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaRequestRequired(aKafkaRequest)
	})
}
