/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Trigger struct {
	Type string `json:"type,omitempty"`

	HttpRequest HttpRequest `json:"httpRequest,omitempty"`

	Grpc GrpcRequest `json:"grpc,omitempty"`

	Traceid TraceidRequest `json:"traceid,omitempty"`

	Kafka KafkaRequest `json:"kafka,omitempty"`
}

// AssertTriggerRequired checks if the required fields are not zero-ed
func AssertTriggerRequired(obj Trigger) error {
	if err := AssertHttpRequestRequired(obj.HttpRequest); err != nil {
		return err
	}
	if err := AssertGrpcRequestRequired(obj.Grpc); err != nil {
		return err
	}
	if err := AssertTraceidRequestRequired(obj.Traceid); err != nil {
		return err
	}
	if err := AssertKafkaRequestRequired(obj.Kafka); err != nil {
		return err
	}
	return nil
}

// AssertRecurseTriggerRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Trigger (e.g. [][]Trigger), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTriggerRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTrigger, ok := obj.(Trigger)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTriggerRequired(aTrigger)
	})
}
