/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type TestAssertionResult struct {

	// True if all trace spans passed the assertion test
	AssertionResultState bool `json:"assertionResultState,omitempty"`

	// List of all tested span assertions
	AssertionResult []AssertionResult `json:"assertionResult,omitempty"`
}

// AssertTestAssertionResultRequired checks if the required fields are not zero-ed
func AssertTestAssertionResultRequired(obj TestAssertionResult) error {
	for _, el := range obj.AssertionResult {
		if err := AssertAssertionResultRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseTestAssertionResultRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TestAssertionResult (e.g. [][]TestAssertionResult), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTestAssertionResultRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTestAssertionResult, ok := obj.(TestAssertionResult)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTestAssertionResultRequired(aTestAssertionResult)
	})
}
