/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Assertion struct {

	// ID
	AssertionId string `json:"assertionId,omitempty"`

	Selectors []SelectorItem `json:"selectors,omitempty"`

	Selector string `json:"selector,omitempty"`

	SpanAssertions []SpanAssertion `json:"spanAssertions,omitempty"`
}

// AssertAssertionRequired checks if the required fields are not zero-ed
func AssertAssertionRequired(obj Assertion) error {
	for _, el := range obj.Selectors {
		if err := AssertSelectorItemRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.SpanAssertions {
		if err := AssertSpanAssertionRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseAssertionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Assertion (e.g. [][]Assertion), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAssertionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAssertion, ok := obj.(Assertion)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAssertionRequired(aAssertion)
	})
}
