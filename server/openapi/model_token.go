/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type Token struct {
	Id string `json:"id"`

	// token name
	Name string `json:"name"`

	IsRevoked bool `json:"isRevoked,omitempty"`

	Role Role `json:"role"`

	UserID string `json:"userID,omitempty"`

	// token duration in minutes
	Duration int32 `json:"duration,omitempty"`

	IssuedAt time.Time `json:"issuedAt,omitempty"`

	ExpiresAt time.Time `json:"expiresAt,omitempty"`

	UpdatedAt time.Time `json:"updatedAt,omitempty"`
}

// AssertTokenRequired checks if the required fields are not zero-ed
func AssertTokenRequired(obj Token) error {
	elements := map[string]interface{}{
		"id":   obj.Id,
		"name": obj.Name,
		"role": obj.Role,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseTokenRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Token (e.g. [][]Token), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTokenRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aToken, ok := obj.(Token)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTokenRequired(aToken)
	})
}
