/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Span struct {
	Id string `json:"id,omitempty"`

	ParentId string `json:"parentId,omitempty"`

	Name string `json:"name,omitempty"`

	Kind string `json:"kind,omitempty"`

	// span start time in unix milli format
	StartTime int64 `json:"startTime,omitempty"`

	// span end time in unix milli format
	EndTime int64 `json:"endTime,omitempty"`

	// Key-Value of span attributes
	Attributes map[string]string `json:"attributes,omitempty"`

	Children []Span `json:"children,omitempty"`
}

// AssertSpanRequired checks if the required fields are not zero-ed
func AssertSpanRequired(obj Span) error {
	for _, el := range obj.Children {
		if err := AssertSpanRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseSpanRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Span (e.g. [][]Span), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSpanRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSpan, ok := obj.(Span)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSpanRequired(aSpan)
	})
}
