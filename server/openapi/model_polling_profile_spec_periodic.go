/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// PollingProfileSpecPeriodic - Configuration for the strategy 'periodic'. It only should be filled if the field strategy is equals to 'periodic'.
type PollingProfileSpecPeriodic struct {

	// Time that the poller should wait until try to fetch more traces. It should be written in duration format (example: 1s, 30s, 1m).
	RetryDelay string `json:"retryDelay,omitempty"`

	// Total time that the poller should try to continue to fetch traces. It should be written in duration format (example: 1s, 30s, 1m).
	Timeout string `json:"timeout,omitempty"`
}

// AssertPollingProfileSpecPeriodicRequired checks if the required fields are not zero-ed
func AssertPollingProfileSpecPeriodicRequired(obj PollingProfileSpecPeriodic) error {
	return nil
}

// AssertRecursePollingProfileSpecPeriodicRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PollingProfileSpecPeriodic (e.g. [][]PollingProfileSpecPeriodic), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePollingProfileSpecPeriodicRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPollingProfileSpecPeriodic, ok := obj.(PollingProfileSpecPeriodic)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPollingProfileSpecPeriodicRequired(aPollingProfileSpecPeriodic)
	})
}
