/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GraphqlRequest struct {
	Url string `json:"url,omitempty"`

	Headers []HttpHeader `json:"headers,omitempty"`

	Auth HttpAuth `json:"auth,omitempty"`

	Body GraphqlBody `json:"body,omitempty"`

	SslVerification bool `json:"sslVerification,omitempty"`

	Schema string `json:"schema,omitempty"`
}

// AssertGraphqlRequestRequired checks if the required fields are not zero-ed
func AssertGraphqlRequestRequired(obj GraphqlRequest) error {
	for _, el := range obj.Headers {
		if err := AssertHttpHeaderRequired(el); err != nil {
			return err
		}
	}
	if err := AssertHttpAuthRequired(obj.Auth); err != nil {
		return err
	}
	if err := AssertGraphqlBodyRequired(obj.Body); err != nil {
		return err
	}
	return nil
}

// AssertRecurseGraphqlRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GraphqlRequest (e.g. [][]GraphqlRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGraphqlRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGraphqlRequest, ok := obj.(GraphqlRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGraphqlRequestRequired(aGraphqlRequest)
	})
}
