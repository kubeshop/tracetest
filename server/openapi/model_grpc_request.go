/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GrpcRequest struct {
	ProtobufFile string `json:"protobufFile,omitempty"`

	Address string `json:"address,omitempty"`

	Service string `json:"service,omitempty"`

	Method string `json:"method,omitempty"`

	Metadata []GrpcHeader `json:"metadata,omitempty"`

	Auth HttpAuth `json:"auth,omitempty"`

	Request string `json:"request,omitempty"`
}

// AssertGrpcRequestRequired checks if the required fields are not zero-ed
func AssertGrpcRequestRequired(obj GrpcRequest) error {
	for _, el := range obj.Metadata {
		if err := AssertGrpcHeaderRequired(el); err != nil {
			return err
		}
	}
	if err := AssertHttpAuthRequired(obj.Auth); err != nil {
		return err
	}
	return nil
}

// AssertRecurseGrpcRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GrpcRequest (e.g. [][]GrpcRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGrpcRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGrpcRequest, ok := obj.(GrpcRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGrpcRequestRequired(aGrpcRequest)
	})
}
