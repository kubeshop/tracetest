/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type TestSuite struct {
	Id string `json:"id,omitempty"`

	Name string `json:"name,omitempty"`

	Description string `json:"description,omitempty"`

	// version number of the test
	Version int32 `json:"version,omitempty"`

	// list of steps of the TestSuite containing just each test id
	Steps []string `json:"steps,omitempty"`

	// list of steps of the TestSuite containing the whole test object
	FullSteps []Test `json:"fullSteps,omitempty"`

	CreatedAt time.Time `json:"createdAt,omitempty"`

	Summary TestSummary `json:"summary,omitempty"`
}

// AssertTestSuiteRequired checks if the required fields are not zero-ed
func AssertTestSuiteRequired(obj TestSuite) error {
	for _, el := range obj.FullSteps {
		if err := AssertTestRequired(el); err != nil {
			return err
		}
	}
	if err := AssertTestSummaryRequired(obj.Summary); err != nil {
		return err
	}
	return nil
}

// AssertRecurseTestSuiteRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TestSuite (e.g. [][]TestSuite), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTestSuiteRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTestSuite, ok := obj.(TestSuite)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTestSuiteRequired(aTestSuite)
	})
}
