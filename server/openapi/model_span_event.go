/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// SpanEvent - Event is a time-stamped annotation of the span, consisting of user-supplied text description and key-value pairs.
type SpanEvent struct {

	// time_unix_nano is the time the event occurred.
	TimeUnixNano string `json:"timeUnixNano,omitempty"`

	// name of the event. This field is semantically required to be set to non-empty string.
	Name string `json:"name,omitempty"`

	// attributes is a collection of attribute key/value pairs on the event. Attribute keys MUST be unique (it is not allowed to have more than one attribute with the same key).
	Attributes []V1KeyValue `json:"attributes,omitempty"`

	// dropped_attributes_count is the number of dropped attributes. If the value is 0, then no attributes were dropped.
	DroppedAttributesCount int64 `json:"droppedAttributesCount,omitempty"`
}

// AssertSpanEventRequired checks if the required fields are not zero-ed
func AssertSpanEventRequired(obj SpanEvent) error {
	for _, el := range obj.Attributes {
		if err := AssertV1KeyValueRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseSpanEventRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SpanEvent (e.g. [][]SpanEvent), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSpanEventRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSpanEvent, ok := obj.(SpanEvent)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSpanEventRequired(aSpanEvent)
	})
}
