/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GrpcClientSettings1 struct {
	Endpoint string `json:"endpoint,omitempty"`

	ReadBufferSize float32 `json:"readBufferSize,omitempty"`

	WriteBufferSize float32 `json:"writeBufferSize,omitempty"`

	WaitForReady bool `json:"waitForReady,omitempty"`

	Headers []HttpHeader `json:"headers,omitempty"`

	BalancerName string `json:"balancerName,omitempty"`

	Compression string `json:"compression,omitempty"`

	Tls Tls1 `json:"tls,omitempty"`

	Auth HttpAuth `json:"auth,omitempty"`
}

// AssertGrpcClientSettings1Required checks if the required fields are not zero-ed
func AssertGrpcClientSettings1Required(obj GrpcClientSettings1) error {
	for _, el := range obj.Headers {
		if err := AssertHttpHeaderRequired(el); err != nil {
			return err
		}
	}
	if err := AssertTls1Required(obj.Tls); err != nil {
		return err
	}
	if err := AssertHttpAuthRequired(obj.Auth); err != nil {
		return err
	}
	return nil
}

// AssertRecurseGrpcClientSettings1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GrpcClientSettings1 (e.g. [][]GrpcClientSettings1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGrpcClientSettings1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGrpcClientSettings1, ok := obj.(GrpcClientSettings1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGrpcClientSettings1Required(aGrpcClientSettings1)
	})
}
