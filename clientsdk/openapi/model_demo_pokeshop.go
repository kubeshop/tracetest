/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DemoPokeshop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DemoPokeshop{}

// DemoPokeshop Represents the settings of the Pokeshop API demonstration.
type DemoPokeshop struct {
	// HTTP endpoint for Pokeshop API
	HttpEndpoint *string `json:"httpEndpoint,omitempty"`
	// gRPC endpoint for Pokeshop API
	GrpcEndpoint *string `json:"grpcEndpoint,omitempty"`
	// kafka broker for Pokeshop API
	KafkaBroker *string `json:"kafkaBroker,omitempty"`
}

// NewDemoPokeshop instantiates a new DemoPokeshop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemoPokeshop() *DemoPokeshop {
	this := DemoPokeshop{}
	return &this
}

// NewDemoPokeshopWithDefaults instantiates a new DemoPokeshop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemoPokeshopWithDefaults() *DemoPokeshop {
	this := DemoPokeshop{}
	return &this
}

// GetHttpEndpoint returns the HttpEndpoint field value if set, zero value otherwise.
func (o *DemoPokeshop) GetHttpEndpoint() string {
	if o == nil || isNil(o.HttpEndpoint) {
		var ret string
		return ret
	}
	return *o.HttpEndpoint
}

// GetHttpEndpointOk returns a tuple with the HttpEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoPokeshop) GetHttpEndpointOk() (*string, bool) {
	if o == nil || isNil(o.HttpEndpoint) {
		return nil, false
	}
	return o.HttpEndpoint, true
}

// HasHttpEndpoint returns a boolean if a field has been set.
func (o *DemoPokeshop) HasHttpEndpoint() bool {
	if o != nil && !isNil(o.HttpEndpoint) {
		return true
	}

	return false
}

// SetHttpEndpoint gets a reference to the given string and assigns it to the HttpEndpoint field.
func (o *DemoPokeshop) SetHttpEndpoint(v string) {
	o.HttpEndpoint = &v
}

// GetGrpcEndpoint returns the GrpcEndpoint field value if set, zero value otherwise.
func (o *DemoPokeshop) GetGrpcEndpoint() string {
	if o == nil || isNil(o.GrpcEndpoint) {
		var ret string
		return ret
	}
	return *o.GrpcEndpoint
}

// GetGrpcEndpointOk returns a tuple with the GrpcEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoPokeshop) GetGrpcEndpointOk() (*string, bool) {
	if o == nil || isNil(o.GrpcEndpoint) {
		return nil, false
	}
	return o.GrpcEndpoint, true
}

// HasGrpcEndpoint returns a boolean if a field has been set.
func (o *DemoPokeshop) HasGrpcEndpoint() bool {
	if o != nil && !isNil(o.GrpcEndpoint) {
		return true
	}

	return false
}

// SetGrpcEndpoint gets a reference to the given string and assigns it to the GrpcEndpoint field.
func (o *DemoPokeshop) SetGrpcEndpoint(v string) {
	o.GrpcEndpoint = &v
}

// GetKafkaBroker returns the KafkaBroker field value if set, zero value otherwise.
func (o *DemoPokeshop) GetKafkaBroker() string {
	if o == nil || isNil(o.KafkaBroker) {
		var ret string
		return ret
	}
	return *o.KafkaBroker
}

// GetKafkaBrokerOk returns a tuple with the KafkaBroker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoPokeshop) GetKafkaBrokerOk() (*string, bool) {
	if o == nil || isNil(o.KafkaBroker) {
		return nil, false
	}
	return o.KafkaBroker, true
}

// HasKafkaBroker returns a boolean if a field has been set.
func (o *DemoPokeshop) HasKafkaBroker() bool {
	if o != nil && !isNil(o.KafkaBroker) {
		return true
	}

	return false
}

// SetKafkaBroker gets a reference to the given string and assigns it to the KafkaBroker field.
func (o *DemoPokeshop) SetKafkaBroker(v string) {
	o.KafkaBroker = &v
}

func (o DemoPokeshop) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DemoPokeshop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HttpEndpoint) {
		toSerialize["httpEndpoint"] = o.HttpEndpoint
	}
	if !isNil(o.GrpcEndpoint) {
		toSerialize["grpcEndpoint"] = o.GrpcEndpoint
	}
	if !isNil(o.KafkaBroker) {
		toSerialize["kafkaBroker"] = o.KafkaBroker
	}
	return toSerialize, nil
}

type NullableDemoPokeshop struct {
	value *DemoPokeshop
	isSet bool
}

func (v NullableDemoPokeshop) Get() *DemoPokeshop {
	return v.value
}

func (v *NullableDemoPokeshop) Set(val *DemoPokeshop) {
	v.value = val
	v.isSet = true
}

func (v NullableDemoPokeshop) IsSet() bool {
	return v.isSet
}

func (v *NullableDemoPokeshop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemoPokeshop(val *DemoPokeshop) *NullableDemoPokeshop {
	return &NullableDemoPokeshop{value: val, isSet: true}
}

func (v NullableDemoPokeshop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemoPokeshop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
