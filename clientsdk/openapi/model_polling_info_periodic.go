/*
TraceTest

OpenAPI definition for TraceTest endpoint and resources

API version: 0.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PollingInfoPeriodic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PollingInfoPeriodic{}

// PollingInfoPeriodic struct for PollingInfoPeriodic
type PollingInfoPeriodic struct {
	NumberSpans      *int32 `json:"numberSpans,omitempty"`
	NumberIterations *int32 `json:"numberIterations,omitempty"`
}

// NewPollingInfoPeriodic instantiates a new PollingInfoPeriodic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPollingInfoPeriodic() *PollingInfoPeriodic {
	this := PollingInfoPeriodic{}
	return &this
}

// NewPollingInfoPeriodicWithDefaults instantiates a new PollingInfoPeriodic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollingInfoPeriodicWithDefaults() *PollingInfoPeriodic {
	this := PollingInfoPeriodic{}
	return &this
}

// GetNumberSpans returns the NumberSpans field value if set, zero value otherwise.
func (o *PollingInfoPeriodic) GetNumberSpans() int32 {
	if o == nil || isNil(o.NumberSpans) {
		var ret int32
		return ret
	}
	return *o.NumberSpans
}

// GetNumberSpansOk returns a tuple with the NumberSpans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PollingInfoPeriodic) GetNumberSpansOk() (*int32, bool) {
	if o == nil || isNil(o.NumberSpans) {
		return nil, false
	}
	return o.NumberSpans, true
}

// HasNumberSpans returns a boolean if a field has been set.
func (o *PollingInfoPeriodic) HasNumberSpans() bool {
	if o != nil && !isNil(o.NumberSpans) {
		return true
	}

	return false
}

// SetNumberSpans gets a reference to the given int32 and assigns it to the NumberSpans field.
func (o *PollingInfoPeriodic) SetNumberSpans(v int32) {
	o.NumberSpans = &v
}

// GetNumberIterations returns the NumberIterations field value if set, zero value otherwise.
func (o *PollingInfoPeriodic) GetNumberIterations() int32 {
	if o == nil || isNil(o.NumberIterations) {
		var ret int32
		return ret
	}
	return *o.NumberIterations
}

// GetNumberIterationsOk returns a tuple with the NumberIterations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PollingInfoPeriodic) GetNumberIterationsOk() (*int32, bool) {
	if o == nil || isNil(o.NumberIterations) {
		return nil, false
	}
	return o.NumberIterations, true
}

// HasNumberIterations returns a boolean if a field has been set.
func (o *PollingInfoPeriodic) HasNumberIterations() bool {
	if o != nil && !isNil(o.NumberIterations) {
		return true
	}

	return false
}

// SetNumberIterations gets a reference to the given int32 and assigns it to the NumberIterations field.
func (o *PollingInfoPeriodic) SetNumberIterations(v int32) {
	o.NumberIterations = &v
}

func (o PollingInfoPeriodic) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PollingInfoPeriodic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NumberSpans) {
		toSerialize["numberSpans"] = o.NumberSpans
	}
	if !isNil(o.NumberIterations) {
		toSerialize["numberIterations"] = o.NumberIterations
	}
	return toSerialize, nil
}

type NullablePollingInfoPeriodic struct {
	value *PollingInfoPeriodic
	isSet bool
}

func (v NullablePollingInfoPeriodic) Get() *PollingInfoPeriodic {
	return v.value
}

func (v *NullablePollingInfoPeriodic) Set(val *PollingInfoPeriodic) {
	v.value = val
	v.isSet = true
}

func (v NullablePollingInfoPeriodic) IsSet() bool {
	return v.isSet
}

func (v *NullablePollingInfoPeriodic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePollingInfoPeriodic(val *PollingInfoPeriodic) *NullablePollingInfoPeriodic {
	return &NullablePollingInfoPeriodic{value: val, isSet: true}
}

func (v NullablePollingInfoPeriodic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePollingInfoPeriodic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
