// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/orchestrator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty message for endpoints that don't return anything
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{0}
}

// ConnectRequest is the initial request sent by the agent to the orchestrator
// it contains all necessary information for authentication and identification
// of the agent.
// An established connection is called a "session".
type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ConnectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ConnectResponse is the Orchestrator response to the ConnectRequest. It contains
// configuration that must be used by the agent while working with this Orchestrator.
type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *SessionConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectResponse) GetConfiguration() *SessionConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// SessionConfiguration is a set of configuration values that must be used by the agent while
// communicating with the Orchestrator in the current session.
type SessionConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Milliseconds to wait for spans before sending batch
	BatchTimeout int32 `protobuf:"varint,1,opt,name=BatchTimeout,proto3" json:"BatchTimeout,omitempty"`
}

func (x *SessionConfiguration) Reset() {
	*x = SessionConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionConfiguration) ProtoMessage() {}

func (x *SessionConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionConfiguration.ProtoReflect.Descriptor instead.
func (*SessionConfiguration) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *SessionConfiguration) GetBatchTimeout() int32 {
	if x != nil {
		return x.BatchTimeout
	}
	return 0
}

type TriggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestID  string   `protobuf:"bytes,1,opt,name=testID,proto3" json:"testID,omitempty"`
	RunID   int32    `protobuf:"varint,2,opt,name=runID,proto3" json:"runID,omitempty"`
	TraceID string   `protobuf:"bytes,3,opt,name=traceID,proto3" json:"traceID,omitempty"`
	Trigger *Trigger `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *TriggerRequest) Reset() {
	*x = TriggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRequest) ProtoMessage() {}

func (x *TriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRequest.ProtoReflect.Descriptor instead.
func (*TriggerRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *TriggerRequest) GetTestID() string {
	if x != nil {
		return x.TestID
	}
	return ""
}

func (x *TriggerRequest) GetRunID() int32 {
	if x != nil {
		return x.RunID
	}
	return 0
}

func (x *TriggerRequest) GetTraceID() string {
	if x != nil {
		return x.TraceID
	}
	return ""
}

func (x *TriggerRequest) GetTrigger() *Trigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

type Trigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Http    *HttpRequest    `protobuf:"bytes,2,opt,name=http,proto3" json:"http,omitempty"`
	Grpc    *GrpcRequest    `protobuf:"bytes,3,opt,name=grpc,proto3" json:"grpc,omitempty"`
	TraceID *TraceIDRequest `protobuf:"bytes,4,opt,name=traceID,proto3" json:"traceID,omitempty"`
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *Trigger) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Trigger) GetHttp() *HttpRequest {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Trigger) GetGrpc() *GrpcRequest {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *Trigger) GetTraceID() *TraceIDRequest {
	if x != nil {
		return x.TraceID
	}
	return nil
}

type HttpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method          string              `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url             string              `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Body            string              `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Headers         []*HttpHeader       `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty"`
	Authentication  *HttpAuthentication `protobuf:"bytes,5,opt,name=authentication,proto3" json:"authentication,omitempty"`
	SSLVerification bool                `protobuf:"varint,6,opt,name=SSLVerification,proto3" json:"SSLVerification,omitempty"`
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *HttpRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *HttpRequest) GetHeaders() []*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpRequest) GetAuthentication() *HttpAuthentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *HttpRequest) GetSSLVerification() bool {
	if x != nil {
		return x.SSLVerification
	}
	return false
}

type HttpHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HttpHeader) Reset() {
	*x = HttpHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHeader) ProtoMessage() {}

func (x *HttpHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHeader.ProtoReflect.Descriptor instead.
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{7}
}

func (x *HttpHeader) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HttpHeader) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HttpAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string                `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ApiKey *ApiKeyAuthentication `protobuf:"bytes,2,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	Basic  *BasicAuthentication  `protobuf:"bytes,3,opt,name=basic,proto3" json:"basic,omitempty"`
	Bearer *BearerAuthentication `protobuf:"bytes,4,opt,name=bearer,proto3" json:"bearer,omitempty"`
}

func (x *HttpAuthentication) Reset() {
	*x = HttpAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpAuthentication) ProtoMessage() {}

func (x *HttpAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpAuthentication.ProtoReflect.Descriptor instead.
func (*HttpAuthentication) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{8}
}

func (x *HttpAuthentication) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HttpAuthentication) GetApiKey() *ApiKeyAuthentication {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

func (x *HttpAuthentication) GetBasic() *BasicAuthentication {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *HttpAuthentication) GetBearer() *BearerAuthentication {
	if x != nil {
		return x.Bearer
	}
	return nil
}

type ApiKeyAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	In    string `protobuf:"bytes,3,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *ApiKeyAuthentication) Reset() {
	*x = ApiKeyAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeyAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeyAuthentication) ProtoMessage() {}

func (x *ApiKeyAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeyAuthentication.ProtoReflect.Descriptor instead.
func (*ApiKeyAuthentication) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{9}
}

func (x *ApiKeyAuthentication) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ApiKeyAuthentication) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ApiKeyAuthentication) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

type BasicAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *BasicAuthentication) Reset() {
	*x = BasicAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicAuthentication) ProtoMessage() {}

func (x *BasicAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicAuthentication.ProtoReflect.Descriptor instead.
func (*BasicAuthentication) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{10}
}

func (x *BasicAuthentication) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BasicAuthentication) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type BearerAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *BearerAuthentication) Reset() {
	*x = BearerAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BearerAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BearerAuthentication) ProtoMessage() {}

func (x *BearerAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BearerAuthentication.ProtoReflect.Descriptor instead.
func (*BearerAuthentication) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{11}
}

func (x *BearerAuthentication) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GrpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtobufFile   string              `protobuf:"bytes,1,opt,name=protobufFile,proto3" json:"protobufFile,omitempty"`
	Address        string              `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Service        string              `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Method         string              `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Request        string              `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	Authentication *HttpAuthentication `protobuf:"bytes,6,opt,name=authentication,proto3" json:"authentication,omitempty"`
	Metadata       []*GrpcHeader       `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GrpcRequest) Reset() {
	*x = GrpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcRequest) ProtoMessage() {}

func (x *GrpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcRequest.ProtoReflect.Descriptor instead.
func (*GrpcRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{12}
}

func (x *GrpcRequest) GetProtobufFile() string {
	if x != nil {
		return x.ProtobufFile
	}
	return ""
}

func (x *GrpcRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GrpcRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GrpcRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GrpcRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *GrpcRequest) GetAuthentication() *HttpAuthentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *GrpcRequest) GetMetadata() []*GrpcHeader {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GrpcHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GrpcHeader) Reset() {
	*x = GrpcHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcHeader) ProtoMessage() {}

func (x *GrpcHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcHeader.ProtoReflect.Descriptor instead.
func (*GrpcHeader) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{13}
}

func (x *GrpcHeader) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GrpcHeader) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TraceIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TraceIDRequest) Reset() {
	*x = TraceIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceIDRequest) ProtoMessage() {}

func (x *TraceIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceIDRequest.ProtoReflect.Descriptor instead.
func (*TraceIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{14}
}

func (x *TraceIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TriggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestID        string         `protobuf:"bytes,1,opt,name=testID,proto3" json:"testID,omitempty"`
	RunID         int32          `protobuf:"varint,2,opt,name=runID,proto3" json:"runID,omitempty"`
	TriggerResult *TriggerResult `protobuf:"bytes,3,opt,name=triggerResult,proto3" json:"triggerResult,omitempty"`
}

func (x *TriggerResponse) Reset() {
	*x = TriggerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerResponse) ProtoMessage() {}

func (x *TriggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerResponse.ProtoReflect.Descriptor instead.
func (*TriggerResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{15}
}

func (x *TriggerResponse) GetTestID() string {
	if x != nil {
		return x.TestID
	}
	return ""
}

func (x *TriggerResponse) GetRunID() int32 {
	if x != nil {
		return x.RunID
	}
	return 0
}

func (x *TriggerResponse) GetTriggerResult() *TriggerResult {
	if x != nil {
		return x.TriggerResult
	}
	return nil
}

type TriggerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            string           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Http            *HttpResponse    `protobuf:"bytes,2,opt,name=http,proto3" json:"http,omitempty"`
	Grpc            *GrpcResponse    `protobuf:"bytes,3,opt,name=grpc,proto3" json:"grpc,omitempty"`
	TraceIDResponse *TraceIdResponse `protobuf:"bytes,4,opt,name=traceIDResponse,proto3" json:"traceIDResponse,omitempty"`
}

func (x *TriggerResult) Reset() {
	*x = TriggerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerResult) ProtoMessage() {}

func (x *TriggerResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerResult.ProtoReflect.Descriptor instead.
func (*TriggerResult) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{16}
}

func (x *TriggerResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TriggerResult) GetHttp() *HttpResponse {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *TriggerResult) GetGrpc() *GrpcResponse {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *TriggerResult) GetTraceIDResponse() *TraceIdResponse {
	if x != nil {
		return x.TraceIDResponse
	}
	return nil
}

type HttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32         `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Status     string        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Headers    []*HttpHeader `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	Body       string        `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{17}
}

func (x *HttpResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HttpResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HttpResponse) GetHeaders() []*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type GrpcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32         `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Metadata   []*GrpcHeader `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
	Body       string        `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GrpcResponse) Reset() {
	*x = GrpcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcResponse) ProtoMessage() {}

func (x *GrpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcResponse.ProtoReflect.Descriptor instead.
func (*GrpcResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{18}
}

func (x *GrpcResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GrpcResponse) GetMetadata() []*GrpcHeader {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GrpcResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type TraceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TraceIdResponse) Reset() {
	*x = TraceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceIdResponse) ProtoMessage() {}

func (x *TraceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceIdResponse.ProtoReflect.Descriptor instead.
func (*TraceIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{19}
}

func (x *TraceIdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PollingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestID    string     `protobuf:"bytes,1,opt,name=testID,proto3" json:"testID,omitempty"`
	RunID     int32      `protobuf:"varint,2,opt,name=runID,proto3" json:"runID,omitempty"`
	TraceID   string     `protobuf:"bytes,3,opt,name=traceID,proto3" json:"traceID,omitempty"`
	Datastore *DataStore `protobuf:"bytes,4,opt,name=datastore,proto3" json:"datastore,omitempty"`
}

func (x *PollingRequest) Reset() {
	*x = PollingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingRequest) ProtoMessage() {}

func (x *PollingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingRequest.ProtoReflect.Descriptor instead.
func (*PollingRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{20}
}

func (x *PollingRequest) GetTestID() string {
	if x != nil {
		return x.TestID
	}
	return ""
}

func (x *PollingRequest) GetRunID() int32 {
	if x != nil {
		return x.RunID
	}
	return 0
}

func (x *PollingRequest) GetTraceID() string {
	if x != nil {
		return x.TraceID
	}
	return ""
}

func (x *PollingRequest) GetDatastore() *DataStore {
	if x != nil {
		return x.Datastore
	}
	return nil
}

type DataStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string                  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Jaeger           *JaegerConfig           `protobuf:"bytes,2,opt,name=jaeger,proto3" json:"jaeger,omitempty"`
	Tempo            *TempoConfig            `protobuf:"bytes,3,opt,name=tempo,proto3" json:"tempo,omitempty"`
	Opensearch       *ElasticConfig          `protobuf:"bytes,4,opt,name=opensearch,proto3" json:"opensearch,omitempty"`
	Elasticapm       *ElasticConfig          `protobuf:"bytes,5,opt,name=elasticapm,proto3" json:"elasticapm,omitempty"`
	Signalfx         *SignalfxConfig         `protobuf:"bytes,6,opt,name=signalfx,proto3" json:"signalfx,omitempty"`
	Awsxray          *AwsXRayConfig          `protobuf:"bytes,7,opt,name=awsxray,proto3" json:"awsxray,omitempty"`
	Azureappinsights *AzureAppInsightsConfig `protobuf:"bytes,8,opt,name=azureappinsights,proto3" json:"azureappinsights,omitempty"`
}

func (x *DataStore) Reset() {
	*x = DataStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStore) ProtoMessage() {}

func (x *DataStore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStore.ProtoReflect.Descriptor instead.
func (*DataStore) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{21}
}

func (x *DataStore) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataStore) GetJaeger() *JaegerConfig {
	if x != nil {
		return x.Jaeger
	}
	return nil
}

func (x *DataStore) GetTempo() *TempoConfig {
	if x != nil {
		return x.Tempo
	}
	return nil
}

func (x *DataStore) GetOpensearch() *ElasticConfig {
	if x != nil {
		return x.Opensearch
	}
	return nil
}

func (x *DataStore) GetElasticapm() *ElasticConfig {
	if x != nil {
		return x.Elasticapm
	}
	return nil
}

func (x *DataStore) GetSignalfx() *SignalfxConfig {
	if x != nil {
		return x.Signalfx
	}
	return nil
}

func (x *DataStore) GetAwsxray() *AwsXRayConfig {
	if x != nil {
		return x.Awsxray
	}
	return nil
}

func (x *DataStore) GetAzureappinsights() *AzureAppInsightsConfig {
	if x != nil {
		return x.Azureappinsights
	}
	return nil
}

type JaegerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grpc *GrpcClientSettings `protobuf:"bytes,1,opt,name=grpc,proto3" json:"grpc,omitempty"`
}

func (x *JaegerConfig) Reset() {
	*x = JaegerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JaegerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JaegerConfig) ProtoMessage() {}

func (x *JaegerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JaegerConfig.ProtoReflect.Descriptor instead.
func (*JaegerConfig) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{22}
}

func (x *JaegerConfig) GetGrpc() *GrpcClientSettings {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type TempoConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Http *HttpClientSettings `protobuf:"bytes,2,opt,name=http,proto3" json:"http,omitempty"`
	Grpc *GrpcClientSettings `protobuf:"bytes,3,opt,name=grpc,proto3" json:"grpc,omitempty"`
}

func (x *TempoConfig) Reset() {
	*x = TempoConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempoConfig) ProtoMessage() {}

func (x *TempoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempoConfig.ProtoReflect.Descriptor instead.
func (*TempoConfig) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{23}
}

func (x *TempoConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TempoConfig) GetHttp() *HttpClientSettings {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *TempoConfig) GetGrpc() *GrpcClientSettings {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type ElasticConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses          []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Username           string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password           string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Index              string   `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
	Certificate        string   `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"`
	InsecureSkipVerify bool     `protobuf:"varint,6,opt,name=insecureSkipVerify,proto3" json:"insecureSkipVerify,omitempty"`
}

func (x *ElasticConfig) Reset() {
	*x = ElasticConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElasticConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticConfig) ProtoMessage() {}

func (x *ElasticConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticConfig.ProtoReflect.Descriptor instead.
func (*ElasticConfig) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{24}
}

func (x *ElasticConfig) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *ElasticConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ElasticConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ElasticConfig) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *ElasticConfig) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *ElasticConfig) GetInsecureSkipVerify() bool {
	if x != nil {
		return x.InsecureSkipVerify
	}
	return false
}

type SignalfxConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Realm string `protobuf:"bytes,1,opt,name=realm,proto3" json:"realm,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SignalfxConfig) Reset() {
	*x = SignalfxConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalfxConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalfxConfig) ProtoMessage() {}

func (x *SignalfxConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalfxConfig.ProtoReflect.Descriptor instead.
func (*SignalfxConfig) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{25}
}

func (x *SignalfxConfig) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *SignalfxConfig) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AwsXRayConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region          string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	AccessKeyId     string `protobuf:"bytes,2,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`
	SecretAccessKey string `protobuf:"bytes,3,opt,name=secretAccessKey,proto3" json:"secretAccessKey,omitempty"`
	SessionToken    string `protobuf:"bytes,4,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	UseDefaultAuth  bool   `protobuf:"varint,5,opt,name=useDefaultAuth,proto3" json:"useDefaultAuth,omitempty"`
}

func (x *AwsXRayConfig) Reset() {
	*x = AwsXRayConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsXRayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsXRayConfig) ProtoMessage() {}

func (x *AwsXRayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsXRayConfig.ProtoReflect.Descriptor instead.
func (*AwsXRayConfig) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{26}
}

func (x *AwsXRayConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AwsXRayConfig) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AwsXRayConfig) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AwsXRayConfig) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *AwsXRayConfig) GetUseDefaultAuth() bool {
	if x != nil {
		return x.UseDefaultAuth
	}
	return false
}

type AzureAppInsightsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseAzureActiveDirectoryAuth bool   `protobuf:"varint,1,opt,name=useAzureActiveDirectoryAuth,proto3" json:"useAzureActiveDirectoryAuth,omitempty"`
	AccessToken                 string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	ConnectionType              string `protobuf:"bytes,3,opt,name=connectionType,proto3" json:"connectionType,omitempty"`
	ResourceArmId               string `protobuf:"bytes,4,opt,name=resourceArmId,proto3" json:"resourceArmId,omitempty"`
}

func (x *AzureAppInsightsConfig) Reset() {
	*x = AzureAppInsightsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureAppInsightsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureAppInsightsConfig) ProtoMessage() {}

func (x *AzureAppInsightsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureAppInsightsConfig.ProtoReflect.Descriptor instead.
func (*AzureAppInsightsConfig) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{27}
}

func (x *AzureAppInsightsConfig) GetUseAzureActiveDirectoryAuth() bool {
	if x != nil {
		return x.UseAzureActiveDirectoryAuth
	}
	return false
}

func (x *AzureAppInsightsConfig) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AzureAppInsightsConfig) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *AzureAppInsightsConfig) GetResourceArmId() string {
	if x != nil {
		return x.ResourceArmId
	}
	return ""
}

type HttpClientSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            string              `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Headers        []*HttpHeader       `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	Tls            *TLS                `protobuf:"bytes,3,opt,name=tls,proto3" json:"tls,omitempty"`
	Authentication *HttpAuthentication `protobuf:"bytes,4,opt,name=authentication,proto3" json:"authentication,omitempty"`
}

func (x *HttpClientSettings) Reset() {
	*x = HttpClientSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpClientSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpClientSettings) ProtoMessage() {}

func (x *HttpClientSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpClientSettings.ProtoReflect.Descriptor instead.
func (*HttpClientSettings) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{28}
}

func (x *HttpClientSettings) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpClientSettings) GetHeaders() []*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpClientSettings) GetTls() *TLS {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *HttpClientSettings) GetAuthentication() *HttpAuthentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

type GrpcClientSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string              `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	ReadBufferSize  int64               `protobuf:"varint,2,opt,name=readBufferSize,proto3" json:"readBufferSize,omitempty"`
	WriteBufferSize int64               `protobuf:"varint,3,opt,name=writeBufferSize,proto3" json:"writeBufferSize,omitempty"`
	WaitForReady    bool                `protobuf:"varint,4,opt,name=waitForReady,proto3" json:"waitForReady,omitempty"`
	Headers         *HttpHeader         `protobuf:"bytes,5,opt,name=headers,proto3" json:"headers,omitempty"`
	BalancerName    string              `protobuf:"bytes,6,opt,name=balancerName,proto3" json:"balancerName,omitempty"`
	Compression     string              `protobuf:"bytes,7,opt,name=compression,proto3" json:"compression,omitempty"`
	Tls             *TLS                `protobuf:"bytes,8,opt,name=tls,proto3" json:"tls,omitempty"`
	Auth            *HttpAuthentication `protobuf:"bytes,9,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GrpcClientSettings) Reset() {
	*x = GrpcClientSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcClientSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcClientSettings) ProtoMessage() {}

func (x *GrpcClientSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcClientSettings.ProtoReflect.Descriptor instead.
func (*GrpcClientSettings) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{29}
}

func (x *GrpcClientSettings) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GrpcClientSettings) GetReadBufferSize() int64 {
	if x != nil {
		return x.ReadBufferSize
	}
	return 0
}

func (x *GrpcClientSettings) GetWriteBufferSize() int64 {
	if x != nil {
		return x.WriteBufferSize
	}
	return 0
}

func (x *GrpcClientSettings) GetWaitForReady() bool {
	if x != nil {
		return x.WaitForReady
	}
	return false
}

func (x *GrpcClientSettings) GetHeaders() *HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GrpcClientSettings) GetBalancerName() string {
	if x != nil {
		return x.BalancerName
	}
	return ""
}

func (x *GrpcClientSettings) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

func (x *GrpcClientSettings) GetTls() *TLS {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *GrpcClientSettings) GetAuth() *HttpAuthentication {
	if x != nil {
		return x.Auth
	}
	return nil
}

type TLS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insecure           bool        `protobuf:"varint,1,opt,name=insecure,proto3" json:"insecure,omitempty"`
	InsecureSkipVerify bool        `protobuf:"varint,2,opt,name=insecureSkipVerify,proto3" json:"insecureSkipVerify,omitempty"`
	ServerName         string      `protobuf:"bytes,3,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Settings           *TLSSetting `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *TLS) Reset() {
	*x = TLS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS) ProtoMessage() {}

func (x *TLS) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLS.ProtoReflect.Descriptor instead.
func (*TLS) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{30}
}

func (x *TLS) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *TLS) GetInsecureSkipVerify() bool {
	if x != nil {
		return x.InsecureSkipVerify
	}
	return false
}

func (x *TLS) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *TLS) GetSettings() *TLSSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

type TLSSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CAFile     string `protobuf:"bytes,1,opt,name=cAFile,proto3" json:"cAFile,omitempty"`
	CertFile   string `protobuf:"bytes,2,opt,name=certFile,proto3" json:"certFile,omitempty"`
	KeyFile    string `protobuf:"bytes,3,opt,name=keyFile,proto3" json:"keyFile,omitempty"`
	MinVersion string `protobuf:"bytes,4,opt,name=minVersion,proto3" json:"minVersion,omitempty"`
	MaxVersion string `protobuf:"bytes,5,opt,name=maxVersion,proto3" json:"maxVersion,omitempty"`
}

func (x *TLSSetting) Reset() {
	*x = TLSSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSSetting) ProtoMessage() {}

func (x *TLSSetting) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSSetting.ProtoReflect.Descriptor instead.
func (*TLSSetting) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{31}
}

func (x *TLSSetting) GetCAFile() string {
	if x != nil {
		return x.CAFile
	}
	return ""
}

func (x *TLSSetting) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *TLSSetting) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *TLSSetting) GetMinVersion() string {
	if x != nil {
		return x.MinVersion
	}
	return ""
}

func (x *TLSSetting) GetMaxVersion() string {
	if x != nil {
		return x.MaxVersion
	}
	return ""
}

type PollingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestID  string  `protobuf:"bytes,1,opt,name=testID,proto3" json:"testID,omitempty"`
	RunID   int32   `protobuf:"varint,2,opt,name=runID,proto3" json:"runID,omitempty"`
	TraceID string  `protobuf:"bytes,3,opt,name=traceID,proto3" json:"traceID,omitempty"`
	Spans   []*Span `protobuf:"bytes,4,rep,name=spans,proto3" json:"spans,omitempty"`
}

func (x *PollingResponse) Reset() {
	*x = PollingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingResponse) ProtoMessage() {}

func (x *PollingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingResponse.ProtoReflect.Descriptor instead.
func (*PollingResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{32}
}

func (x *PollingResponse) GetTestID() string {
	if x != nil {
		return x.TestID
	}
	return ""
}

func (x *PollingResponse) GetRunID() int32 {
	if x != nil {
		return x.RunID
	}
	return 0
}

func (x *PollingResponse) GetTraceID() string {
	if x != nil {
		return x.TraceID
	}
	return ""
}

func (x *PollingResponse) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId   string          `protobuf:"bytes,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Name       string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Kind       string          `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	StartTime  int64           `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64           `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Attributes []*KeyValuePair `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{33}
}

func (x *Span) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Span) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Span) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Span) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Span) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Span) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Span) GetAttributes() []*KeyValuePair {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orchestrator_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{34}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_proto_orchestrator_proto protoreflect.FileDescriptor

var file_proto_orchestrator_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3c, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
	0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22,
	0x9e, 0x01, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12,
	0x2f, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44,
	0x22, 0xe5, 0x01, 0x0a, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2b,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x53, 0x53, 0x4c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x53, 0x53, 0x4c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc4,
	0x01, 0x0a, 0x12, 0x48, 0x74, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x12, 0x33, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x14, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x6e, 0x22, 0x4d, 0x0a, 0x13, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x2c, 0x0a, 0x14, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x89, 0x02, 0x0a, 0x0b, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34,
	0x0a, 0x0a, 0x47, 0x72, 0x70, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x0f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x68, 0x74, 0x74,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x40, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x01,
	0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x71, 0x0a, 0x0c, 0x47, 0x72, 0x70, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x21, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x88, 0x01,
	0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6a, 0x61,
	0x65, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4a, 0x61, 0x65, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x6a, 0x61, 0x65, 0x67, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x12, 0x34, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x61, 0x70, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x61, 0x70, 0x6d, 0x12, 0x31, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x66, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x66, 0x78,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x66, 0x78,
	0x12, 0x2e, 0x0a, 0x07, 0x61, 0x77, 0x73, 0x78, 0x72, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x77, 0x73, 0x58, 0x52, 0x61,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x61, 0x77, 0x73, 0x78, 0x72, 0x61, 0x79,
	0x12, 0x49, 0x0a, 0x10, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x0c, 0x4a,
	0x61, 0x65, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x67,
	0x72, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x7f, 0x0a, 0x0b, 0x54, 0x65,
	0x6d, 0x70, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a,
	0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x2d, 0x0a, 0x04,
	0x67, 0x72, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0xcd, 0x01, 0x0a, 0x0d,
	0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69,
	0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x22, 0x3c, 0x0a, 0x0e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x66, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbf, 0x01, 0x0a, 0x0d, 0x41, 0x77,
	0x73, 0x58, 0x52, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x74, 0x68, 0x22, 0xca, 0x01, 0x0a, 0x16,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x1b, 0x75, 0x73, 0x65, 0x41, 0x7a, 0x75,
	0x72, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x75, 0x73, 0x65,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x72, 0x6d, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x12, 0x48, 0x74, 0x74,
	0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x2b, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1c,
	0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x53, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe6, 0x02, 0x0a, 0x12, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x03, 0x74,
	0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x4c, 0x53, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xa0, 0x01, 0x0a, 0x03, 0x54, 0x4c, 0x53,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x0a,
	0x54, 0x4c, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x41,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x41, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61,
	0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52,
	0x05, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x22, 0x36, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xd5, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x3b, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x13,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x39, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c,
	0x6c, 0x65, 0x64, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b,
	0x75, 0x62, 0x65, 0x73, 0x68, 0x6f, 0x70, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x74, 0x65, 0x73,
	0x74, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_orchestrator_proto_rawDescOnce sync.Once
	file_proto_orchestrator_proto_rawDescData = file_proto_orchestrator_proto_rawDesc
)

func file_proto_orchestrator_proto_rawDescGZIP() []byte {
	file_proto_orchestrator_proto_rawDescOnce.Do(func() {
		file_proto_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_orchestrator_proto_rawDescData)
	})
	return file_proto_orchestrator_proto_rawDescData
}

var file_proto_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_proto_orchestrator_proto_goTypes = []interface{}{
	(*Empty)(nil),                  // 0: proto.Empty
	(*ConnectRequest)(nil),         // 1: proto.ConnectRequest
	(*ConnectResponse)(nil),        // 2: proto.ConnectResponse
	(*SessionConfiguration)(nil),   // 3: proto.SessionConfiguration
	(*TriggerRequest)(nil),         // 4: proto.TriggerRequest
	(*Trigger)(nil),                // 5: proto.Trigger
	(*HttpRequest)(nil),            // 6: proto.HttpRequest
	(*HttpHeader)(nil),             // 7: proto.HttpHeader
	(*HttpAuthentication)(nil),     // 8: proto.HttpAuthentication
	(*ApiKeyAuthentication)(nil),   // 9: proto.ApiKeyAuthentication
	(*BasicAuthentication)(nil),    // 10: proto.BasicAuthentication
	(*BearerAuthentication)(nil),   // 11: proto.BearerAuthentication
	(*GrpcRequest)(nil),            // 12: proto.GrpcRequest
	(*GrpcHeader)(nil),             // 13: proto.GrpcHeader
	(*TraceIDRequest)(nil),         // 14: proto.TraceIDRequest
	(*TriggerResponse)(nil),        // 15: proto.TriggerResponse
	(*TriggerResult)(nil),          // 16: proto.TriggerResult
	(*HttpResponse)(nil),           // 17: proto.HttpResponse
	(*GrpcResponse)(nil),           // 18: proto.GrpcResponse
	(*TraceIdResponse)(nil),        // 19: proto.TraceIdResponse
	(*PollingRequest)(nil),         // 20: proto.PollingRequest
	(*DataStore)(nil),              // 21: proto.DataStore
	(*JaegerConfig)(nil),           // 22: proto.JaegerConfig
	(*TempoConfig)(nil),            // 23: proto.TempoConfig
	(*ElasticConfig)(nil),          // 24: proto.ElasticConfig
	(*SignalfxConfig)(nil),         // 25: proto.SignalfxConfig
	(*AwsXRayConfig)(nil),          // 26: proto.AwsXRayConfig
	(*AzureAppInsightsConfig)(nil), // 27: proto.AzureAppInsightsConfig
	(*HttpClientSettings)(nil),     // 28: proto.HttpClientSettings
	(*GrpcClientSettings)(nil),     // 29: proto.GrpcClientSettings
	(*TLS)(nil),                    // 30: proto.TLS
	(*TLSSetting)(nil),             // 31: proto.TLSSetting
	(*PollingResponse)(nil),        // 32: proto.PollingResponse
	(*Span)(nil),                   // 33: proto.Span
	(*KeyValuePair)(nil),           // 34: proto.KeyValuePair
}
var file_proto_orchestrator_proto_depIdxs = []int32{
	3,  // 0: proto.ConnectResponse.configuration:type_name -> proto.SessionConfiguration
	5,  // 1: proto.TriggerRequest.trigger:type_name -> proto.Trigger
	6,  // 2: proto.Trigger.http:type_name -> proto.HttpRequest
	12, // 3: proto.Trigger.grpc:type_name -> proto.GrpcRequest
	14, // 4: proto.Trigger.traceID:type_name -> proto.TraceIDRequest
	7,  // 5: proto.HttpRequest.headers:type_name -> proto.HttpHeader
	8,  // 6: proto.HttpRequest.authentication:type_name -> proto.HttpAuthentication
	9,  // 7: proto.HttpAuthentication.apiKey:type_name -> proto.ApiKeyAuthentication
	10, // 8: proto.HttpAuthentication.basic:type_name -> proto.BasicAuthentication
	11, // 9: proto.HttpAuthentication.bearer:type_name -> proto.BearerAuthentication
	8,  // 10: proto.GrpcRequest.authentication:type_name -> proto.HttpAuthentication
	13, // 11: proto.GrpcRequest.metadata:type_name -> proto.GrpcHeader
	16, // 12: proto.TriggerResponse.triggerResult:type_name -> proto.TriggerResult
	17, // 13: proto.TriggerResult.http:type_name -> proto.HttpResponse
	18, // 14: proto.TriggerResult.grpc:type_name -> proto.GrpcResponse
	19, // 15: proto.TriggerResult.traceIDResponse:type_name -> proto.TraceIdResponse
	7,  // 16: proto.HttpResponse.headers:type_name -> proto.HttpHeader
	13, // 17: proto.GrpcResponse.metadata:type_name -> proto.GrpcHeader
	21, // 18: proto.PollingRequest.datastore:type_name -> proto.DataStore
	22, // 19: proto.DataStore.jaeger:type_name -> proto.JaegerConfig
	23, // 20: proto.DataStore.tempo:type_name -> proto.TempoConfig
	24, // 21: proto.DataStore.opensearch:type_name -> proto.ElasticConfig
	24, // 22: proto.DataStore.elasticapm:type_name -> proto.ElasticConfig
	25, // 23: proto.DataStore.signalfx:type_name -> proto.SignalfxConfig
	26, // 24: proto.DataStore.awsxray:type_name -> proto.AwsXRayConfig
	27, // 25: proto.DataStore.azureappinsights:type_name -> proto.AzureAppInsightsConfig
	29, // 26: proto.JaegerConfig.grpc:type_name -> proto.GrpcClientSettings
	28, // 27: proto.TempoConfig.http:type_name -> proto.HttpClientSettings
	29, // 28: proto.TempoConfig.grpc:type_name -> proto.GrpcClientSettings
	7,  // 29: proto.HttpClientSettings.headers:type_name -> proto.HttpHeader
	30, // 30: proto.HttpClientSettings.tls:type_name -> proto.TLS
	8,  // 31: proto.HttpClientSettings.authentication:type_name -> proto.HttpAuthentication
	7,  // 32: proto.GrpcClientSettings.headers:type_name -> proto.HttpHeader
	30, // 33: proto.GrpcClientSettings.tls:type_name -> proto.TLS
	8,  // 34: proto.GrpcClientSettings.auth:type_name -> proto.HttpAuthentication
	31, // 35: proto.TLS.settings:type_name -> proto.TLSSetting
	33, // 36: proto.PollingResponse.spans:type_name -> proto.Span
	34, // 37: proto.Span.attributes:type_name -> proto.KeyValuePair
	1,  // 38: proto.Orchestrator.Connect:input_type -> proto.ConnectRequest
	1,  // 39: proto.Orchestrator.RegisterTriggerAgent:input_type -> proto.ConnectRequest
	15, // 40: proto.Orchestrator.SendTriggerResult:input_type -> proto.TriggerResponse
	1,  // 41: proto.Orchestrator.RegisterPollerAgent:input_type -> proto.ConnectRequest
	32, // 42: proto.Orchestrator.SendPolledSpans:input_type -> proto.PollingResponse
	2,  // 43: proto.Orchestrator.Connect:output_type -> proto.ConnectResponse
	4,  // 44: proto.Orchestrator.RegisterTriggerAgent:output_type -> proto.TriggerRequest
	0,  // 45: proto.Orchestrator.SendTriggerResult:output_type -> proto.Empty
	20, // 46: proto.Orchestrator.RegisterPollerAgent:output_type -> proto.PollingRequest
	0,  // 47: proto.Orchestrator.SendPolledSpans:output_type -> proto.Empty
	43, // [43:48] is the sub-list for method output_type
	38, // [38:43] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_proto_orchestrator_proto_init() }
func file_proto_orchestrator_proto_init() {
	if File_proto_orchestrator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_orchestrator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeyAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BearerAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JaegerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempoConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElasticConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalfxConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsXRayConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureAppInsightsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpClientSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcClientSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orchestrator_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_orchestrator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_orchestrator_proto_goTypes,
		DependencyIndexes: file_proto_orchestrator_proto_depIdxs,
		MessageInfos:      file_proto_orchestrator_proto_msgTypes,
	}.Build()
	File_proto_orchestrator_proto = out.File
	file_proto_orchestrator_proto_rawDesc = nil
	file_proto_orchestrator_proto_goTypes = nil
	file_proto_orchestrator_proto_depIdxs = nil
}
