"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[9247],{38701:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=n(74848),i=n(28453);const r={id:"add-item-into-shopping-cart",title:"OpenTelemetry Store - Add item into the shopping cart",description:"The OpenTelemetry Demo is an example application published by the OpenTelemtry CNCF project. This use case covers adding a product from the catalog into a shopping cart.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},a=void 0,o={id:"live-examples/opentelemetry-store/use-cases/add-item-into-shopping-cart",title:"OpenTelemetry Store - Add item into the shopping cart",description:"The OpenTelemetry Demo is an example application published by the OpenTelemtry CNCF project. This use case covers adding a product from the catalog into a shopping cart.",source:"@site/docs/live-examples/opentelemetry-store/use-cases/add-item-into-shopping-cart.mdx",sourceDirName:"live-examples/opentelemetry-store/use-cases",slug:"/live-examples/opentelemetry-store/use-cases/add-item-into-shopping-cart",permalink:"/live-examples/opentelemetry-store/use-cases/add-item-into-shopping-cart",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/live-examples/opentelemetry-store/use-cases/add-item-into-shopping-cart.mdx",tags:[],version:"current",frontMatter:{id:"add-item-into-shopping-cart",title:"OpenTelemetry Store - Add item into the shopping cart",description:"The OpenTelemetry Demo is an example application published by the OpenTelemtry CNCF project. This use case covers adding a product from the catalog into a shopping cart.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"guidesSidebar",previous:{title:"OpenTelemetry Astronomy Shop Demo",permalink:"/live-examples/opentelemetry-store/overview"},next:{title:"OpenTelemetry Store - Check shopping cart contents",permalink:"/live-examples/opentelemetry-store/use-cases/check-shopping-cart-contents"}},c={},d=[{value:"Building a Test for This Scenario",id:"building-a-test-for-this-scenario",level:2},{value:"Traces",id:"traces",level:3},{value:"Assertions",id:"assertions",level:3},{value:"Test Definition",id:"test-definition",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"In this use case, we want to validate the following story:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"As a consumer\nI want to choose a product from the catalog\nAnd add it to my shopping cart\nSo I can continue to explore the catalog to fulfill my shopping list\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can trigger this use case by calling the endpoint ",(0,s.jsx)(t.code,{children:"POST /api/cart"})," from the Frontend service, with the following request body:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "item": {\n    "productId": "OLJCESPC7Z",\n    "quantity": 1\n  },\n  "userId": "2491f868-88f1-4345-8836-d5d8511a9f83"\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"It should return a payload similar to this:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "userId": "2491f868-88f1-4345-8836-d5d8511a9f83",\n  "items": [\n    {\n      "productId": "OLJCESPC7Z",\n      "quantity": 1\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"building-a-test-for-this-scenario",children:"Building a Test for This Scenario"}),"\n",(0,s.jsxs)(t.p,{children:["Using Tracetest, we can ",(0,s.jsx)(t.a,{href:"/web-ui/creating-tests",children:"create a test"})," that will execute an API call on ",(0,s.jsx)(t.code,{children:"POST /api/cart"})," and validate the following properties:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The correct ProductID was sent to the Product Catalog API."}),"\n",(0,s.jsx)(t.li,{children:"The product persisted correctly on the shopping cart."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"traces",children:"Traces"}),"\n",(0,s.jsxs)(t.p,{children:["Running these tests for the first time will create an Observability trace like the image below, where you can see spans for the API calls (HTTP and gRPC) and database calls:\n",(0,s.jsx)(t.img,{src:n(63814).A+"",width:"2632",height:"1828"})]}),"\n",(0,s.jsx)(t.h3,{id:"assertions",children:"Assertions"}),"\n",(0,s.jsxs)(t.p,{children:["With this trace, now we can build ",(0,s.jsx)(t.a,{href:"/concepts/assertions",children:"assertions"})," on Tracetest and validate the properties:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"The correct ProductID was sent to the Product Catalog API."}),"\n",(0,s.jsx)(t.img,{src:n(50806).A+"",width:"3394",height:"866"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"The product persisted correctly on the shopping cart."}),"\n",(0,s.jsx)(t.img,{src:n(16300).A+"",width:"3404",height:"784"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Now, you can validate this entire use case."}),"\n",(0,s.jsx)(t.h3,{id:"test-definition",children:"Test Definition"}),"\n",(0,s.jsxs)(t.p,{children:["To replicate this entire test on Tracetest, you can replicate these steps on our Web UI or using our CLI, saving the following test definition as the file ",(0,s.jsx)(t.code,{children:"test-definition.yml"})," and later running:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"tracetest run test -f test-definition.yml\n"})}),"\n",(0,s.jsxs)(t.p,{children:["We are assuming that the Frontend service is exposed on ",(0,s.jsx)(t.code,{children:"http://otel-demo-frontend:8080"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'type: Test\nspec:\n  name: Add product to the cart\n  description: Add a selected product to user shopping cart\n  trigger:\n    type: http\n    httpRequest:\n      url: http://otel-demo-frontend:8080/api/cart\n      method: POST\n      headers:\n      - key: Content-Type\n        value: application/json\n      body: \'{"item":{"productId":"OLJCESPC7Z","quantity":1},"userId":"2491f868-88f1-4345-8836-d5d8511a9f83"}\'\n  specs:\n  - selector: span[tracetest.span.type="http" name="hipstershop.CartService/AddItem"]\n     # checking if the correct ProductID was sent\n    assertions:\n    - attr:app.product.id = "OLJCESPC7Z"\n  - selector: span[tracetest.span.type="database" name="HMSET" db.system="redis" db.redis.database_index="0"]\n    # checking if the product was persisted correctly on the shopping cart\n    assertions:\n    - attr:tracetest.selected_spans.count >= 1\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},50806:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/add-item-into-shopping-cart-api-test-spec-23f4a07c151df2fc7e0a0ad393060673.png"},16300:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/add-item-into-shopping-cart-db-test-spec-5ccf61bac2522cf7c1f3cd93e04f72c8.png"},63814:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/add-item-into-shopping-cart-trace-34b3e9a3a5e271a19425b5df3f6ba6ed.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);