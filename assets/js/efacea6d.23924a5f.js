"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[6166],{61227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=n(74848),i=n(28453);const r={id:"synthetic-monitoring-trace-based-api-tests",title:"Synthetic Monitoring with Trace-based API Tests",description:"Quick start how to configure Synthetic Monitoring with Trace-based API tests with a Node.js app using OpenTelemetry manual instrumentation with traces.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","nodejs","testing nodejs","nodejs observability","nodejs tracing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},a=void 0,o={id:"examples-tutorials/recipes/synthetic-monitoring-trace-based-api-tests",title:"Synthetic Monitoring with Trace-based API Tests",description:"Quick start how to configure Synthetic Monitoring with Trace-based API tests with a Node.js app using OpenTelemetry manual instrumentation with traces.",source:"@site/docs/examples-tutorials/recipes/synthetic-monitoring-trace-based-api-tests.mdx",sourceDirName:"examples-tutorials/recipes",slug:"/examples-tutorials/recipes/synthetic-monitoring-trace-based-api-tests",permalink:"/examples-tutorials/recipes/synthetic-monitoring-trace-based-api-tests",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/examples-tutorials/recipes/synthetic-monitoring-trace-based-api-tests.mdx",tags:[],version:"current",frontMatter:{id:"synthetic-monitoring-trace-based-api-tests",title:"Synthetic Monitoring with Trace-based API Tests",description:"Quick start how to configure Synthetic Monitoring with Trace-based API tests with a Node.js app using OpenTelemetry manual instrumentation with traces.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","nodejs","testing nodejs","nodejs observability","nodejs tracing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"guidesSidebar",previous:{title:"Trace-Based Tests with the Tracetest GraphQL Trigger",permalink:"/examples-tutorials/recipes/running-tests-with-tracetest-graphql-pokeshop"},next:{title:"Synthetic Monitoring with Trace-based Playwright Tests",permalink:"/examples-tutorials/recipes/synthetic-monitoring-trace-based-playwright-tests"}},c={},l=[{value:"Basic Node.js API with OpenTelemetry",id:"basic-nodejs-api-with-opentelemetry",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Run This Quckstart Example",id:"run-this-quckstart-example",level:2},{value:"Running the Node.js App and Tracetest",id:"running-the-nodejs-app-and-tracetest",level:2},{value:"Run Synthetic Monitoring",id:"run-synthetic-monitoring",level:2},{value:"Learn More",id:"learn-more",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples/quick-start-nodejs-synthetic-monitoring",children:"Check out the source code on GitHub here."})})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://tracetest.io/",children:"Tracetest"})," is a synthetic monitoring and testing tool based on ",(0,s.jsx)(t.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," that allows you to test distributed apps. You can use data from distributed traces generated by OpenTelemetry to validate and assert the functionality of your apps."]}),"\n",(0,s.jsx)(t.h2,{id:"basic-nodejs-api-with-opentelemetry",children:"Basic Node.js API with OpenTelemetry"}),"\n",(0,s.jsx)(t.p,{children:"This is a simple quick start on how to configure a Node.js app to use OpenTelemetry instrumentation with traces, and Tracetest for trace-based testing and synthetic monitoring."}),"\n",(0,s.jsx)(t.admonition,{title:"source code",type:"info",children:(0,s.jsxs)(t.p,{children:["To view the full guide on how to configure the Node.js app, view ",(0,s.jsx)(t.a,{href:"/examples-tutorials/recipes/running-tracetest-without-a-trace-data-store-with-manual-instrumentation",children:"this recipe"}),". The rest of this recipe focuses on synthetic monitoring."]})}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Tracetest Account"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Sign up to ",(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"app.tracetest.io"})})," or follow the ",(0,s.jsx)(t.a,{href:"/getting-started/overview",children:"get started"})," docs."]}),"\n",(0,s.jsxs)(t.li,{children:["Have access to the environment's ",(0,s.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"agent API key"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Docker"}),": Have ",(0,s.jsx)(t.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," and ",(0,s.jsx)(t.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})," installed on your machine."]}),"\n",(0,s.jsx)(t.h2,{id:"run-this-quckstart-example",children:"Run This Quckstart Example"}),"\n",(0,s.jsx)(t.p,{children:"The example below is provided as part of the Tracetest project. You can download and run the example by following these steps:"}),"\n",(0,s.jsx)(t.p,{children:"Clone the Tracetest project and go to the Node.js Quickstart with Manual Instrumentation:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/kubeshop/tracetest\ncd tracetest/examples/quick-start-nodejs-synthetic-monitoring\n"})}),"\n",(0,s.jsx)(t.p,{children:"Follow these instructions to run the quick start:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Copy the ",(0,s.jsx)(t.code,{children:".env.template"})," file to ",(0,s.jsx)(t.code,{children:".env"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Fill out the ",(0,s.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"TRACETEST_TOKEN and ENVIRONMENT_ID"})," details by editing your ",(0,s.jsx)(t.code,{children:".env"})," file."]}),"\n",(0,s.jsxs)(t.li,{children:["Run ",(0,s.jsx)(t.code,{children:"docker compose run tracetest-run"}),"."]}),"\n",(0,s.jsx)(t.li,{children:"Follow the links in the output to view the test results."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Follow along with the sections below for an in detail breakdown of what the example you just ran did and how it works."}),"\n",(0,s.jsx)(t.h2,{id:"running-the-nodejs-app-and-tracetest",children:"Running the Node.js App and Tracetest"}),"\n",(0,s.jsx)(t.p,{children:"To start the full setup, run the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"docker compose run tracetest-run\n"})}),"\n",(0,s.jsx)(t.p,{children:"This will:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Start the Node.js app, the OpenTelemetry Collector, and send the traces to Tempo."}),"\n",(0,s.jsx)(t.li,{children:"Start the Tracetest Agent."}),"\n",(0,s.jsx)(t.li,{children:"Configure the tracing backend and create the monitor and tests in your environment."}),"\n",(0,s.jsx)(t.li,{children:"Run the tests."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The output of the test will look similar to this:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'Configuring Tracetest\n SUCCESS  Successfully configured Tracetest CLI\nRunning Trace-Based Tests...\n\u2718 RunGroup: #BakgyljIg (https://app.tracetest.io/organizations/xxx/environments/xxx/run/BakgyljIg)\n Summary: 0 passed, 1 failed, 0 pending\n  \u2718 Books list with availability (https://app.tracetest.io/organizations/xxx/environments/xxx/test/phAZcrT4B/run/4/test) - trace id: 27aea5374b4d0caa8cb5b986eb0b1762\n\t\u2714 span[tracetest.span.type="http" name="GET /books" http.target="/books" http.method="GET"]\n\t\t\u2714 #27186220b79017aa\n\t\t\t\u2714 attr:tracetest.span.duration  < 500ms (25ms)\n\t\u2714 span[tracetest.span.type="general" name="Books List"]\n\t\t\u2714 #48fcfad5fe4b70bb\n\t\t\t\u2714 attr:books.list.count = 3 (3)\n\t\u2714 span[tracetest.span.type="http" name="GET /availability/:bookId" http.method="GET"]\n\t\t\u2714 #ce6374a67450375c\n\t\t\t\u2714 attr:http.host = "availability:8080" (availability:8080)\n\t\t\u2714 #f470512997599d36\n\t\t\t\u2714 attr:http.host = "availability:8080" (availability:8080)\n\t\t\u2714 #2f9e722285ed8cdb\n\t\t\t\u2714 attr:http.host = "availability:8080" (availability:8080)\n\t\u2718 span[tracetest.span.type="general" name="Availablity check"]\n\t\t\u2714 #f93af70cc7f4383b\n\t\t\t\u2714 attr:isAvailable = "true" (true)\n\t\t\u2714 #89095118143dd135\n\t\t\t\u2714 attr:isAvailable = "true" (true)\n\t\t\u2718 #55b3371b8a9e8c59\n\t\t\t\u2718 attr:isAvailable = "true" (false) (https://app.tracetest.io/organizations/xxx/environments/xxx/test/phAZcrT4B/run/4/test?selectedAssertion=3&selectedSpan=55b3371b8a9e8c59)\n\n\t\u2718 Required gates\n\t\t\u2718 test-specs\n'})}),"\n",(0,s.jsx)(t.p,{children:"Follow the links in the output to view the run group and the test result on Tracetest."}),"\n",(0,s.jsxs)(t.p,{children:["The Docker file exposes the underlying Node.js app at ",(0,s.jsx)(t.code,{children:"http://localhost:8080/"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Open Tracetest and start creating tests using this environment! Make sure to use the ",(0,s.jsx)(t.code,{children:"http://app:8080/"})," URL in your test creation, because your Node.js app and the Tracetest agent are in the same network. This simple Node.js application only supports a GET operation against ",(0,s.jsx)(t.code,{children:"http://app:8080/"})," and should return the string 'Hello World'."]}),"\n",(0,s.jsx)(t.h2,{id:"run-synthetic-monitoring",children:"Run Synthetic Monitoring"}),"\n",(0,s.jsx)(t.p,{children:"The monitor will be automatically applied when running this example. You can find the Tracetest Monitor Definition and apply it directly yourself using the CLI."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"tracetest apply monitor -f ./resources/monitor.yaml\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This will start running the ",(0,s.jsx)(t.code,{children:"./resources/monitor.yaml"})," test every minute."]}),"\n",(0,s.jsx)(t.p,{children:"With the Web UI follow these steps to create a monitor."}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Select ",(0,s.jsx)(t.code,{children:"Monitors"})," in the ",(0,s.jsx)(t.a,{href:"https://app.tracetest.io/",children:"Tracetest"})," sidebar."]}),"\n",(0,s.jsxs)(t.li,{children:["Create a Monitor. Select a schedule and toggle the enable monitor switch.\n",(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1721921382/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_8fca16a31b8b6e24_monitors_page_1_guf2id.png",alt:"create a monitor"})]}),"\n",(0,s.jsxs)(t.li,{children:["Select the test you want to add to the Monitor.\n",(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1721921383/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_8fca16a31b8b6e24_monitors_page_1_1_dsbb1k.png",alt:"select tests for monitor"})]}),"\n",(0,s.jsxs)(t.li,{children:["Select the webhook you want to notify.\n",(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1721921382/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_8fca16a31b8b6e24_monitors_page_1_2_rzz5vm.png",alt:"select webhook"})]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.code,{children:"Create"})," and you will see the Monitor run.\n",(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1721921382/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_8fca16a31b8b6e24_monitors_page_1_3_pktmr0.png",alt:"monitor run overview"})]}),"\n",(0,s.jsxs)(t.li,{children:["To view the YAML definition for the Monitor, click ",(0,s.jsx)(t.code,{children:"Automate"}),".\n",(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1721921383/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_8fca16a31b8b6e24_monitors_page_1_4_ysjbnx.png",alt:"monitor automate overview"})]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["With this setup, your Monitor will trigger the ",(0,s.jsx)(t.code,{children:"Books list with availability"})," test, defined in ",(0,s.jsx)(t.code,{children:"./resources/test.yaml"}),", every 5 minutes."]}),"\n",(0,s.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,s.jsxs)(t.p,{children:["Feel free to check out our ",(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples",children:"examples in GitHub"})," and join our ",(0,s.jsx)(t.a,{href:"https://dub.sh/tracetest-community",children:"Slack Community"})," for more info!"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);