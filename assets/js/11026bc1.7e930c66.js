"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[9775],{91803:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=s(74848),i=s(28453);const a={id:"creating-tests-kafka",title:"Defining Kafka Tests as Text Files",description:"Tracetest enables developers to define tests as text files and run them using a CLI. Integrate the execution of tests in your existing CI pipeline.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},r=void 0,o={id:"cli/creating-tests-kafka",title:"Defining Kafka Tests as Text Files",description:"Tracetest enables developers to define tests as text files and run them using a CLI. Integrate the execution of tests in your existing CI pipeline.",source:"@site/docs/cli/creating-tests-kafka.mdx",sourceDirName:"cli",slug:"/cli/creating-tests-kafka",permalink:"/cli/creating-tests-kafka",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/cli/creating-tests-kafka.mdx",tags:[],version:"current",frontMatter:{id:"creating-tests-kafka",title:"Defining Kafka Tests as Text Files",description:"Tracetest enables developers to define tests as text files and run them using a CLI. Integrate the execution of tests in your existing CI pipeline.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Defining gRPC Tests as Text Files",permalink:"/cli/creating-tests-grpc"},next:{title:"Defining Playwright Engine Tests as Text Files",permalink:"/cli/creating-tests-playwright-engine"}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["When defining a Kafka trigger, you are required to define a ",(0,n.jsx)(t.code,{children:"kafka"})," object containing the request Tracetest will send to your system. You also define: ",(0,n.jsx)(t.code,{children:"brokerUrls"}),", ",(0,n.jsx)(t.code,{children:"topic"}),", ",(0,n.jsx)(t.code,{children:"headers"}),", ",(0,n.jsx)(t.code,{children:"messageKey"}),", and ",(0,n.jsx)(t.code,{children:"messageValue"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'trigger:\n  type: kafka\n  kafka:\n    brokerUrls:\n    - ${var:POKESHOP_KAFKA_BROKER}\n    topic: pokemon\n    headers: []\n    messageKey: snorlax-key\n    messageValue: "{\\"id\\":144}"\n'})})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(96540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);