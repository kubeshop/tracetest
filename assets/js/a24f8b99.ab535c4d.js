"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[5880],{81976:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>u,toc:()=>h});var a=n(74848),r=n(28453),s=n(49489),i=n(7227),l=n(2250);n(92945);const o={id:"install-agent",title:"Start Tracetest Agent",description:"Get started by starting Tracetest Agent! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",hide_table_of_contents:!0,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","tracetest agent"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},c=void 0,u={id:"getting-started/install-agent",title:"Start Tracetest Agent",description:"Get started by starting Tracetest Agent! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",source:"@site/docs/getting-started/install-agent.mdx",sourceDirName:"getting-started",slug:"/getting-started/install-agent",permalink:"/getting-started/install-agent",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/getting-started/install-agent.mdx",tags:[],version:"current",frontMatter:{id:"install-agent",title:"Start Tracetest Agent",description:"Get started by starting Tracetest Agent! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",hide_table_of_contents:!0,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","tracetest agent"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Install Tracetest CLI",permalink:"/getting-started/install-cli"},next:{title:"Create a Response-based Test",permalink:"/getting-started/create-response-based-test"}},d={},h=[];function p(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/concepts/agent",children:"Tracetest Agent"})," runs alongside your apps, in the same environment/network, to do two things:"]}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Run tests against your apps."}),"\n",(0,a.jsx)(t.li,{children:"Ingest traces from your apps."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"This page explains (1), how to start Tracetest Agent to enable running tests against your apps. Tracetest Agent can run either locally on your machine or as a container in Docker or Kubernetes."}),"\n",(0,a.jsxs)(s.A,{groupId:"installation",children:[(0,a.jsxs)(i.A,{value:"cli",label:"Tracetest CLI",default:!0,children:[(0,a.jsx)(l.A,{language:"text",title:"Terminal",children:"tracetest start --api-key <TRACETEST_API_KEY> --environment <TRACETEST_ENVIRONMENT_ID>"}),(0,a.jsx)(l.A,{language:"text",title:"Expected output:",children:"Tracetest start launches a lightweight agent. It enables you to run tests and collect traces with Tracetest.\nOnce started, Tracetest Agent exposes OTLP ports 4317 and 4318 to ingest traces via gRCP and HTTP.\n\n INFO  Running in desktop mode...\n INFO  Starting Agent with name...\nAgent is started! Leave the terminal open so tests can be run and traces gathered from this environment.\nYou can:\n> Open Tracetest in a browser to this environment\n  (Experimental) Open Dashboard\n  Stop this agent"})]}),(0,a.jsxs)(i.A,{value:"docker",label:"Docker",children:[(0,a.jsx)(l.A,{language:"js",title:"Terminal",children:'docker run  \\\n  --name tracetest-agent \\\n  -p 4317:4317 \\\n  -p 4318:4318 \\\n  -e TRACETEST_API_KEY="<TRACETEST_API_KEY>" \\\n  -e TRACETEST_ENVIRONMENT_ID="<TRACETEST_ENVIRONMENT_ID>" \\\n  kubeshop/tracetest-agent'}),(0,a.jsxs)(t.admonition,{title:"Docker Network",type:"note",children:[(0,a.jsxs)(t.p,{children:["Running a test against ",(0,a.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,a.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container."]}),(0,a.jsx)(t.p,{children:"To run tests against apps running on your local machine, you have two options:"}),(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Run Tracetest Agent locally with the ",(0,a.jsx)(t.code,{children:"tracetest start"})," command."]}),"\n",(0,a.jsxs)(t.li,{children:["Add Tracetest Agent to the same network and use service name mapping. ",(0,a.jsxs)(t.em,{children:["Example: Instead of running an app on ",(0,a.jsx)(t.code,{children:"localhost:8080"}),", add it to your Docker Compose file, connect it to the same network as your Tracetest Agent service, and use ",(0,a.jsx)(t.code,{children:"<service-name>:8080"})," in the URL field when creating a test."]})]}),"\n"]}),(0,a.jsx)(t.p,{children:"You can reach services running on your local machine using:"}),(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Linux (docker version < 20.10.0): ",(0,a.jsx)(t.code,{children:"172.17.0.1:8080"})]}),"\n",(0,a.jsxs)(t.li,{children:["MacOS (docker version >= 18.03) and Linux (docker version >= 20.10.0): ",(0,a.jsx)(t.code,{children:"host.docker.internal:8080"})]}),"\n"]})]})]}),(0,a.jsxs)(i.A,{value:"docker-compose",label:"Docker Compose",children:[(0,a.jsx)(l.A,{language:"yaml",title:"docker-compose.yaml",children:"tracetest-agent:\n  image: kubeshop/tracetest-agent\n  environment:\n    - TRACETEST_API_KEY=<TRACETEST_API_KEY>\n    - TRACETEST_ENVIRONMENT_ID=<TRACETEST_ENVIRONMENT_ID>\n  ports:\n    - 4317:4317\n    - 4318:4318"}),(0,a.jsxs)(t.admonition,{title:"Docker Network",type:"note",children:[(0,a.jsxs)(t.p,{children:["Running a test against ",(0,a.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,a.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container."]}),(0,a.jsx)(t.p,{children:"To run tests against apps running on your local machine you have two options:"}),(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Run Tracetest Agent locally with the ",(0,a.jsx)(t.code,{children:"tracetest start"})," command."]}),"\n",(0,a.jsxs)(t.li,{children:["Add Tracetest Agent to the same network and use service name mapping. ",(0,a.jsxs)(t.em,{children:["Example: Instead of running an app on ",(0,a.jsx)(t.code,{children:"localhost:8080"}),", add it to your Docker Compose file, connect it to the same network as your Tracetest Agent service, and use ",(0,a.jsx)(t.code,{children:"<service-name>:8080"})," in the URL field when creating a test."]})]}),"\n"]}),(0,a.jsx)(t.p,{children:"You can reach services running on your local machine using:"}),(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Linux (docker version < 20.10.0): ",(0,a.jsx)(t.code,{children:"172.17.0.1:8080"})]}),"\n",(0,a.jsxs)(t.li,{children:["MacOS (docker version >= 18.03) and Linux (docker version >= 20.10.0): ",(0,a.jsx)(t.code,{children:"host.docker.internal:8080"})]}),"\n"]})]})]}),(0,a.jsxs)(i.A,{value:"kubernetes",label:"Kubernetes",children:[(0,a.jsx)(l.A,{language:"yaml",title:"tracetest-agent.yaml",children:'---\n# Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: tracetest-agent\n  labels:\n    app.kubernetes.io/name: tracetest-agent\n    app.kubernetes.io/instance: tracetest-agent\nspec:\n  selector:\n    app.kubernetes.io/name: tracetest-agent\n    app.kubernetes.io/instance: tracetest-agent\n  ports:\n    - name: grpc-collector-entrypoint\n      protocol: TCP\n      port: 4317\n      targetPort: 4317\n    - name: http-collector-entrypoint\n      protocol: TCP\n      port: 4318\n      targetPort: 4318\n---\n# Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: tracetest-agent\n  labels:\n    app: tracetest-agent\n    app.kubernetes.io/name: tracetest-agent\n    app.kubernetes.io/instance: tracetest-agent\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: tracetest-agent\n      app.kubernetes.io/instance: tracetest-agent\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: tracetest-agent\n        app.kubernetes.io/instance: tracetest-agent\n    spec:\n      containers:\n        - name: agent\n          image: "kubeshop/tracetest-agent:latest"\n          imagePullPolicy: Always\n          args: [\n            "--environment",\n            "<TRACETEST_ENVIRONMENT_ID>", # Add your env id\n            "--api-key",\n            "$TRACETEST_API_KEY",\n            "--server-url",\n            "https://app.tracetest.io",\n          ]\n          env:\n          - name: TRACETEST_API_KEY\n            value: "<TRACETEST_API_KEY>" # Add your API key\n'}),(0,a.jsx)(l.A,{language:"css",title:"Terminal",children:"kubectl apply -f ./tracetest-agent.yaml"}),(0,a.jsxs)(t.admonition,{title:"K8s Network",type:"note",children:[(0,a.jsxs)(t.p,{children:["Make sure to check use the correct ",(0,a.jsx)(t.code,{children:"<service-name>"})," if you edit the Tracetest Agent ",(0,a.jsx)(t.code,{children:"service"})," name."]}),(0,a.jsxs)(t.p,{children:["Running a test against ",(0,a.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,a.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container.\nMake sure to run tests using the internal Kubernetes service networking eg: ",(0,a.jsx)(t.code,{children:"http://api.default.svc.cluster.local:port"}),"."]})]})]}),(0,a.jsxs)(i.A,{value:"helm",label:"Helm",children:[(0,a.jsx)(l.A,{language:"js",title:"Terminal",children:"helm repo add tracetestcloud https://kubeshop.github.io/tracetest-cloud-charts --force-update && \\\n\nhelm install agent tracetestcloud/tracetest-agent \\\n--set agent.apiKey=<TRACETEST_API_KEY> --set agent.environmentId=<TRACETEST_ENVIRONMENT_ID>"}),(0,a.jsx)(t.admonition,{title:"K8s Network",type:"note",children:(0,a.jsxs)(t.p,{children:["Running a test against ",(0,a.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,a.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container.\nMake sure to run tests using the internal Kubernetes service networking eg: ",(0,a.jsx)(t.code,{children:"http://pokeshop-pokemon-api:8081"}),"."]})})]})]})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},7227:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var a=n(34164);const r={tabItem:"tabItem_Ymn6"};var s=n(74848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:n,children:t})}},49489:(e,t,n)=>{n.d(t,{A:()=>k});var a=n(96540),r=n(34164),s=n(24245),i=n(56347),l=n(36494),o=n(62814),c=n(45167),u=n(81269);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=h(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[c,d]=g({queryString:n,groupId:r}),[m,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,u.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),T=(()=>{const e=c??m;return p({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{T&&o(T)}),[T]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=n(11062);const T={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function v(e){let{className:t,block:n,selectedValue:a,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const t=e.currentTarget,n=o.indexOf(t),r=l[n].value;r!==a&&(c(t),i(r))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>o.push(e),onKeyDown:d,onClick:u,...s,className:(0,r.A)("tabs__item",T.tabItem,s?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function y(e){const t=m(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",T.tabList),children:[(0,x.jsx)(v,{...e,...t}),(0,x.jsx)(j,{...e,...t})]})}function k(e){const t=(0,b.A)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(t))}},92945:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);var a=n(49489),r=n(7227),s=n(2250),i=n(74848);function l(){function e(e){let{event:t,installationPlatform:n}=e;window.dataLayer=window.dataLayer||[],window.dataLayer.push({installationPlatform:n,event:"installationPlatform"})}return(0,i.jsxs)(a.A,{groupId:"operating-systems",children:[(0,i.jsx)(r.A,{value:"mac",label:"MAC",default:!0,children:(0,i.jsx)("div",{onClick:()=>e({installationPlatform:"MacOS"}),children:(0,i.jsx)(s.A,{language:"bash",title:"Terminal",children:"brew install kubeshop/tracetest/tracetest"})})}),(0,i.jsx)(r.A,{value:"linux",label:"LINUX",children:(0,i.jsx)("div",{onClick:()=>e({installationPlatform:"Linux"}),children:(0,i.jsx)(s.A,{language:"bash",title:"Terminal",children:"curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash"})})}),(0,i.jsx)(r.A,{value:"win",label:"WINDOWS",children:(0,i.jsx)("div",{onClick:()=>e({installationPlatform:"Windows"}),children:(0,i.jsx)(s.A,{language:"bash",title:"Terminal",children:"choco source add --name=kubeshop_repo --source=https://chocolatey.kubeshop.io/chocolatey ; choco install tracetest"})})})]})}}}]);