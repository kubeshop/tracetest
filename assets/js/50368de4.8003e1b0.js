"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[2328],{8371:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(74848),r=n(28453);const a={id:"deployment-architecture",title:"Deployment Architecture",description:"Tracetest contains a Control Plane which includes a Dashboard and Storage and an Agent running in your environment that runs tests and ingests traces. You can deploy Tracetest On-Prem or use the Cloud-based managed version.",keywords:["tracetest","trace-based testing","opentelemetry store demo","open telemetry demo","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},i=void 0,o={id:"install/deployment-architecture",title:"Deployment Architecture",description:"Tracetest contains a Control Plane which includes a Dashboard and Storage and an Agent running in your environment that runs tests and ingests traces. You can deploy Tracetest On-Prem or use the Cloud-based managed version.",source:"@site/docs/install/deployment-architecture.mdx",sourceDirName:"install",slug:"/install/deployment-architecture",permalink:"/install/deployment-architecture",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/install/deployment-architecture.mdx",tags:[],version:"current",frontMatter:{id:"deployment-architecture",title:"Deployment Architecture",description:"Tracetest contains a Control Plane which includes a Dashboard and Storage and an Agent running in your environment that runs tests and ingests traces. You can deploy Tracetest On-Prem or use the Cloud-based managed version.",keywords:["tracetest","trace-based testing","opentelemetry store demo","open telemetry demo","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},sidebar:"tutorialSidebar",previous:{title:"Install in GCP",permalink:"/install/gcp"},next:{title:"What is Trace-Based Testing",permalink:"/concepts/what-is-trace-based-testing"}},c={},l=[{value:"Enterprise Self-hosted Tracetest",id:"enterprise-self-hosted-tracetest",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"DNS",id:"dns",level:3},{value:"Cert Manager",id:"cert-manager",level:3},{value:"Traefik",id:"traefik",level:3},{value:"External Services",id:"external-services",level:3},{value:"PostgreSQL",id:"postgresql",level:4},{value:"MongoDB",id:"mongodb",level:4},{value:"SSO",id:"sso",level:3},{value:"Cloud-based Managed Tracetest",id:"cloud-based-managed-tracetest",level:2},{value:"Architecture",id:"architecture-1",level:2},{value:"Prerequisites",id:"prerequisites-1",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Tracetest contains two parts:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A Control Plane which includes the Dashboard, Database + Storage, RBAC, etc."}),"\n",(0,s.jsx)(t.li,{children:"An Agent running in your environment that runs tests and ingests traces."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"You can deploy Tracetest in two ways."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Deploy Tracetest Agent and use the Cloud-based managed Control Plane."}),"\n",(0,s.jsx)(t.li,{children:"Deploy both Tracetest Agent and Control Plane On-Prem."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"enterprise-self-hosted-tracetest",children:"Enterprise Self-hosted Tracetest"}),"\n",(0,s.jsx)(t.p,{children:"With Enterprise self-hosted Tracetest you deploy both the control plane and agent in your own infrastructure."}),"\n",(0,s.jsxs)(t.p,{children:["To deploy Enterprise self-hosted Tracetest follow the ",(0,s.jsx)(t.a,{href:"/install/on-prem-helm",children:"installing with Helm guide"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(t.p,{children:"Enterprise self-hosted Tracetest is composed of multiple services:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Frontend"}),": the WebUI used to interact with Tracetest, allowing users to ",(0,s.jsx)(t.a,{href:"https://docs.tracetest.io/web-ui/creating-tests",children:"create and manage tests"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Cloud/Core API"}),": APIs that are called directly by the Frontend, the Tracetest CLI and the Tracetest Agent to perform operations on the systems, like creating and running tests."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Ory Ecosystem"}),": Tracetest relies on the ",(0,s.jsx)(t.a,{href:"https://www.ory.sh/",children:"Ory Ecosystem"})," for authentication and authorization. This includes ",(0,s.jsx)(t.a,{href:"https://www.ory.sh/kratos/docs/",children:"Ory Kratos"}),", ",(0,s.jsx)(t.a,{href:"https://www.ory.sh/keto/docs/",children:"Ory Keto"}),", and ",(0,s.jsx)(t.a,{href:"https://www.ory.sh/oathkeeper/docs/",children:"Ory Oathkeeper"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Tracetest Workers"}),": A set of workers that manage the test execution."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Nats"}),": An instance of ",(0,s.jsx)(t.a,{href:"https://nats.io/",children:"nats.io"})," uses a message broker that works as a communication bridge between the different services."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Agent"}),": Triggers tests and ingests traces."]}),"\n"]}),"\n",(0,s.jsx)(t.mermaid,{value:'graph LR\n    Postgres[("Postgres")]\n    Mongo[("Mongo")]\n    Nats\n    SMTPServer["SMTP Server"]\n    Ory["Ory Ecosystem\\n(AuthZ / AuthN)"]\n    TracetestAPI["Cloud/Core\\nAPI"]\n    TracetestWorkers["Tracetest\\nWorkers"]\n    TracetestFrontend["Frontend"]\n    TracetestAgentAPI["Agent\\nAPI"]\n    TracetestAgentIngestAPI["Trace\\nIngest API"]\n    User\n\n    User --\x3e TracetestFrontend\n    User --\x3e Ory\n    User --\x3e TracetestAPI\n\n    subgraph Control Plane\n        TracetestFrontend --\x3e TracetestAPI      \n\n        TracetestAPI --\x3e Nats\n        TracetestWorkers --\x3e Nats\n\n        TracetestFrontend --\x3e Ory\n        TracetestAPI --\x3e Ory\n    end\n\n    subgraph Agent\n        TracetestAgentAPI --\x3e TracetestAPI\n        TracetestAgentIngestAPI --\x3e TracetestAgentAPI\n    end\n    \n    subgraph ExternalDependencies["External Deps"]\n        TracetestAPI --\x3e SMTPServer\n        Ory --\x3e Postgres\n        TracetestAPI --\x3e Postgres\n        TracetestAPI --\x3e Mongo\n    end\n'}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(t.p,{children:"Tracetest expects some preconditions in the environment where it runs."}),"\n",(0,s.jsx)(t.h3,{id:"dns",children:"DNS"}),"\n",(0,s.jsxs)(t.p,{children:["Tracetest needs to be accessible from a DNS route. We recommend you to use an exposed Traefik ",(0,s.jsx)(t.code,{children:"IngressRoute"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"This requires a DNS-resolvable name. You can use a public DNS, an intranet DNS, or even host file based,\nas long as clients can resolve the host names to the correct IPs."}),"\n",(0,s.jsx)(t.p,{children:"You can choose any hostname you want. This Helm repo imposes no limitation on this."}),"\n",(0,s.jsxs)(t.p,{children:["If you choose to use a DNS resolving mechanism that is not available within the Kubernetes cluster where Tracetest runs,\nyou can configure the cluster's CoreDNS to point the selected hostname to the Traefik Service. We provide a ",(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest-cloud-charts/blob/main/scripts/coredns_config.sh",children:"script for this"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"If you want to use managed agents and send OpenTelemetry trace data to them from outside the cluster, you need to set a wildcard subdomain."}),"\n",(0,s.jsxs)(t.admonition,{title:"Does this mean that Tracetest will be accessible from the internet?",type:"tip",children:[(0,s.jsx)(t.p,{children:"Not neccesarily. By default, most cloud providers will automatically map LoadBalancer services to public IPs."}),(0,s.jsx)(t.p,{children:"If you want to make your installation only availble within an intranet or similarly private environment check how to configure Private IPs with your cloud provider docs."})]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"note",children:(0,s.jsxs)(t.p,{children:["Your main domain is ",(0,s.jsx)(t.code,{children:"tracetest.mydomain.com"}),". You need to setup ",(0,s.jsx)(t.code,{children:"tracetest.mydomain.com"})," and ",(0,s.jsx)(t.code,{children:"*.tracetest.mydomain.com"})," to the LoadBalancer IP."]})}),"\n",(0,s.jsx)(t.h3,{id:"cert-manager",children:"Cert Manager"}),"\n",(0,s.jsx)(t.p,{children:"Tracetest uses cert-manager to create sign certificates for JWT tokens and SSL certificates for Ingress."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"helm repo add jetstack https://charts.jetstack.io --force-update\nhelm upgrade --install \\\n    cert-manager jetstack/cert-manager \\\n    --namespace cert-manager \\\n    --create-namespace \\\n    --version v1.15.0 \\\n    --set crds.enabled=true\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Cert Manager defines Issuers. If you have existing Issuers that you want to use, you can configure them in ",(0,s.jsx)(t.code,{children:"values.yaml"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["In order to have a valid certificate, ",(0,s.jsx)(t.code,{children:"cert-manager"})," requires you to provide proof of ownership of the DNS domain that you are claiming. You can see how to do that in the ",(0,s.jsx)(t.a,{href:"https://cert-manager.io/docs/configuration/issuers/",children:"Issuers documentation"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"While it is not recommended in a production environment, it is possible by creating a SelfSigned Issuer and create self-signed certificates. With self-signed certificates you will see warnings on the browser when accessing your Tracetest OnPrem instance Web UI."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"# Create a self signed certificate\n\ncat <<EOF | kubectl apply -f -\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: issuer-selfsigned\n  labels:\nspec:\n  selfSigned: {}\nEOF\n"})}),"\n",(0,s.jsx)(t.h3,{id:"traefik",children:"Traefik"}),"\n",(0,s.jsxs)(t.p,{children:["Tracetest relies on Traefik for its exposed web UI and API, as well as for the managed agents.\nThe process is simple, but the process for exposing the Traefik deployment might differ depending on the cloud platform.\nSee ",(0,s.jsx)(t.a,{href:"https://doc.traefik.io/traefik/getting-started/install-traefik/#use-the-helm-chart",children:"Install Traefik using a Helm Chart"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"external-services",children:"External Services"}),"\n",(0,s.jsx)(t.p,{children:"Tracetest requires two databases to operate: PostgreSQL and MongoDB. You can use managed services or run them in-cluster."}),"\n",(0,s.jsx)(t.h4,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,s.jsx)(t.p,{children:"We recommend using an out-of-cluster instance. The version should not matter, but it is always a good idea to have the latest version."}),"\n",(0,s.jsxs)(t.p,{children:["You can configure the credentials in ",(0,s.jsx)(t.code,{children:"values.yaml"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'global:\n  postgresql:\n    auth:\n      host: "path.to.my.postgres.instance"\n      username: "some-pg-user"\n      password: "some-pg-password"\n      database: "tracetest"\n'})}),"\n",(0,s.jsx)(t.h4,{id:"mongodb",children:"MongoDB"}),"\n",(0,s.jsx)(t.p,{children:"We recommend using an out-of-cluster instance. The version should not matter, but it is always a good idea to have the latest version."}),"\n",(0,s.jsxs)(t.p,{children:["You can configure the credentials in ",(0,s.jsx)(t.code,{children:"values.yaml"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'global:\n  mongodb:\n    auth:\n      protocol: "mongodb"\n      host: "path.to.my.mongodb.instance"\n      username: "some-mongo-user"\n      password: "some-mongo-password"\n      database: "tracetest"\n      options:\n        retryWrites: "true"\n        authSource: admin\n'})}),"\n",(0,s.jsx)(t.h3,{id:"sso",children:"SSO"}),"\n",(0,s.jsxs)(t.p,{children:["This chart comes with an ",(0,s.jsx)(t.strong,{children:"EXTREMELY INSECURE"})," default GitHub OAuth App. It is used for demo purposes only and should not, under any circumstances, be used in any real environment."]}),"\n",(0,s.jsxs)(t.p,{children:["You can enable GitHub and Google SSO by creating corresponding Apps and setting the credentials in ",(0,s.jsx)(t.code,{children:"values.yaml"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'global:\n  sso:\n    google:\n      clientID: "clientID"\n      clientSecret: "clientSecret"\n    github:\n      clientID: "clientID"\n      clientSecret: "clientSecret"\n'})}),"\n",(0,s.jsx)(t.h2,{id:"cloud-based-managed-tracetest",children:"Cloud-based Managed Tracetest"}),"\n",(0,s.jsx)(t.p,{children:"With Cloud-based managed Tracetest you only deploy an agent in your infrastructure."}),"\n",(0,s.jsxs)(t.p,{children:["To deploy Tracetest Agent follow the ",(0,s.jsx)(t.a,{href:"/install/cli",children:"installation guide"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"architecture-1",children:"Architecture"}),"\n",(0,s.jsx)(t.p,{children:"Cloud-based managed Tracetest only requires you to run one service:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Agent"}),": Triggers tests and ingests traces."]}),"\n"]}),"\n",(0,s.jsx)(t.mermaid,{value:'graph LR\n    TracetestControlPlane["Control Plane API"]\n    TracetestAgentAPI["Agent\\nAPI"]\n    TracetestAgentIngestAPI["Trace\\nIngest API"]\n    User\n\n    subgraph Agent\n        TracetestAgentIngestAPI --\x3e TracetestAgentAPI\n    end\n\n    subgraph Control Plane\n        TracetestAgentAPI --\x3e TracetestControlPlane\n    end\n\n    User --\x3e TracetestControlPlane\n'}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites-1",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io/",children:"Sign in to Tracetest"})," and retrieve your ",(0,s.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"Tracetest Organization API Key/Token and Environment ID"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(96540);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);