"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[5372],{34512:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=n(74848),o=n(28453);const s={id:"configuring-monitors",title:"Defining Monitors as Text Files",description:"Create and edit Monitors with the CLI. Just like other structures of Tracetest, you can also manage your Monitors using the CLI and definition files.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","monitoring","monitor","synthetic monitoring","synthetic testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},r=void 0,a={id:"cli/configuring-monitors",title:"Defining Monitors as Text Files",description:"Create and edit Monitors with the CLI. Just like other structures of Tracetest, you can also manage your Monitors using the CLI and definition files.",source:"@site/docs/cli/configuring-monitors.mdx",sourceDirName:"cli",slug:"/cli/configuring-monitors",permalink:"/cli/configuring-monitors",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/cli/configuring-monitors.mdx",tags:[],version:"current",frontMatter:{id:"configuring-monitors",title:"Defining Monitors as Text Files",description:"Create and edit Monitors with the CLI. Just like other structures of Tracetest, you can also manage your Monitors using the CLI and definition files.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","monitoring","monitor","synthetic monitoring","synthetic testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Running Test Suites From the Command Line Interface (CLI)",permalink:"/cli/running-test-suites"},next:{title:"Defining Variable Sets as Text Files",permalink:"/cli/creating-variable-sets"}},c={},d=[];function l(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This page showcases how to create and edit Monitors with the CLI."}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"/concepts/monitors",children:"To read more about Monitors, check out the Monitors concepts page."})})}),"\n",(0,i.jsx)(t.p,{children:"Just like other structures of Tracetest, you can also manage your Monitors using the CLI and definition files."}),"\n",(0,i.jsx)(t.p,{children:"A definition file for a Monitor looks like the following:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'type: Monitor\nspec:\n  id: "abcdef" # optional\n  name: Sample Monitor\n  enabled: true\n  variableSetId: ""\n  tests:\n    - ./tests/create-product.yaml\n    - ./tests/add-product-to-cart.yaml\n    - ./tests/complete-purchase.yaml\n    - testID # you can also reference tests by their ids instead of referencing the definition file\n  testSuites:\n    - ./tests/create-product-suite.yaml\n    - testSuiteID # you can also reference tests by their ids instead of referencing the definition file\n  schedule:\n    cron: "0 0 0 0 *"\n  alerts:\n    id: ""\n    type: webhook\n    webhook:\n      url: https://...\n      method: POST\n      body: \'{"text": "Monitor {{ .Monitor.name }} failed."}\'\n    events:\n      - FAILED\n'})}),"\n",(0,i.jsxs)(t.p,{children:["In order to apply this Monitor to your Tracetest instance, make sure to have your ",(0,i.jsx)(t.a,{href:"/cli/configuring-your-cli",children:"CLI configured"})," and run:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"tracetest apply monitor -f <monitor.yaml>\n"})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["If the file contains the property ",(0,i.jsx)(t.code,{children:"spec.id"}),", the operation will be considered a Monitor update."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"To return a list of Monitors, run:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"tracetest list monitor\n\n[Output]\n ID          NAME             VERSION   RUNS   LAST RUN TIME         LAST RUN STATE   URL\n----------- ---------------- --------- ------ --------------------- ---------------- --------------------------------------------\n 123456789   Sample Monitor   1         120    2024-06-27 13:00:01                    https://api.tracetest.io/monitor/123456789\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);