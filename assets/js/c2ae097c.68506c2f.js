"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[5125],{64522:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var a=t(74848),i=t(28453);const s={id:"creating-data-stores",title:"Defining Data Stores as Text Files",description:"Configure Trace Data Stores in Tracetest by using a configuration file that can be applied to your Tracetest instance.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},r=void 0,l={id:"cli/creating-data-stores",title:"Defining Data Stores as Text Files",description:"Configure Trace Data Stores in Tracetest by using a configuration file that can be applied to your Tracetest instance.",source:"@site/docs/cli/creating-data-stores.mdx",sourceDirName:"cli",slug:"/cli/creating-data-stores",permalink:"/cli/creating-data-stores",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/cli/creating-data-stores.mdx",tags:[],version:"current",frontMatter:{id:"creating-data-stores",title:"Defining Data Stores as Text Files",description:"Configure Trace Data Stores in Tracetest by using a configuration file that can be applied to your Tracetest instance.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Configuring your CLI",permalink:"/cli/configuring-your-cli"},next:{title:"Defining Tests as Text Files",permalink:"/cli/creating-tests"}},c={},o=[{value:"Supported Trace Data Stores",id:"supported-trace-data-stores",level:2},{value:"Jaeger",id:"jaeger",level:3},{value:"OpenSearch",id:"opensearch",level:3},{value:"Elastic APM",id:"elastic-apm",level:3},{value:"SignalFX",id:"signalfx",level:3},{value:"Tempo",id:"tempo",level:3},{value:"Lightstep",id:"lightstep",level:3},{value:"New Relic",id:"new-relic",level:3},{value:"AWS X-Ray",id:"aws-x-ray",level:3},{value:"Dash0",id:"dash0",level:3},{value:"Datadog",id:"datadog",level:3},{value:"Dynatrace",id:"dynatrace",level:3},{value:"Honeycomb",id:"honeycomb",level:3},{value:"Using the OpenTelemetry Collector",id:"using-the-opentelemetry-collector",level:3},{value:"Apply Configuration",id:"apply-configuration",level:2},{value:"Additional Information",id:"additional-information",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"You might have multiple Tracetest instances that need to be connected to the same data stores. An easy way of sharing the configuration is by using a configuration file that can be applied to your Tracetest instance."}),"\n",(0,a.jsx)(n.h2,{id:"supported-trace-data-stores",children:"Supported Trace Data Stores"}),"\n",(0,a.jsx)(n.h3,{id:"jaeger",children:"Jaeger"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Jaeger\n  type: jaeger\n  default: true\n  jaeger:\n    endpoint: jaeger:16685\n    tls:\n      insecure: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"opensearch",children:"OpenSearch"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: OpenSearch\n  type: opensearch\n  default: true\n  opensearch:\n    addresses:\n      - http://opensearch:9200\n    index: traces\n"})}),"\n",(0,a.jsx)(n.h3,{id:"elastic-apm",children:"Elastic APM"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Elastic APM\n  type: elasticapm\n  default: true\n  elasticapm:\n    addresses:\n      - https://es01:9200\n    username: elastic\n    password: changeme\n    index: traces-apm-default\n    insecureSkipVerify: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"signalfx",children:"SignalFX"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: SignalFX\n  type: signalfx\n  default: true\n  signalfx:\n    realm: us1\n    token: mytoken\n"})}),"\n",(0,a.jsx)(n.h3,{id:"tempo",children:"Tempo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Grafana Tempo\n  type: tempo\n  default: true\n  tempo:\n    endpoint: tempo:9095\n    tls:\n      insecure: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"lightstep",children:"Lightstep"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Lightstep pipeline\n  type: lightstep\n  default: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"new-relic",children:"New Relic"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: New Relic pipeline\n  type: newrelic\n  default: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"aws-x-ray",children:"AWS X-Ray"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'type: DataStore\nspec:\n  name: AWS X-Ray\n  type: awsxray\n  default: true\n  awsxray:\n    accessKeyId: <your-accessKeyId>\n    secretAccessKey: <your-secretAccessKey>\n    sessionToken: <your-session-token>\n    region: "us-west-2"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"dash0",children:"Dash0"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Dash0 pipeline\n  type: dash0\n  default: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"datadog",children:"Datadog"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Datadog pipeline\n  type: datadog\n  default: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"dynatrace",children:"Dynatrace"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Dynatrace pipeline\n  type: dynatrace\n  default: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"honeycomb",children:"Honeycomb"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Honeycomb pipeline\n  type: honeycomb\n  default: true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"using-the-opentelemetry-collector",children:"Using the OpenTelemetry Collector"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Opentelemetry Collector pipeline\n  type: otlp\n  default: true\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Consider reading about ",(0,a.jsx)(n.a,{href:"/configuration/connecting-to-data-stores/opentelemetry-collector",children:"how to use the OTEL collector"})," to send traces to your Tracetest instance."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"apply-configuration",children:"Apply Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["To apply the configuration, you need a ",(0,a.jsx)(n.a,{href:"/cli/configuring-your-cli",children:"configured CLI"})," pointed to the instance you want to apply the data store. Then use the following command:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"tracetest apply datastore -f my/data-store/file/location.yaml\n"})}),"\n",(0,a.jsx)(n.h2,{id:"additional-information",children:"Additional Information"}),"\n",(0,a.jsxs)(n.p,{children:["In the current version, you can only have one active data store at any given time. The flag ",(0,a.jsx)(n.code,{children:"default"})," defines which data store should be used by your tests. So, if you want to add a new data store and make sure it will be used in future test runs, make sure to define ",(0,a.jsx)(n.code,{children:"default"})," as ",(0,a.jsx)(n.code,{children:"true"})," in the data store configuration file."]}),"\n",(0,a.jsx)(n.p,{children:"After a configuration is applied, you can export it using the CLI by using the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"tracetest export datastore -f my/file/location.yaml --id my-data-store-id\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var a=t(96540);const i={},s=a.createContext(i);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);