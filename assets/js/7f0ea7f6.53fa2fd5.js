"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3805],{53022:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(74848),s=n(28453);const i={id:"running-playwright-performance-tests-with-artillery-and-tracetest",title:"Performance Testing with Distributed Tracing using Artillery, Playwright and Tracetest",description:"Quickstart on how to use the Tracetest Integration with Playwright and Artillery to enhance Performance Tests with Trace-Based Testing.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","artillery","load testing","performance testing","e2e testing","playwright","end to end testing","end-to-end testing","integration testing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},a=void 0,o={id:"examples-tutorials/recipes/running-playwright-performance-tests-with-artillery-and-tracetest",title:"Performance Testing with Distributed Tracing using Artillery, Playwright and Tracetest",description:"Quickstart on how to use the Tracetest Integration with Playwright and Artillery to enhance Performance Tests with Trace-Based Testing.",source:"@site/docs/examples-tutorials/recipes/running-playwright-performance-tests-with-artillery-and-tracetest.mdx",sourceDirName:"examples-tutorials/recipes",slug:"/examples-tutorials/recipes/running-playwright-performance-tests-with-artillery-and-tracetest",permalink:"/examples-tutorials/recipes/running-playwright-performance-tests-with-artillery-and-tracetest",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/examples-tutorials/recipes/running-playwright-performance-tests-with-artillery-and-tracetest.mdx",tags:[],version:"current",frontMatter:{id:"running-playwright-performance-tests-with-artillery-and-tracetest",title:"Performance Testing with Distributed Tracing using Artillery, Playwright and Tracetest",description:"Quickstart on how to use the Tracetest Integration with Playwright and Artillery to enhance Performance Tests with Trace-Based Testing.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","artillery","load testing","performance testing","e2e testing","playwright","end to end testing","end-to-end testing","integration testing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"guidesSidebar",previous:{title:"Testing Cloudflare Workers with OpenTelemetry and Tracetest",permalink:"/examples-tutorials/recipes/testing-cloudflare-workers-with-opentelemetry-tracetest"},next:{title:"Testing Distributed Services Proxied by Tyk Gateway (API Gateway) with OpenTelemetry and Tracetest",permalink:"/examples-tutorials/recipes/testing-distributed-services-with-tyk-opentelemetry-tracetest"}},l={},c=[{value:"Why is this important?",id:"why-is-this-important",level:2},{value:"The <code>@tracetest/playwright</code> npm Package",id:"the-tracetestplaywright-npm-package",level:2},{value:"The Artillery Playwright Engine",id:"the-artillery-playwright-engine",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Run This Quckstart Example",id:"run-this-quckstart-example",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"The <code>resources/test.ts</code> Test Script",id:"the-resourcestestts-test-script",level:3},{value:"Tracetest Library Setup",id:"tracetest-library-setup",level:3},{value:"Creating the Artillery Test Script",id:"creating-the-artillery-test-script",level:2},{value:"Setting the Environment Variables",id:"setting-the-environment-variables",level:2},{value:"Running the Full Example",id:"running-the-full-example",level:2},{value:"Finding the Results",id:"finding-the-results",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2},{value:"Learn More",id:"learn-more",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.admonition,{title:"Tracetest x Playwright Frontend Instrumentation Requirements",type:"info",children:(0,r.jsxs)(t.p,{children:["Find out the requirements for your instrumented app to start using ",(0,r.jsx)(t.a,{href:"https://tracetest.io/blog/tracetest-tip-instrumentation-for-end-to-end-tests",children:"Tracetest x Playwright"}),"."]})}),"\n",(0,r.jsx)(t.admonition,{title:"Version Compatibility",type:"info",children:(0,r.jsxs)(t.p,{children:["This integration is compatible with ",(0,r.jsx)(t.a,{href:"https://github.com/artilleryio/artillery/releases/tag/artillery-2.0.10",children:"Artillery v2.0.10"})," and above."]})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples/quick-start-artillery-playwright",children:"Check out the source code on GitHub here."})})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://tracetest.io/",children:"Tracetest"})," is a testing tool based on ",(0,r.jsx)(t.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," that permits you to test your distributed application. It allows you to use the trace data generated by your OpenTelemetry tools to check and assert if your application has the desired behavior defined by your test definitions."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://playwright.dev/",children:"Playwright"})," is an open-source automation framework developed by Microsoft that enables cross-browser automation for web applications. It provides a set of APIs and libraries for automating interactions with web browsers such as Chrome, Firefox, and Microsoft Edge."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://artillery.io/",children:"Artillery"})," is a modern, powerful load-testing toolkit. Artillery is designed to help developers and testers simulate traffic to their applications, APIs, and microservices. It allows users to define scenarios to test how their systems behave under different loads."]}),"\n",(0,r.jsx)(t.h2,{id:"why-is-this-important",children:"Why is this important?"}),"\n",(0,r.jsx)(t.p,{children:"The Tracetest integration for Playwright enables your current Playwright tests to easily capture a full distributed trace from your OpenTelemetry instrumented front-end and back-end system."}),"\n",(0,r.jsx)(t.p,{children:"You can embed a Tracetest test in this Playwright test, and allow trace-based testing assertions to be applied across this entire flow, enabling true end-to-end tests across your entire system. Taking it a step further you can use the Playwright engine in Artillery to run performance tests on top if it."}),"\n",(0,r.jsx)(t.p,{children:"Because you're using traces as test specs you can:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Get faster MTTR for failing performance tests"}),"\n",(0,r.jsx)(t.li,{children:"Assert against the Artillery test execution, Playwright test execution, and the system under test"}),"\n",(0,r.jsx)(t.li,{children:"Validate functionality of other parts of your system that may be broken, even when performance tests are passing"}),"\n"]}),"\n",(0,r.jsxs)(t.h2,{id:"the-tracetestplaywright-npm-package",children:["The ",(0,r.jsx)(t.code,{children:"@tracetest/playwright"})," npm Package"]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsxs)(t.a,{href:"https://www.npmjs.com/package/@tracetest/playwright",children:[(0,r.jsx)(t.code,{children:"@tracetest/playwright"})," npm package"]})," is a Playwright plugin that allows you to run trace-based testing using Tracetest and Playwright. It is a wrapper around the Tracetest API that allows you to configure, orchestrate and run tests from Playwright."]}),"\n",(0,r.jsx)(t.h2,{id:"the-artillery-playwright-engine",children:"The Artillery Playwright Engine"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsxs)(t.a,{href:"https://www.npmjs.com/package/artillery-engine-playwright",children:[(0,r.jsx)(t.code,{children:"artillery-engine-playwright"})," npm package"]})," is an ",(0,r.jsx)(t.a,{href:"https://www.artillery.io/docs/reference/engines",children:"Artillery engine"})," lets you combine Playwright with Artillery to launch real browsers for full browser load testing."]}),"\n",(0,r.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Tracetest Account"}),":"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Sign up to ",(0,r.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,r.jsx)(t.code,{children:"app.tracetest.io"})})," or follow the ",(0,r.jsx)(t.a,{href:"/getting-started/overview",children:"get started"})," docs."]}),"\n",(0,r.jsxs)(t.li,{children:["Have access to the environment's ",(0,r.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"agent API key"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Docker"}),": Have ",(0,r.jsx)(t.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," and ",(0,r.jsx)(t.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})," installed on your machine."]}),"\n",(0,r.jsx)(t.h2,{id:"run-this-quckstart-example",children:"Run This Quckstart Example"}),"\n",(0,r.jsx)(t.p,{children:"The example below is provided as part of the Tracetest GitHub repo. You can download and run the example by following these steps:"}),"\n",(0,r.jsx)(t.p,{children:"Clone the Tracetest project and go to the Artillery + Playwright Quickstart:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/kubeshop/tracetest\ncd tracetest/examples/quick-start-artillery-playwright\n"})}),"\n",(0,r.jsx)(t.p,{children:"Follow these instructions to run the included demo app and TypeScript example:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Copy the ",(0,r.jsx)(t.code,{children:".env.template"})," file to ",(0,r.jsx)(t.code,{children:".env"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:["Fill out the ",(0,r.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"TRACETEST_TOKEN and ENVIRONMENT_ID"})," details by editing your ",(0,r.jsx)(t.code,{children:".env"})," file."]}),"\n",(0,r.jsxs)(t.li,{children:["Run ",(0,r.jsx)(t.code,{children:"docker compose run tracetest-run"}),"."]}),"\n",(0,r.jsx)(t.li,{children:"Follow the links in the output to view the test results."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Follow along with the sections below for an in detail breakdown of what the example you just ran did and how it works."}),"\n",(0,r.jsx)(t.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(t.p,{children:"The quick start Artillery + Playwright project is built with Docker Compose."}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop Demo App"})," is a complete example of a distributed application using different back-end and front-end services. We will be launching it and running tests against it as part of this example."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"docker-compose.yaml"})," file in the root directory of the quick start runs the Pokeshop Demo app, the OpenTelemetry Collector, Jaeger, and the ",(0,r.jsx)(t.a,{href:"/concepts/agent",children:"Tracetest Agent"})," setup."]}),"\n",(0,r.jsx)(t.p,{children:"The Artillery Plugin quick start has two primary files:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Playwright Test Script file ",(0,r.jsx)(t.code,{children:"resources/test.ts"})," that includes the ",(0,r.jsx)(t.code,{children:"@tracetest/playwright"})," npm package and the Tracetest test definition. To view the Tracetest test definition as a YAML file you can also see the ",(0,r.jsx)(t.code,{children:"import-pokemon.yaml"})," file."]}),"\n",(0,r.jsxs)(t.li,{children:["Artillery Playwright engine file ",(0,r.jsx)(t.code,{children:"resources/artillery-playwright.yaml"})," that defines that the Artillery test will use the Playwright engine."]}),"\n"]}),"\n",(0,r.jsxs)(t.h3,{id:"the-resourcestestts-test-script",children:["The ",(0,r.jsx)(t.code,{children:"resources/test.ts"})," Test Script"]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"resources/test.ts"})," test script contains one test based on the Pokeshop Demo UI features:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Import a Pokemon (using an async process)"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"tracetest-library-setup",children:"Tracetest Library Setup"}),"\n",(0,r.jsxs)(t.p,{children:["If you go to the ",(0,r.jsx)(t.code,{children:"package.json"})," file you will find the inclusion of a Tracetest package for Playwright ",(0,r.jsx)(t.code,{children:"@tracetest/playwright"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The test script imports the package, grabs the Tracetest API token from the environment variables and creates the Tracetest instance. It then defines the ",(0,r.jsx)(t.code,{children:"importPokemon"})," test and uses the Tracetest test definition YAML."]}),"\n",(0,r.jsx)(t.p,{children:"The complete test script looks like this:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:"title=resources/test.ts",children:'import { Page } from \'playwright\';\nimport { expect, TestInfo } from \'@playwright/test\';\nimport Tracetest from \'@tracetest/playwright\';\nimport { config } from \'dotenv\';\n\nconfig();\n\nconst { TRACETEST_TOKEN = \'\', TRACETEST_ENVIRONMENT_ID = \'\' } = process.env;\n\nconst definition = `\ntype: Test\nspec:\n  id: artillery-playwight-import-pokemon\n  name: "Artillery Playwright - Import Pokemon"\n  trigger:\n    type: playwright\n  specs:\n    - selector: span[tracetest.span.type="general" name = "validate request"] span[tracetest.span.type="http"]\n      name: "All HTTP Spans: Status  code is 200"\n      assertions:\n        - attr:http.status_code = 200\n    - selector: span[tracetest.span.type="http" name="GET" http.method="GET"]\n      assertions:\n        - attr:http.route = "/api/v2/pokemon/\\${var:POKEMON_ID}"\n    - selector: span[tracetest.span.type="database"]\n      name: "All Database Spans: Processing time is less than 1s"\n      assertions:\n        - attr:tracetest.span.duration < 1s\n  outputs:\n    - name: DATABASE_POKEMON_ID\n      selector: span[tracetest.span.type="database" name="create postgres.pokemon" db.system="postgres" db.name="postgres" db.user="postgres" db.operation="create" db.sql.table="pokemon"]\n      value: attr:db.result | json_path \'$.id\'\n`;\n\nexport async function importPokemon(page: Page) {\n  const tracetest = await Tracetest({ apiToken: TRACETEST_TOKEN, environmentId: TRACETEST_ENVIRONMENT_ID });\n  const title = \'Artillery Playwright - Import Pokemon\';\n  const pokemonId = Math.floor(Math.random() * 101).toString();\n  await page.goto(\'/\');\n\n  await tracetest?.setOptions({\n    [title]: {\n      definition,\n      runInfo: {\n        variables: [\n          {\n            key: \'POKEMON_ID\',\n            value: pokemonId,\n          },\n        ],\n      },\n    },\n  });\n\n  await tracetest?.capture(page, { title: \'Artillery Playwright - Import Pokemon\', config: {} } as TestInfo);\n\n  expect(await page.getByText(\'Pokeshop\')).toBeTruthy();\n\n  await page.click(\'text=Import\');\n\n  await page.getByLabel(\'ID\').fill(pokemonId);\n  await page.getByRole(\'button\', { name: \'OK\', exact: true }).click();\n\n  await tracetest?.summary();\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"creating-the-artillery-test-script",children:"Creating the Artillery Test Script"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"resources/artilery-playwright.yaml"})," file contains the Artillery Test Script that will be used to trigger requests against the Pokeshop Demo and run trace-based tests. The steps executed by this script are the following:"]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Defines a scenario using the ",(0,r.jsx)(t.code,{children:"playwright"})," engine running the ",(0,r.jsx)(t.code,{children:"importPokemon"})," from ",(0,r.jsx)(t.code,{children:"resources/test.ts"})," which is a Playwright test using the Tracetest integration using a random number as the Pokemon ID."]}),"\n",(0,r.jsxs)(t.li,{children:["Defines the target as the Pokeshop Demo App running on ",(0,r.jsx)(t.code,{children:"http://localhost:8081"}),"."]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",metastring:'title="resources/artilery-playwright.yaml"',children:"config:\n  target: http://localhost:8081\n  engines:\n    playwright: {}\n  processor: test.ts\nscenarios:\n  - engine: playwright\n    testFunction: importPokemon\n"})}),"\n",(0,r.jsx)(t.h2,{id:"setting-the-environment-variables",children:"Setting the Environment Variables"}),"\n",(0,r.jsxs)(t.p,{children:["Copy the ",(0,r.jsx)(t.code,{children:".env.template"})," file to ",(0,r.jsx)(t.code,{children:".env"})," and add the Tracetest API token and agent tokens to the ",(0,r.jsx)(t.code,{children:"TRACETEST_TOKEN"})," and ",(0,r.jsx)(t.code,{children:"TRACETEST_ENVIRONMENT_ID"})," variables."]}),"\n",(0,r.jsx)(t.h2,{id:"running-the-full-example",children:"Running the Full Example"}),"\n",(0,r.jsx)(t.p,{children:"To start the Pokeshop Demo App, run the following command from the root directory:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"docker compose run tracetest-run\n"})}),"\n",(0,r.jsx)(t.h2,{id:"finding-the-results",children:"Finding the Results"}),"\n",(0,r.jsx)(t.p,{children:"The output from the Tracetest Engine script should be visible in the console log after running the test command. This log will show links to Tracetest for each of the test runs invoked by the Artillery Testing Script. Click a link to launch Tracetest and view the test result."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",metastring:"title=Output",children:"[+] Running 2/2\n \u2714 worker Pulled                                                                                                                                                                     0.9s\n \u2714 api Pulled                                                                                                                                                                        0.9s\n[+] Building 0.7s (10/10) FINISHED                                                                                                                                   docker:desktop-linux\n => [tracetest-apply internal] load build definition from Dockerfile.tracetest                                                                                                       0.0s\n => => transferring dockerfile: 336B                                                                                                                                                 0.0s\n => [tracetest-apply internal] load metadata for docker.io/library/alpine:latest                                                                                                     0.6s\n => [tracetest-apply auth] library/alpine:pull token for registry-1.docker.io                                                                                                        0.0s\n => [tracetest-apply internal] load .dockerignore                                                                                                                                    0.0s\n => => transferring context: 2B                                                                                                                                                      0.0s\n => [tracetest-apply 1/5] FROM docker.io/library/alpine:latest@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5                                               0.0s\n => CACHED [tracetest-apply 2/5] WORKDIR /app                                                                                                                                        0.0s\n => CACHED [tracetest-apply 3/5] RUN apk --update add bash jq curl                                                                                                                   0.0s\n => CACHED [tracetest-apply 4/5] RUN curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash -s -- v1.4.0                                            0.0s\n => CACHED [tracetest-apply 5/5] WORKDIR /resources                                                                                                                                  0.0s\n => [tracetest-apply] exporting to image                                                                                                                                             0.0s\n => => exporting layers                                                                                                                                                              0.0s\n => => writing image sha256:746b8de43a912dc68c81345fd5b2a54740f3d8b0b73724dc79a31abea045d748                                                                                         0.0s\n => => naming to docker.io/library/pokeshop-tracetest-apply                                                                                                                          0.0s\n[+] Creating 10/8\n \u2714 Network pokeshop_default              Created                                                                                                                                     0.0s\n \u2714 Container pokeshop-postgres-1         Created                                                                                                                                     0.2s\n \u2714 Container pokeshop-jaeger-1           Created                                                                                                                                     0.2s\n \u2714 Container pokeshop-queue-1            Created                                                                                                                                     0.2s\n \u2714 Container pokeshop-cache-1            Created                                                                                                                                     0.2s\n \u2714 Container pokeshop-otel-collector-1   Created                                                                                                                                     0.1s\n \u2714 Container pokeshop-worker-1           Created                                                                                                                                     0.1s\n \u2714 Container pokeshop-api-1              Created                                                                                                                                     0.0s\n \u2714 Container pokeshop-tracetest-agent-1  Created                                                                                                                                     0.0s\n \u2714 Container pokeshop-tracetest-apply-1  Created                                                                                                                                     0.1s\n[+] Running 9/9\n \u2714 Container pokeshop-queue-1            Healthy                                                                                                                                    12.2s\n \u2714 Container pokeshop-jaeger-1           Healthy                                                                                                                                     1.9s\n \u2714 Container pokeshop-cache-1            Healthy                                                                                                                                    12.2s\n \u2714 Container pokeshop-postgres-1         Healthy                                                                                                                                    12.2s\n \u2714 Container pokeshop-otel-collector-1   Started                                                                                                                                     0.4s\n \u2714 Container pokeshop-worker-1           Started                                                                                                                                     0.1s\n \u2714 Container pokeshop-api-1              Healthy                                                                                                                                     1.6s\n \u2714 Container pokeshop-tracetest-agent-1  Started                                                                                                                                     0.1s\n \u2714 Container pokeshop-tracetest-apply-1  Started                                                                                                                                     0.1s\n[+] Running 2/2\n \u2714 api Pulled                                                                                                                                                                        0.8s\n \u2714 worker Pulled                                                                                                                                                                     0.8s\n\n> quick-start-artillery-playwright@1.0.0 test\n> artillery run resources/artillery-playwright.yaml\n\nTest run id: twmey_ngwbckeqpwm9ja9p99hqhfjtbhefp_bw8c\nBundled Typescript file into JS. New processor path: /app/resources/dist/test.js\nPhase started: unnamed (index: 0, duration: 1s) 16:55:42(+0000)\n\nPhase completed: unnamed (index: 0, duration: 1s) 16:55:43(+0000)\n\n--------------------------------------\nMetrics for period to: 16:55:50(+0000) (width: 2.21s)\n--------------------------------------\n\nbrowser.http_requests: ......................................................... 10\nbrowser.page.FCP.http://api:8081/:\n  min: ......................................................................... 175.3\n  max: ......................................................................... 175.3\n  mean: ........................................................................ 175.3\n  median: ...................................................................... 175.9\n  p95: ......................................................................... 175.9\n  p99: ......................................................................... 175.9\nbrowser.page.FID.http://api:8081/:\n  min: ......................................................................... 1.6\n  max: ......................................................................... 1.6\n  mean: ........................................................................ 1.6\n  median: ...................................................................... 1.6\n  p95: ......................................................................... 1.6\n  p99: ......................................................................... 1.6\nbrowser.page.LCP.http://api:8081/:\n  min: ......................................................................... 193.4\n  max: ......................................................................... 193.4\n  mean: ........................................................................ 193.4\n  median: ...................................................................... 194.4\n  p95: ......................................................................... 194.4\n  p99: ......................................................................... 194.4\nbrowser.page.TTFB.http://api:8081/:\n  min: ......................................................................... 14.9\n  max: ......................................................................... 14.9\n  mean: ........................................................................ 14.9\n  median: ...................................................................... 15\n  p95: ......................................................................... 15\n  p99: ......................................................................... 15\nbrowser.page.codes.200: ........................................................ 10\nvusers.created: ................................................................ 1\nvusers.created_by_name.0: ...................................................... 1\n\n\n\u2834 Run Group: #e2fae28c-ac06-4001-8dc1-2328eee32e5a (https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments//run/e2fae28c-ac06-4001-8dc1-2328eee32e5a)\nFailed: 0\nSucceed: 1\nPending: 0\n\n\n\nRuns:\n\n\u2714 Artillery Playwright - Import Pokemon (https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments//test/artillery-playwight-import-pokemon/run/7) - trace id: 1b3ba6a22f595dbfad1c5d32120aad20\n\n--------------------------------------\nMetrics for period to: 16:56:00(+0000) (width: 0s)\n--------------------------------------\n\nvusers.completed: .............................................................. 1\nvusers.failed: ................................................................. 0\nvusers.session_length:\n  min: ......................................................................... 15189.2\n  max: ......................................................................... 15189.2\n  mean: ........................................................................ 15189.2\n  median: ...................................................................... 15218.6\n  p95: ......................................................................... 15218.6\n  p99: ......................................................................... 15218.6\n\n\nAll VUs finished. Total time: 16 seconds\n\n--------------------------------\nSummary report @ 16:56:00(+0000)\n--------------------------------\n\nbrowser.http_requests: ......................................................... 10\nbrowser.page.FCP.http://api:8081/:\n  min: ......................................................................... 175.3\n  max: ......................................................................... 175.3\n  mean: ........................................................................ 175.3\n  median: ...................................................................... 175.9\n  p95: ......................................................................... 175.9\n  p99: ......................................................................... 175.9\nbrowser.page.FID.http://api:8081/:\n  min: ......................................................................... 1.6\n  max: ......................................................................... 1.6\n  mean: ........................................................................ 1.6\n  median: ...................................................................... 1.6\n  p95: ......................................................................... 1.6\n  p99: ......................................................................... 1.6\nbrowser.page.LCP.http://api:8081/:\n  min: ......................................................................... 193.4\n  max: ......................................................................... 193.4\n  mean: ........................................................................ 193.4\n  median: ...................................................................... 194.4\n  p95: ......................................................................... 194.4\n  p99: ......................................................................... 194.4\nbrowser.page.TTFB.http://api:8081/:\n  min: ......................................................................... 14.9\n  max: ......................................................................... 14.9\n  mean: ........................................................................ 14.9\n  median: ...................................................................... 15\n  p95: ......................................................................... 15\n  p99: ......................................................................... 15\nbrowser.page.codes.200: ........................................................ 10\nvusers.completed: .............................................................. 1\nvusers.created: ................................................................ 1\nvusers.created_by_name.0: ...................................................... 1\nvusers.failed: ................................................................. 0\nvusers.session_length:\n  min: ......................................................................... 15189.2\n  max: ......................................................................... 15189.2\n  mean: ........................................................................ 15189.2\n  median: ...................................................................... 15218.6\n  p95: ......................................................................... 15218.6\n  p99: ......................................................................... 15218.6\n"})}),"\n",(0,r.jsx)(t.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,r.jsx)(t.p,{children:"After running the test, you can click the run link for any of them, update the assertions, and run the scripts once more. This flow enables complete a trace-based TDD flow."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1709916703/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_956484fe2078461e_tests_ma21ae.png",alt:"assertions"})}),"\n",(0,r.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,r.jsxs)(t.p,{children:["Please visit our ",(0,r.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples",children:"examples in GitHub"})," and join our ",(0,r.jsx)(t.a,{href:"https://dub.sh/tracetest-community",children:"Slack Community"})," for more info!"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);