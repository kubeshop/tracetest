"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3577],{59799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(74848),s=n(28453);const a={id:"running-tracetest-with-opensearch",title:"Node.js and OpenSearch",description:"Quick start on how to configure a Node.js app with OpenTelemetry traces, OpenSearch as a trace data store, and Tracetest for enhancing your E2E and integration tests with trace-based testing.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","opensearch","opensearch tracing","opensearch observability","tracing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},o=void 0,i={id:"examples-tutorials/recipes/running-tracetest-with-opensearch",title:"Node.js and OpenSearch",description:"Quick start on how to configure a Node.js app with OpenTelemetry traces, OpenSearch as a trace data store, and Tracetest for enhancing your E2E and integration tests with trace-based testing.",source:"@site/docs/examples-tutorials/recipes/running-tracetest-with-opensearch.mdx",sourceDirName:"examples-tutorials/recipes",slug:"/examples-tutorials/recipes/running-tracetest-with-opensearch",permalink:"/examples-tutorials/recipes/running-tracetest-with-opensearch",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/examples-tutorials/recipes/running-tracetest-with-opensearch.mdx",tags:[],version:"current",frontMatter:{id:"running-tracetest-with-opensearch",title:"Node.js and OpenSearch",description:"Quick start on how to configure a Node.js app with OpenTelemetry traces, OpenSearch as a trace data store, and Tracetest for enhancing your E2E and integration tests with trace-based testing.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","opensearch","opensearch tracing","opensearch observability","tracing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"guidesSidebar",previous:{title:"Serverless Node.js and Jaeger with Terraform",permalink:"/examples-tutorials/recipes/running-tracetest-with-aws-terraform"},next:{title:"Node.js and Sumo Logic",permalink:"/examples-tutorials/recipes/running-tracetest-with-sumologic"}},c={},l=[{value:"Node.js App with OpenSearch, OpenTelemetry and Tracetest",id:"nodejs-app-with-opensearch-opentelemetry-and-tracetest",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Run This Quckstart Example",id:"run-this-quckstart-example",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Configuring the Node.js App",id:"configuring-the-nodejs-app",level:2},{value:"Run the Node.js App, OpenSearch, Data Prepper, and OpenTelemetry Collector and Tracetest",id:"run-the-nodejs-app-opensearch-data-prepper-and-opentelemetry-collector-and-tracetest",level:2},{value:"The Test File",id:"the-test-file",level:3},{value:"Learn More",id:"learn-more",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples/quick-start-opensearch-nodejs",children:"Check out the source code on GitHub here."})})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://tracetest.io/",children:"Tracetest"})," is a testing tool based on ",(0,r.jsx)(t.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," that allows you to test your distributed application. It allows you to use data from distributed traces generated by OpenTelemetry to validate and assert if your application has the desired behavior defined by your test definitions."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://opensearch.org/",children:"OpenSearch"})," is a scalable, flexible, and extensible open-source software suite for search, analytics, and observability applications licensed under Apache 2.0. OpenSearch started in 2021 as a fork of Elasticsearch and Kibana, with development led by AWS."]}),"\n",(0,r.jsx)(t.h2,{id:"nodejs-app-with-opensearch-opentelemetry-and-tracetest",children:"Node.js App with OpenSearch, OpenTelemetry and Tracetest"}),"\n",(0,r.jsx)(t.p,{children:"This is a simple quick start on how to configure a Node.js app to use OpenTelemetry instrumentation with traces, and Tracetest for enhancing your E2E and integration tests with trace-based testing. The infrastructure will use OpenSearch as the trace data store and OpenTelemetry Collector to receive traces from the Node.js app and send them to OpenSearch."}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Tracetest Account"}),":"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Sign up to ",(0,r.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,r.jsx)(t.code,{children:"app.tracetest.io"})})," or follow the ",(0,r.jsx)(t.a,{href:"/getting-started/overview",children:"get started"})," docs."]}),"\n",(0,r.jsxs)(t.li,{children:["Have access to the environment's ",(0,r.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"agent API key"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Docker"}),": Have ",(0,r.jsx)(t.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," and ",(0,r.jsx)(t.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})," installed on your machine."]}),"\n",(0,r.jsx)(t.h2,{id:"run-this-quckstart-example",children:"Run This Quckstart Example"}),"\n",(0,r.jsx)(t.p,{children:"The example below is provided as part of the Tracetest project. You can download and run the example by following these steps:"}),"\n",(0,r.jsx)(t.p,{children:"Clone the Tracetest project and go to the OpenSearch Node.js Quickstart:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/kubeshop/tracetest\ncd tracetest/examples/quick-start-opensearch-nodejs\n"})}),"\n",(0,r.jsx)(t.p,{children:"Follow these instructions to run the quick start:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Copy the ",(0,r.jsx)(t.code,{children:".env.template"})," file to ",(0,r.jsx)(t.code,{children:".env"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:["Fill out the ",(0,r.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"TRACETEST_TOKEN and ENVIRONMENT_ID"})," details by editing your ",(0,r.jsx)(t.code,{children:".env"})," file."]}),"\n",(0,r.jsxs)(t.li,{children:["Run ",(0,r.jsx)(t.code,{children:"docker compose run tracetest-run"}),"."]}),"\n",(0,r.jsx)(t.li,{children:"Follow the links in the output to view the test results."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Follow along with the sections below for an in detail breakdown of what the example you just ran did and how it works."}),"\n",(0,r.jsx)(t.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsxs)(t.p,{children:["The project contains ",(0,r.jsx)(t.a,{href:"/getting-started/install-agent",children:"Tracetest Agent"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/opensearch-project/OpenSearch",children:"OpenSearch"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/opensearch-project/data-prepper",children:"Data Prepper"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/open-telemetry/opentelemetry-collector-contrib",children:"OpenTelemetry Collector"}),", and a Node.js app."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"docker-compose.yaml"})," file in the root directory of the quick start runs the Node.js app, OpenSearch, Data Prepper, OpenTelemetry Collector, and the ",(0,r.jsx)(t.a,{href:"/concepts/agent",children:"Tracetest Agent"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"configuring-the-nodejs-app",children:"Configuring the Node.js App"}),"\n",(0,r.jsxs)(t.p,{children:["The Node.js app is a simple Express app, contained in ",(0,r.jsxs)(t.a,{href:"https://github.com/kubeshop/tracetest/blob/main/examples/quick-start-opensearch-nodejs/app.js",children:["the ",(0,r.jsx)(t.code,{children:"app.js"})," file"]}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Configure the ",(0,r.jsx)(t.code,{children:".env"})," like shown below."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'# Get the required information here: https://app.tracetest.io/retrieve-token\n\nTRACETEST_TOKEN="<YOUR_TRACETEST_TOKEN>"\nTRACETEST_ENVIRONMENT_ID="<YOUR_ENV_ID>"\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The OpenTelemetry tracing is contained in the ",(0,r.jsx)(t.code,{children:"tracing.otel.grpc.js"})," or ",(0,r.jsx)(t.code,{children:"tracing.otel.http.js"})," files. Traces will be sent to OpenTelemetry Collector and forwarded from there to Elastic."]}),"\n",(0,r.jsxs)(t.p,{children:["Choosing ",(0,r.jsxs)(t.a,{href:"https://github.com/kubeshop/tracetest/blob/main/examples/quick-start-opensearch-nodejs/tracing.otel.grpc.js",children:["the ",(0,r.jsx)(t.code,{children:"tracing.otel.grpc.js"})," file"]})," will send traces to OpenTelemetry Collector's ",(0,r.jsx)(t.code,{children:"GRPC"})," endpoint."]}),"\n",(0,r.jsxs)(t.p,{children:["Enabling the tracer is done by preloading the trace file. As seen in the ",(0,r.jsx)(t.code,{children:"package.json"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"scripts": {\n  "app-with-grpc-tracer": "node -r ./tracing.otel.grpc.js app.js",\n},\n'})}),"\n",(0,r.jsx)(t.p,{children:"How do traces reach OpenSearch?"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/blob/main/examples/quick-start-opensearch-nodejs/collector.config.yaml",children:(0,r.jsx)(t.code,{children:"collector.config.yaml"})})," explains that. It receives traces via either ",(0,r.jsx)(t.code,{children:"grpc"})," or ",(0,r.jsx)(t.code,{children:"http"}),". Then it exports them to the Data Prepper that will parse the trace data and send it to OpenSearch. Data Prepper uses the endpoint ",(0,r.jsx)(t.code,{children:"data-prepper:21890"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"run-the-nodejs-app-opensearch-data-prepper-and-opentelemetry-collector-and-tracetest",children:"Run the Node.js App, OpenSearch, Data Prepper, and OpenTelemetry Collector and Tracetest"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsxs)(t.a,{href:"https://github.com/kubeshop/tracetest/blob/main/examples/quick-start-opensearch-nodejs/docker-compose.yaml",children:[(0,r.jsx)(t.code,{children:"docker-compose.yaml"})," file"]})," also contains the Tracetest Agent, OpenTelemetry Collector, OpenSearch, and Data Prepper."]}),"\n",(0,r.jsx)(t.p,{children:"To run everything including Tracetest tests, run this command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"docker compose run tracetest-run\n"})}),"\n",(0,r.jsx)(t.p,{children:"This will:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Start the Node.js app, the OpenTelemetry Collector, and send the traces to OpenSearch."}),"\n",(0,r.jsx)(t.li,{children:"Start the Tracetest Agent."}),"\n",(0,r.jsx)(t.li,{children:"Configure the OpenSearch tracing backend and create tests in your environment."}),"\n",(0,r.jsx)(t.li,{children:"Run the tests."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"the-test-file",children:"The Test File"}),"\n",(0,r.jsxs)(t.p,{children:["Check out the ",(0,r.jsx)(t.code,{children:"resources/test.yaml"})," file."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:'# resources/test.yaml\ntype: Test\nspec:\n  id: W656Q0c4g\n  name: Test API\n  description: Test the App.\n  pollingProfile: jBPzxDCSg\n  trigger:\n    type: http\n    httpRequest:\n      url: http://app:8080\n      method: GET\n      headers:\n        - key: Content-Type\n          value: application/json\n  specs:\n    - selector: span[tracetest.span.type="http" name="GET /" http.target="/" http.method="GET"]\n      assertions:\n        - attr:http.status_code  =  200\n        - attr:tracetest.span.duration  <  500ms\n'})}),"\n",(0,r.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,r.jsxs)(t.p,{children:["Feel free to check out our ",(0,r.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples",children:"examples in GitHub"})," and join our ",(0,r.jsx)(t.a,{href:"https://dub.sh/tracetest-community",children:"Slack Community"})," for more info!"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var r=n(96540);const s={},a=r.createContext(s);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);