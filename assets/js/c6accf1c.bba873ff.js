"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[683],{99955:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=n(74848),r=n(28453);const o={id:"dynatrace",title:"Dynatrace",description:"Use Dynatrace as the trace data store for Tracetest. Configure the OpenTelemetry Collector to receive traces and forward them to both Tracetest and Dynatrace.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},c=void 0,s={id:"configuration/connecting-to-data-stores/dynatrace",title:"Dynatrace",description:"Use Dynatrace as the trace data store for Tracetest. Configure the OpenTelemetry Collector to receive traces and forward them to both Tracetest and Dynatrace.",source:"@site/docs/configuration/connecting-to-data-stores/dynatrace.mdx",sourceDirName:"configuration/connecting-to-data-stores",slug:"/configuration/connecting-to-data-stores/dynatrace",permalink:"/configuration/connecting-to-data-stores/dynatrace",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/configuration/connecting-to-data-stores/dynatrace.mdx",tags:[],version:"current",frontMatter:{id:"dynatrace",title:"Dynatrace",description:"Use Dynatrace as the trace data store for Tracetest. Configure the OpenTelemetry Collector to receive traces and forward them to both Tracetest and Dynatrace.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Datadog",permalink:"/configuration/connecting-to-data-stores/datadog"},next:{title:"Elastic APM",permalink:"/configuration/connecting-to-data-stores/elasticapm"}},i={},d=[{value:"Configuring OpenTelemetry Collector to Send Traces to both Dynatrace and Tracetest",id:"configuring-opentelemetry-collector-to-send-traces-to-both-dynatrace-and-tracetest",level:2},{value:"Configure Tracetest to Use Dynatrace as a Trace Data Store",id:"configure-tracetest-to-use-dynatrace-as-a-trace-data-store",level:2},{value:"Connect Tracetest to Dynatrace with the Web UI",id:"connect-tracetest-to-dynatrace-with-the-web-ui",level:2},{value:"Connect Tracetest to Dynatrace with the CLI",id:"connect-tracetest-to-dynatrace-with-the-cli",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["If you want to use ",(0,a.jsx)(t.a,{href:"https://www.dynatrace.com/",children:"Dynatrace"})," as the trace data store, you'll configure the OpenTelemetry Collector to receive traces from your system and then send them to both Tracetest and Dynatrace. And, you don't have to change your existing pipelines to do so."]}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["Examples of configuring Tracetest with Dynatrace can be found in the ",(0,a.jsxs)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples",children:[(0,a.jsx)(t.code,{children:"examples"})," folder of the Tracetest GitHub repo"]}),"."]})}),"\n",(0,a.jsx)(t.h2,{id:"configuring-opentelemetry-collector-to-send-traces-to-both-dynatrace-and-tracetest",children:"Configuring OpenTelemetry Collector to Send Traces to both Dynatrace and Tracetest"}),"\n",(0,a.jsx)(t.p,{children:"In your OpenTelemetry Collector config file:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Set the ",(0,a.jsx)(t.code,{children:"exporter"})," to ",(0,a.jsx)(t.code,{children:"otlp/tracetest"})]}),"\n",(0,a.jsxs)(t.li,{children:["Set the ",(0,a.jsx)(t.code,{children:"endpoint"})," to your Tracetest instance on port ",(0,a.jsx)(t.code,{children:"4317"})]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["If you are running Tracetest with Docker, and Tracetest's service name is ",(0,a.jsx)(t.code,{children:"tracetest"}),", then the endpoint might look like this ",(0,a.jsx)(t.code,{children:"http://tracetest:4317"})]})}),"\n",(0,a.jsx)(t.p,{children:"Additionally, add another config:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Set the ",(0,a.jsx)(t.code,{children:"exporter"})," to ",(0,a.jsx)(t.code,{children:"otlphttp/dynatrace"})]}),"\n",(0,a.jsxs)(t.li,{children:["Set the ",(0,a.jsx)(t.code,{children:"endpoint"})," to your Dynatrace tenant and include the: ",(0,a.jsx)(t.code,{children:"https://{your-environment-id}.live.dynatrace.com/api/v2/otlp"})]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:'# collector.config.yaml\n\n# If you already have receivers declared, you can just ignore\n# this one and still use yours instead.\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n      http:\n\nprocessors:\n  batch:\n    timeout: 100ms\n\nexporters:\n  logging:\n    verbosity: detailed\n  # OTLP for Tracetest\n  otlp/tracetest:\n    endpoint: tracetest:4317 # Send traces to Tracetest. Read more in docs here:  https://docs.tracetest.io/configuration/connecting-to-data-stores/opentelemetry-collector\n    tls:\n      insecure: true\n  # OTLP for Dynatrace\n  otlphttp/dynatrace:\n    endpoint: https://abc123.live.dynatrace.com/api/v2/otlp # Send traces to Dynatrace. Read more in docs here: https://www.dynatrace.com/support/help/extend-dynatrace/opentelemetry/collector#configuration\n    headers:\n      Authorization: "Api-Token dt0c01.sample.secret" # Requires "openTelemetryTrace.ingest" permission\nservice:\n  pipelines:\n    traces/tracetest: # Pipeline to send data to Tracetest\n      receivers: [otlp]\n      processors: [batch]\n      exporters: [logging, otlp/tracetest]\n    traces/Dynatrace: # Pipeline to send data to Dynatrace\n      receivers: [otlp]\n      processors: [batch]\n      exporters: [logging, otlphttp/dynatrace]\n'})}),"\n",(0,a.jsx)(t.h2,{id:"configure-tracetest-to-use-dynatrace-as-a-trace-data-store",children:"Configure Tracetest to Use Dynatrace as a Trace Data Store"}),"\n",(0,a.jsxs)(t.p,{children:["Configure your Tracetest instance to expose an ",(0,a.jsx)(t.code,{children:"otlp"})," endpoint to make it aware it will receive traces from the OpenTelemetry Collector. This will expose Tracetest's trace receiver on port ",(0,a.jsx)(t.code,{children:"4317"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"connect-tracetest-to-dynatrace-with-the-web-ui",children:"Connect Tracetest to Dynatrace with the Web UI"}),"\n",(0,a.jsx)(t.p,{children:"In the Web UI, (1) open Settings, and, on the (2) Trace Ingestion tab, select (3) Dynatrace."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Trace Ingestion Settings",src:n(10752).A+"",width:"3326",height:"1808"})}),"\n",(0,a.jsx)(t.h2,{id:"connect-tracetest-to-dynatrace-with-the-cli",children:"Connect Tracetest to Dynatrace with the CLI"}),"\n",(0,a.jsx)(t.p,{children:"Or, if you prefer using the CLI, you can use this file config."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Dynatrace pipeline\n  type: dynatrace\n  default: true\n"})}),"\n",(0,a.jsx)(t.p,{children:"Proceed to run this command in the terminal and specify the file above."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"tracetest apply datastore -f my/data-store/file/location.yaml\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},10752:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/app.tracetest.io_organizations_at4CxvjIg_environments_ttenv_172de56e3dcbba9b_settings_tab=dataStore_dynatrace-91f2e4967fc13fc24484715b45d9167f.png"},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var a=n(96540);const r={},o=a.createContext(r);function c(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);