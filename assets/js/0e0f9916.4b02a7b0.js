"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[7839],{2626:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var s=n(74848),r=n(28453),a=n(49489),i=n(7227);n(2250),n(92945);const o={id:"create-trace-based-test",title:"Create a Trace-based Test",description:"Get started by installing Tracetest! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},l=void 0,c={id:"getting-started/create-trace-based-test",title:"Create a Trace-based Test",description:"Get started by installing Tracetest! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",source:"@site/docs/getting-started/create-trace-based-test.mdx",sourceDirName:"getting-started",slug:"/getting-started/create-trace-based-test",permalink:"/getting-started/create-trace-based-test",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/getting-started/create-trace-based-test.mdx",tags:[],version:"current",frontMatter:{id:"create-trace-based-test",title:"Create a Trace-based Test",description:"Get started by installing Tracetest! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Configure Trace Ingestion",permalink:"/getting-started/configure-trace-ingestion"},next:{title:"Create Assertions",permalink:"/getting-started/create-assertions"}},d={},h=[{value:"Start the Sample Pokeshop API",id:"start-the-sample-pokeshop-api",level:2},{value:"Create Trace-based Tests in Two Ways",id:"create-trace-based-tests-in-two-ways",level:2},{value:"Create a Trace-based Test Programatically in YAML",id:"create-a-trace-based-test-programatically-in-yaml",level:2},{value:"Create a Trace-based Test Visually with the Web UI",id:"create-a-trace-based-test-visually-with-the-web-ui",level:2},{value:"View the Trace Response",id:"view-the-trace-response",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"So far, you've learned:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"How to define a trigger to executes tests against your apps."}),"\n",(0,s.jsx)(t.li,{children:"How to configure trace ingestion."}),"\n",(0,s.jsx)(t.li,{children:"How to configure your application to export traces."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This will enable trace-based testing in your apps that have OpenTelemetry distributed tracing configured."}),"\n",(0,s.jsx)(t.p,{children:"We've provided a sample application with OpenTelemetry already enabled for you to try."}),"\n",(0,s.jsx)(t.h2,{id:"start-the-sample-pokeshop-api",children:"Start the Sample Pokeshop API"}),"\n",(0,s.jsxs)(t.p,{children:["To create tests quickly, start the official sample called ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop API"}),"."]}),"\n",(0,s.jsxs)(a.A,{groupId:"installation",children:[(0,s.jsxs)(i.A,{value:"cli",label:"Tracetest CLI",default:!0,children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/tracetest.git\ncd tracetest/examples/tracetest-agent/pokeshop/\n\ndocker compose up -d --build\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is exposed from Docker to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://localhost:8081"})," - To run tests you will use ",(0,s.jsx)(t.code,{children:"localhost"})," since it is exposed from Docker."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://localhost:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces. Since Pokeshop is running in Docker and Tracetest Agent is running on ",(0,s.jsx)(t.code,{children:"localhost"})," this sample uses  ",(0,s.jsx)(t.code,{children:"http://host.docker.internal:4317"})," to ingest traces instead of ",(0,s.jsx)(t.code,{children:"http://localhost:4317"}),"."]}),"\n"]})]}),(0,s.jsxs)(i.A,{value:"docker",label:"Docker",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop\n\ndocker compose up -d --build\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is exposed from Docker to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://api:8081"})," - To run tests you will use the Docker internal network and the service name."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://tracetest-agent:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Docker Networking"})}),(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container."]}),(0,s.jsxs)(t.p,{children:["Add Tracetest Agent to the same network and use service name mapping. ",(0,s.jsxs)(t.em,{children:["Example: Instead of running an app on ",(0,s.jsx)(t.code,{children:"localhost:8080"}),", add it to your Docker Compose file, connect it to the same network as your Tracetest Agent service, and use ",(0,s.jsx)(t.code,{children:"<service-name>:8080"})," in the URL field when creating a test."]})]}),(0,s.jsx)(t.p,{children:"You can reach services running on your local machine using:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Linux (Docker version < 20.10.0): ",(0,s.jsx)(t.code,{children:"172.17.0.1:8080"})]}),"\n",(0,s.jsxs)(t.li,{children:["MacOS (Docker version >= 18.03) and Linux (Docker version >= 20.10.0): ",(0,s.jsx)(t.code,{children:"host.docker.internal:8080"})]}),"\n"]})]})]}),(0,s.jsxs)(i.A,{value:"docker-compose",label:"Docker Compose",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop\n\ndocker compose up -d --build\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is exposed from Docker to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://api:8081"})," - To run tests you will use the Docker internal network and the service name."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://tracetest-agent:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Docker Networking"})}),(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container."]}),(0,s.jsxs)(t.p,{children:["Add Tracetest Agent to the same network and use service name mapping. ",(0,s.jsxs)(t.em,{children:["Example: Instead of running an app on ",(0,s.jsx)(t.code,{children:"localhost:8080"}),", add it to your Docker Compose file, connect it to the same network as your Tracetest Agent service, and use ",(0,s.jsx)(t.code,{children:"<service-name>:8080"})," in the URL field when creating a test."]})]}),(0,s.jsx)(t.p,{children:"You can reach services running on your local machine using:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Linux (Docker version < 20.10.0): ",(0,s.jsx)(t.code,{children:"172.17.0.1:8080"})]}),"\n",(0,s.jsxs)(t.li,{children:["MacOS (Docker version >= 18.03) and Linux (Docker version >= 20.10.0): ",(0,s.jsx)(t.code,{children:"host.docker.internal:8080"})]}),"\n"]})]})]}),(0,s.jsxs)(i.A,{value:"kubernetes",label:"Kubernetes",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop/k8s\n\nkubectl apply -f .\n"})}),(0,s.jsxs)(t.p,{children:["To access the Pokeshop API run a ",(0,s.jsx)(t.code,{children:"port-forward"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl port-forward svc/api 8081:8081\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is port forwarded from Kubernetes to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://api.default.svc.cluster.local:8081"})," - To run tests you will use the Kubernetes internal network and the service name."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://tracetest-agent.default.svc.cluster.local:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Kubernetes Networking"})}),(0,s.jsxs)(t.p,{children:["Make sure to use the correct ",(0,s.jsx)(t.code,{children:"<service-name>"})," if you edit the Tracetest Agent ",(0,s.jsx)(t.code,{children:"service"})," name."]}),(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container.\nMake sure to run tests using the internal Kubernetes service networking eg: ",(0,s.jsx)(t.code,{children:"http://<your-app-service-name>.default.svc.cluster.local:port"}),"."]})]})]}),(0,s.jsxs)(i.A,{value:"helm",label:"Helm",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop/helm-charts\n\nhelm dependency update\nhelm install -f values.yaml --create-namespace pokeshop .\n"})}),(0,s.jsxs)(t.p,{children:["To access the Pokeshop API run a ",(0,s.jsx)(t.code,{children:"port-forward"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl port-forward svc/pokeshop-pokemon-api 8081:8081\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is port forwarded from Kubernetes to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://pokeshop-pokemon-api:8081"})," - To run tests you will use the Kubernetes internal network and the service name."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://agent-tracetest-agent:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Kubernetes Networking"})}),(0,s.jsxs)(t.p,{children:["Make sure to use the correct ",(0,s.jsx)(t.code,{children:"<service-name>"})," if you edit the Tracetest Agent Helm chart ",(0,s.jsx)(t.code,{children:"<release-name>"})," name."]}),(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container.\nMake sure to run tests using the internal Kubernetes service networking eg: ",(0,s.jsx)(t.code,{children:"http://<your-app-service-name>.default.svc.cluster.local:port"}),"."]}),(0,s.jsxs)(t.p,{children:["In the following example you can use: ",(0,s.jsx)(t.code,{children:"http://pokeshop-pokemon-api:8081"}),"."]})]})]})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Click to view the sample Pokeshop API architecture"})}),(0,s.jsx)(t.p,{children:"Here's the Architecture of the Pokeshop Sample App:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["an ",(0,s.jsx)(t.strong,{children:"API"})," that serves client requests,"]}),"\n",(0,s.jsxs)(t.li,{children:["a ",(0,s.jsx)(t.strong,{children:"Worker"})," who deals with background processes."]}),"\n"]}),(0,s.jsxs)(t.p,{children:["The communication between the API and Worker is made using a ",(0,s.jsx)(t.code,{children:"RabbitMQ"})," queue, and both services emit telemetry data to OpenTelemetry Collector and communicate with a Postgres database."]}),(0,s.jsx)(t.p,{children:"Tracetest triggers tests against the Node.js API."}),(0,s.jsx)(t.mermaid,{value:"flowchart TD\n    A[(Redis)]\n    B[(Postgres)]\n    C(Node.js API)\n    D(RabbitMQ)\n    E(Worker)\n    F(OpenTelemetry Collector)\n    G(Tracetest)\n\n    G --\x3e C\n    F --\x3e G\n    C --\x3e A\n    C --\x3e B\n    C --\x3e D\n    D --\x3e E\n    E --\x3e B\n    C --\x3e F\n    E --\x3e F\n    \n    "})]}),"\n",(0,s.jsx)(t.h2,{id:"create-trace-based-tests-in-two-ways",children:"Create Trace-based Tests in Two Ways"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Programmatically, in YAML"}),"\n",(0,s.jsx)(t.li,{children:"Visually, in the Web UI"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"create-a-trace-based-test-programatically-in-yaml",children:"Create a Trace-based Test Programatically in YAML"}),"\n",(0,s.jsxs)(t.p,{children:["Create a file called ",(0,s.jsx)(t.code,{children:"import-pokemon.yaml"}),"."]}),"\n",(0,s.jsxs)(a.A,{groupId:"installation",children:[(0,s.jsx)(i.A,{value:"cli",label:"Tracetest CLI",default:!0,children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="import-pokemon.yaml"',children:'type: Test\nspec:\n  name: Import a Pokemon using API and MQ Worker\n  description: Import a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      method: POST\n      url: http://localhost:8081/pokemon/import\n      body: |\n        {\n          "id": 143\n        }\n      headers:\n      - key: Content-Type\n        value: application/json\n'})})}),(0,s.jsx)(i.A,{value:"docker",label:"Docker",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="import-pokemon.yaml"',children:'type: Test\nspec:\n  name: Import a Pokemon using API and MQ Worker\n  description: Import a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      method: POST\n      url: http://api:8081/pokemon/import\n      body: |\n        {\n          "id": 143\n        }\n      headers:\n      - key: Content-Type\n        value: application/json\n'})})}),(0,s.jsx)(i.A,{value:"docker-compose",label:"Docker Compose",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="import-pokemon.yaml"',children:'type: Test\nspec:\n  name: Import a Pokemon using API and MQ Worker\n  description: Import a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      method: POST\n      url: http://api:8081/pokemon/import\n      body: |\n        {\n          "id": 143\n        }\n      headers:\n      - key: Content-Type\n        value: application/json\n'})})}),(0,s.jsx)(i.A,{value:"kubernetes",label:"Kubernetes",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="import-pokemon.yaml"',children:'type: Test\nspec:\n  name: Import a Pokemon using API and MQ Worker\n  description: Import a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      method: POST\n      url: http://api.default.svc.cluster.local:8081/pokemon/import\n      body: |\n        {\n          "id": 143\n        }\n      headers:\n      - key: Content-Type\n        value: application/json\n'})})}),(0,s.jsx)(i.A,{value:"helm",label:"Helm",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="import-pokemon.yaml"',children:'type: Test\nspec:\n  name: Import a Pokemon using API and MQ Worker\n  description: Import a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      method: POST\n      url: http://pokeshop-pokemon-api:8081/pokemon/import\n      body: |\n        {\n          "id": 143\n        }\n      headers:\n      - key: Content-Type\n        value: application/json\n'})})})]}),"\n",(0,s.jsx)(t.p,{children:"Run it with the CLI."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"tracetest run test -f ./import-pokemon.yaml\n"})}),"\n",(0,s.jsx)(t.h2,{id:"create-a-trace-based-test-visually-with-the-web-ui",children:"Create a Trace-based Test Visually with the Web UI"}),"\n",(0,s.jsx)(t.p,{children:"Create a test in the Web UI by opening your Tracetest account, clicking the Create button, and selecting HTTP."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1727192707/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_ed85b0979257d37b_tests_page_1_5_v178q5.png",alt:"create trace based tests 1"})}),"\n",(0,s.jsxs)(a.A,{groupId:"installation",children:[(0,s.jsxs)(i.A,{value:"cli",label:"Tracetest CLI",default:!0,children:[(0,s.jsxs)(t.p,{children:["Enter ",(0,s.jsx)(t.code,{children:"http://localhost:8081/pokemon/import"})," as the URL, select ",(0,s.jsx)(t.code,{children:"POST"}),", add a JSON body ",(0,s.jsx)(t.code,{children:'{ "id": 6 }'}),", and click Run."]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1727192710/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_ed85b0979257d37b_tests_page_1_6_e8mq2b.png",alt:"create trace based test 2"})})]}),(0,s.jsxs)(i.A,{value:"docker",label:"Docker",children:[(0,s.jsxs)(t.p,{children:["Enter ",(0,s.jsx)(t.code,{children:"http://api:8081/pokemon/import"})," as the URL, select ",(0,s.jsx)(t.code,{children:"POST"}),", add a JSON body ",(0,s.jsx)(t.code,{children:'{ "id": 6 }'}),", and click Run."]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1727193718/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_ed85b0979257d37b_tests_page_1_7_qduuga.png",alt:"create trace based test 2"})})]}),(0,s.jsxs)(i.A,{value:"docker-compose",label:"Docker Compose",children:[(0,s.jsxs)(t.p,{children:["Enter ",(0,s.jsx)(t.code,{children:"http://api:8081/pokemon/import"})," as the URL, select ",(0,s.jsx)(t.code,{children:"POST"}),", add a JSON body ",(0,s.jsx)(t.code,{children:'{ "id": 6 }'}),", and click Run."]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1727193718/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_ed85b0979257d37b_tests_page_1_7_qduuga.png",alt:"create trace based test 3"})})]}),(0,s.jsxs)(i.A,{value:"kubernetes",label:"Kubernetes",children:[(0,s.jsxs)(t.p,{children:["Enter ",(0,s.jsx)(t.code,{children:"http://api.default.svc.cluster.local:8081/pokemon/import"})," as the URL, select ",(0,s.jsx)(t.code,{children:"POST"}),", add a JSON body ",(0,s.jsx)(t.code,{children:'{ "id": 6 }'}),", and click Run."]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1727253317/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_ed85b0979257d37b_tests_page_1_8_hutudo.png",alt:"create trace based test 4"})})]}),(0,s.jsxs)(i.A,{value:"helm",label:"Helm",children:[(0,s.jsxs)(t.p,{children:["Enter ",(0,s.jsx)(t.code,{children:"http://pokeshop-pokemon-api:8081/pokemon/import"})," as the URL, select ",(0,s.jsx)(t.code,{children:"POST"}),", add a JSON body ",(0,s.jsx)(t.code,{children:'{ "id": 6 }'}),", and click Run."]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1727253367/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_ed85b0979257d37b_tests_page_1_9_kovmsf.png",alt:"create trace based test 5"})})]})]}),"\n",(0,s.jsx)(t.h2,{id:"view-the-trace-response",children:"View the Trace Response"}),"\n",(0,s.jsx)(t.p,{children:"With trace ingestion configured you can view the resulting trace that was generated by the app. Every test you run will now have additional observability with distributed traces."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1727254755/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_ed85b0979257d37b_test_UNLBkLgHR_run_5_trace_qjmye0.png",alt:"create trace based test 6"})}),"\n",(0,s.jsx)(t.admonition,{title:"Don't have OpenTelemetry installed?",type:"tip",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/getting-started/no-otel",children:"Follow these instructions to install OpenTelemetry in 5 minutes without any code changes!"})})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},7227:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var s=n(34164);const r={tabItem:"tabItem_Ymn6"};var a=n(74848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,i),hidden:n,children:t})}},49489:(e,t,n)=>{n.d(t,{A:()=>f});var s=n(96540),r=n(34164),a=n(24245),i=n(56347),o=n(36494),l=n(62814),c=n(45167),d=n(81269);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:s,default:r}}=e;return{value:t,label:n,attributes:s,default:r}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=p(e),[i,l]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:a}))),[c,h]=m({queryString:n,groupId:r}),[g,x]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,d.Dv)(n);return[r,(0,s.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),j=(()=>{const e=c??g;return u({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{j&&l(j)}),[j]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!u({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,a]),tabValues:a}}var x=n(11062);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(74848);function k(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),r=o[n].value;r!==s&&(c(t),i(r))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>l.push(e),onKeyDown:h,onClick:d,...a,className:(0,r.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":s===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function y(e){const t=g(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,b.jsx)(k,{...e,...t}),(0,b.jsx)(v,{...e,...t})]})}function f(e){const t=(0,x.A)();return(0,b.jsx)(y,{...e,children:h(e.children)},String(t))}},92945:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var s=n(49489),r=n(7227),a=n(2250),i=n(74848);function o(){function e(e){let{event:t,installationPlatform:n}=e;window.dataLayer=window.dataLayer||[],window.dataLayer.push({installationPlatform:n,event:"installationPlatform"})}return(0,i.jsxs)(s.A,{groupId:"operating-systems",children:[(0,i.jsx)(r.A,{value:"mac",label:"MAC",default:!0,children:(0,i.jsx)("div",{onClick:()=>e({installationPlatform:"MacOS"}),children:(0,i.jsx)(a.A,{language:"bash",title:"Terminal",children:"brew install kubeshop/tracetest/tracetest"})})}),(0,i.jsx)(r.A,{value:"linux",label:"LINUX",children:(0,i.jsx)("div",{onClick:()=>e({installationPlatform:"Linux"}),children:(0,i.jsx)(a.A,{language:"bash",title:"Terminal",children:"curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash"})})}),(0,i.jsx)(r.A,{value:"win",label:"WINDOWS",children:(0,i.jsx)("div",{onClick:()=>e({installationPlatform:"Windows"}),children:(0,i.jsx)(a.A,{language:"bash",title:"Terminal",children:"choco source add --name=kubeshop_repo --source=https://chocolatey.kubeshop.io/chocolatey ; choco install tracetest"})})})]})}}}]);