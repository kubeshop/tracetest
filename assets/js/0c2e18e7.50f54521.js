"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[9228],{88099:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(74848),r=n(28453);const a={id:"tempo",title:"Grafana Tempo",description:"Use Grafana Tempo as the trace data store for Tracetest. You can use the native connection from Tracetest to pull telemetry data directly from Tempo.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},s=void 0,i={id:"configuration/connecting-to-data-stores/tempo",title:"Grafana Tempo",description:"Use Grafana Tempo as the trace data store for Tracetest. You can use the native connection from Tracetest to pull telemetry data directly from Tempo.",source:"@site/docs/configuration/connecting-to-data-stores/tempo.mdx",sourceDirName:"configuration/connecting-to-data-stores",slug:"/configuration/connecting-to-data-stores/tempo",permalink:"/configuration/connecting-to-data-stores/tempo",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/configuration/connecting-to-data-stores/tempo.mdx",tags:[],version:"current",frontMatter:{id:"tempo",title:"Grafana Tempo",description:"Use Grafana Tempo as the trace data store for Tracetest. You can use the native connection from Tracetest to pull telemetry data directly from Tempo.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Elastic APM",permalink:"/configuration/connecting-to-data-stores/elasticapm"},next:{title:"Honeycomb",permalink:"/configuration/connecting-to-data-stores/honeycomb"}},c={},l=[{value:"Configure Tempo",id:"configure-tempo",level:2},{value:"Configure Tracetest to Use Tempo as a Trace Data Store",id:"configure-tracetest-to-use-tempo-as-a-trace-data-store",level:2},{value:"Connect Tracetest to Tempo with the Web UI",id:"connect-tracetest-to-tempo-with-the-web-ui",level:2},{value:"Connect Tracetest to Tempo with the CLI",id:"connect-tracetest-to-tempo-with-the-cli",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Tracetest fetches traces from ",(0,o.jsx)(t.a,{href:"https://grafana.com/docs/tempo/latest/configuration/#server",children:"Tempo on the default gRPC port"})," ",(0,o.jsx)(t.code,{children:"9095"}),", or ",(0,o.jsx)(t.a,{href:"https://grafana.com/docs/tempo/latest/configuration/#server",children:"default HTTP port"})," ",(0,o.jsx)(t.code,{children:"80"}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["Examples of configuring Tracetest can be found in the ",(0,o.jsxs)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples",children:[(0,o.jsx)(t.code,{children:"examples"})," folder of the Tracetest GitHub repo"]}),"."]})}),"\n",(0,o.jsx)(t.h2,{id:"configure-tempo",children:"Configure Tempo"}),"\n",(0,o.jsxs)(t.p,{children:["Tempo uses port ",(0,o.jsx)(t.code,{children:"9095"})," as the default ",(0,o.jsx)(t.code,{children:"grpc_listen_port"}),". The default ",(0,o.jsx)(t.code,{children:"http_listen_port"})," is ",(0,o.jsx)(t.code,{children:"80"}),". Here is a full example of a config file:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"# tempo.config.yaml\n\nauth_enabled: false\nserver:\n  http_listen_port: 80\n  grpc_listen_port: 9095\ndistributor:\n  receivers: # This configuration will listen on all ports and protocols that Tempo is capable of.\n    jaeger: # the receives all come from the OpenTelemetry collector.  more configuration information can\n      protocols: # be found here: https://github.com/open-telemetry/opentelemetry-collector/tree/master/receiver.\n        thrift_http: #\n        grpc: # For a production deployment you should only enable the receivers you need!\n        thrift_binary:\n        thrift_compact:\n    zipkin:\n    otlp:\n      protocols:\n        http:\n        grpc:\n    opencensus:\ningester:\n  trace_idle_period: 10s # The length of time after a trace has not received spans to consider it complete and flush it.\n  max_block_bytes: 1_000_000 # Cut the head block when it hits this size or ...\n  #traces_per_block: 1_000_000\n  max_block_duration: 5m #   this much time passes.\ncompactor:\n  compaction:\n    compaction_window: 1h # Blocks in this time window will be compacted together.\n    max_compaction_objects: 1000000 # Maximum size of compacted blocks.\n    block_retention: 1h\n    compacted_block_retention: 10m\nstorage:\n  trace:\n    backend: local # Backend configuration to use.\n    wal:\n      path: /tmp/tempo/wal # Where to store the the wal locally.\n      #bloom_filter_false_positive: .05 # Bloom filter false positive rate.  Lower values create larger filters but fewer false positives.\n      #index_downsample: 10             # Number of traces per index record.\n    local:\n      path: /tmp/tempo/blocks\n    pool:\n      max_workers: 100 # The worker pool mainly drives querying, but is also used for polling the blocklist.\n      queue_depth: 10000\n"})}),"\n",(0,o.jsx)(t.h2,{id:"configure-tracetest-to-use-tempo-as-a-trace-data-store",children:"Configure Tracetest to Use Tempo as a Trace Data Store"}),"\n",(0,o.jsx)(t.p,{children:"Configure Tracetest to be aware that it has to fetch trace data from Tempo."}),"\n",(0,o.jsxs)(t.p,{children:["Tracetest uses ",(0,o.jsx)(t.a,{href:"https://grafana.com/docs/tempo/latest/configuration/#server",children:"Tempo's gRPC endpoint"})," on port ",(0,o.jsx)(t.code,{children:"9095"})," to fetch trace data. Alternatively, you can use Tempo's HTTP endpoint and default port ",(0,o.jsx)(t.code,{children:"80"}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["Need help configuring the OpenTelemetry Collector so send trace data from your application to Jaeger? Read more in ",(0,o.jsx)(t.a,{href:"/configuration/opentelemetry-collector-configuration-file-reference",children:"the reference page here"}),"."]})}),"\n",(0,o.jsx)(t.h2,{id:"connect-tracetest-to-tempo-with-the-web-ui",children:"Connect Tracetest to Tempo with the Web UI"}),"\n",(0,o.jsxs)(t.p,{children:["In the Web UI, (1) open Settings, and, on the (2) Trace Ingestion tab, (3) select Tempo. Then, select either ",(0,o.jsx)(t.code,{children:"gRPC"})," or ",(0,o.jsx)(t.code,{children:"HTTP"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["If you are using Docker and the ",(0,o.jsx)(t.code,{children:"gRPC"})," endpoint like in the screenshot below, use the service name as the hostname with port ",(0,o.jsx)(t.code,{children:"9095"})," like this:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"tempo:9095\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Trace Ingestion Settings",src:n(48480).A+"",width:"3326",height:"1808"})}),"\n",(0,o.jsxs)(t.p,{children:["If you are using Docker and the ",(0,o.jsx)(t.code,{children:"HTTP"})," URL like in the screenshot below, use the service name as the hostname with port ",(0,o.jsx)(t.code,{children:"80"})," or no specified port like this:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"http://tempo\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Trace Ingestion Settings",src:n(58296).A+"",width:"3326",height:"1808"})}),"\n",(0,o.jsx)(t.h2,{id:"connect-tracetest-to-tempo-with-the-cli",children:"Connect Tracetest to Tempo with the CLI"}),"\n",(0,o.jsx)(t.p,{children:"Or, if you prefer using the CLI, you can use this file config."}),"\n",(0,o.jsx)(t.p,{children:"For gRPC:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Grafana Tempo\n  type: tempo\n  default: true\n  tempo:\n    type: grpc\n    grpc:\n      endpoint: tempo:9095\n      tls:\n        insecure: true\n"})}),"\n",(0,o.jsx)(t.p,{children:"For HTTP:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Grafana Tempo\n  type: tempo\n  default: true\n  tempo:\n    type: http\n    http:\n      url: http://tempo\n      tls:\n        insecure: true\n"})}),"\n",(0,o.jsx)(t.p,{children:"Proceed to run this command in the terminal, and specify the file above."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"tracetest apply datastore -f my/data-store/file/location.yaml\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["To learn more, ",(0,o.jsx)(t.a,{href:"/examples-tutorials/recipes/running-tracetest-with-tempo",children:"read the recipe on running a sample app with Tempo and Tracetest"}),"."]})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},48480:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/app.tracetest.io_organizations_at4CxvjIg_environments_ttenv_172de56e3dcbba9b_settings_tab=dataStore_tempo-b1441e607b97704b145fdb55d10c1b35.png"},58296:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/app.tracetest.io_organizations_at4CxvjIg_environments_ttenv_172de56e3dcbba9b_settings_tab=dataStore_tempo_1-07f00239e9923e4a7f2682a42534ef41.png"},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(96540);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);