"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3581],{68305:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var o=n(74848),r=n(28453);const c={id:"opentelemetry-collector",title:"OpenTelemetry Collector",description:"Configure the OpenTelemetry Collector to receive traces and forward them to Tracetest.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},i=void 0,s={id:"configuration/connecting-to-data-stores/opentelemetry-collector",title:"OpenTelemetry Collector",description:"Configure the OpenTelemetry Collector to receive traces and forward them to Tracetest.",source:"@site/docs/configuration/connecting-to-data-stores/opentelemetry-collector.mdx",sourceDirName:"configuration/connecting-to-data-stores",slug:"/configuration/connecting-to-data-stores/opentelemetry-collector",permalink:"/configuration/connecting-to-data-stores/opentelemetry-collector",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/configuration/connecting-to-data-stores/opentelemetry-collector.mdx",tags:[],version:"current",frontMatter:{id:"opentelemetry-collector",title:"OpenTelemetry Collector",description:"Configure the OpenTelemetry Collector to receive traces and forward them to Tracetest.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"OpenSearch",permalink:"/configuration/connecting-to-data-stores/opensearch"},next:{title:"SignalFx",permalink:"/configuration/connecting-to-data-stores/signalfx"}},a={},l=[{value:"Configuring OpenTelemetry Collector to Send Traces to Tracetest",id:"configuring-opentelemetry-collector-to-send-traces-to-tracetest",level:2},{value:"Configure Tracetest to Use OpenTelemetry Collector",id:"configure-tracetest-to-use-opentelemetry-collector",level:2},{value:"Connect Tracetest to OpenTelemetry Collector with the Web UI",id:"connect-tracetest-to-opentelemetry-collector-with-the-web-ui",level:2},{value:"Connect Tracetest to OpenTelemetry Collector with the CLI",id:"connect-tracetest-to-opentelemetry-collector-with-the-cli",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Tracetest receives trace data on port ",(0,o.jsx)(t.code,{children:"4317"}),". Tracetest's trace receiver endpoint might look like:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"http://your-tracetest-instance.com:4317\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["Examples of configuring Tracetest can be found in the ",(0,o.jsxs)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples",children:[(0,o.jsx)(t.code,{children:"examples"})," folder of the Tracetest GitHub repo"]}),"."]})}),"\n",(0,o.jsx)(t.h2,{id:"configuring-opentelemetry-collector-to-send-traces-to-tracetest",children:"Configuring OpenTelemetry Collector to Send Traces to Tracetest"}),"\n",(0,o.jsx)(t.p,{children:"If you don't want to use a trace data store, you can send all traces directly to Tracetest using your OpenTelemetry Collector. And, you don't have to change your existing pipelines to do so."}),"\n",(0,o.jsx)(t.p,{children:"In your OpenTelemetry Collector config file:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Set the ",(0,o.jsx)(t.code,{children:"exporter"})," to ",(0,o.jsx)(t.code,{children:"otlp/1"})]}),"\n",(0,o.jsxs)(t.li,{children:["Set the ",(0,o.jsx)(t.code,{children:"endpoint"})," to your Tracetest instance on port ",(0,o.jsx)(t.code,{children:"4317"})]}),"\n"]}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["If you are running Tracetest with Docker, and Tracetest's service name is ",(0,o.jsx)(t.code,{children:"tracetest"}),", then the endpoint might look like this ",(0,o.jsx)(t.code,{children:"http://tracetest:4317"})]})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"# collector.config.yaml\n\n# If you already have receivers declared, you can just ignore\n# this one and still use yours instead.\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n      http:\n\nprocessors:\n  batch:\n    timeout: 100ms\n\nexporters:\n  # This is the exporter that will send traces to Tracetest\n  otlp/1:\n    endpoint: http://your-tracetest-instance.com:4317\n    tls:\n      insecure: true\n\nservice:\n  pipelines:\n    # your probably already have a traces pipeline, you don't have to change it.\n    # just add this one to your configuration. Just make sure to not have two\n    # pipelines with the same name\n    traces/1:\n      receivers: [otlp] # your receiver\n      processors: [batch]\n      exporters: [otlp/1] # your exporter pointing to your tracetest instance\n"})}),"\n",(0,o.jsx)(t.h2,{id:"configure-tracetest-to-use-opentelemetry-collector",children:"Configure Tracetest to Use OpenTelemetry Collector"}),"\n",(0,o.jsxs)(t.p,{children:["Configure your Tracetest instance to expose an ",(0,o.jsx)(t.code,{children:"otlp"})," endpoint to make it aware it will receive traces from the OpenTelemetry Collector. This will expose Tracetest's trace receiver on port ",(0,o.jsx)(t.code,{children:"4317"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"connect-tracetest-to-opentelemetry-collector-with-the-web-ui",children:"Connect Tracetest to OpenTelemetry Collector with the Web UI"}),"\n",(0,o.jsx)(t.p,{children:"In the Web UI, (1) open Settings, and, on the (2) Trace Ingestion tab, select (3) OpenTelemetry."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Trace Ingestion Settings",src:n(35911).A+"",width:"3326",height:"1808"})}),"\n",(0,o.jsx)(t.h2,{id:"connect-tracetest-to-opentelemetry-collector-with-the-cli",children:"Connect Tracetest to OpenTelemetry Collector with the CLI"}),"\n",(0,o.jsx)(t.p,{children:"Or, if you prefer using the CLI, you can use this file config."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"type: DataStore\nspec:\n  name: Opentelemetry Collector pipeline\n  type: otlp\n  default: true\n"})}),"\n",(0,o.jsx)(t.p,{children:"Proceed to run this command in the terminal, and specify the file above."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"tracetest apply datastore -f my/data-store/file/location.yaml\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["To learn more, ",(0,o.jsx)(t.a,{href:"/examples-tutorials/recipes/running-tracetest-without-a-trace-data-store",children:"read the recipe on running a sample app with OpenTelemetry Collector and Tracetest"}),"."]})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},35911:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/app.tracetest.io_organizations_at4CxvjIg_environments_ttenv_172de56e3dcbba9b_settings_tab=dataStore_otel-ebecd6a8402a4ee5874300b79e8e5ff5.png"},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(96540);const r={},c=o.createContext(r);function i(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);