"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[7004],{17741:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var n=s(74848),i=s(28453);const o={id:"running-tracetest-with-signoz-pokeshop",title:"Pokeshop API and SigNoz",description:"Quick start how to configure the Pokeshop API Demo to use Tracetest for enhancing your E2E and integration tests with trace-based testing with SigNoz as a trace data store.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","signoz","signoz observability","signoz tracing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},r=void 0,a={id:"examples-tutorials/recipes/running-tracetest-with-signoz-pokeshop",title:"Pokeshop API and SigNoz",description:"Quick start how to configure the Pokeshop API Demo to use Tracetest for enhancing your E2E and integration tests with trace-based testing with SigNoz as a trace data store.",source:"@site/docs/examples-tutorials/recipes/running-tracetest-with-signoz-pokeshop.mdx",sourceDirName:"examples-tutorials/recipes",slug:"/examples-tutorials/recipes/running-tracetest-with-signoz-pokeshop",permalink:"/examples-tutorials/recipes/running-tracetest-with-signoz-pokeshop",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/examples-tutorials/recipes/running-tracetest-with-signoz-pokeshop.mdx",tags:[],version:"current",frontMatter:{id:"running-tracetest-with-signoz-pokeshop",title:"Pokeshop API and SigNoz",description:"Quick start how to configure the Pokeshop API Demo to use Tracetest for enhancing your E2E and integration tests with trace-based testing with SigNoz as a trace data store.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","signoz","signoz observability","signoz tracing","opentelemetry"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"guidesSidebar",previous:{title:"Node.js and Honeycomb",permalink:"/examples-tutorials/recipes/running-tracetest-with-honeycomb"},next:{title:"Node.js and AWS X-Ray (Node.js SDK)",permalink:"/examples-tutorials/recipes/running-tracetest-with-aws-x-ray"}},c={},h=[{value:"Pokeshop API with SigNoz, OpenTelemetry and Tracetest",id:"pokeshop-api-with-signoz-opentelemetry-and-tracetest",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Run This Quckstart Example",id:"run-this-quckstart-example",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Configuring the Pokeshop Demo App",id:"configuring-the-pokeshop-demo-app",level:2},{value:"Run Pokeshop, SigNoz, and Tracetest",id:"run-pokeshop-signoz-and-tracetest",level:2},{value:"View Trace Spans Over Time in SigNoz",id:"view-trace-spans-over-time-in-signoz",level:2},{value:"Learn More",id:"learn-more",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples/tracetest-signoz-pokeshop",children:"Check out the source code on GitHub here."})})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://tracetest.io/",children:"Tracetest"})," is a testing tool based on ",(0,n.jsx)(t.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," that allows you to test your distributed application. It allows you to use data from distributed traces generated by OpenTelemetry to validate and assert if your application has the desired behavior defined by your test definitions."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://signoz.io/",children:"SigNoz"})," is an open-source observability tool. A single tool for all your observability needs - APM, logs, metrics, exceptions, alerts, and dashboards powered by a powerful query builder."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://docs.tracetest.io/live-examples/pokeshop/overview",children:"Pokeshop API"})," is a testing ground, the team at Tracetest has implemented a sample instrumented API around the ",(0,n.jsx)(t.a,{href:"https://pokeapi.co/",children:"PokeAPI"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"pokeshop-api-with-signoz-opentelemetry-and-tracetest",children:"Pokeshop API with SigNoz, OpenTelemetry and Tracetest"}),"\n",(0,n.jsx)(t.p,{children:"This is a simple quick start guide on how to configure a fully instrumented API to be used with Tracetest for enhancing your E2E and integration tests with trace-based testing. The infrastructure will use SigNoz as the trace data store and the Pokeshop API to generate the telemetry data."}),"\n",(0,n.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Tracetest Account"}),":"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Sign up to ",(0,n.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,n.jsx)(t.code,{children:"app.tracetest.io"})})," or follow the ",(0,n.jsx)(t.a,{href:"/getting-started/overview",children:"get started"})," docs."]}),"\n",(0,n.jsxs)(t.li,{children:["Have access to the environment's ",(0,n.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"agent API key"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Docker"}),": Have ",(0,n.jsx)(t.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," and ",(0,n.jsx)(t.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})," installed on your machine."]}),"\n",(0,n.jsx)(t.h2,{id:"run-this-quckstart-example",children:"Run This Quckstart Example"}),"\n",(0,n.jsx)(t.p,{children:"The example below is provided as part of the Tracetest project. You can download and run the example by following these steps:"}),"\n",(0,n.jsx)(t.p,{children:"Clone the Tracetest project and go to the SigNoz Pokeshop Quickstart:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/kubeshop/tracetest\ncd tracetest/examples/tracetest-signoz-pokeshop\n"})}),"\n",(0,n.jsx)(t.p,{children:"Follow these instructions to run the quick start:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Copy the ",(0,n.jsx)(t.code,{children:".env.template"})," file to ",(0,n.jsx)(t.code,{children:".env"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Fill out the ",(0,n.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"TRACETEST_TOKEN and ENVIRONMENT_ID"})," details by editing your ",(0,n.jsx)(t.code,{children:".env"})," file."]}),"\n",(0,n.jsxs)(t.li,{children:["Run ",(0,n.jsx)(t.code,{children:"docker compose run tracetest-run"}),"."]}),"\n",(0,n.jsx)(t.li,{children:"Follow the links in the output to view the test results."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Follow along with the sections below for an in detail breakdown of what the example you just ran did and how it works."}),"\n",(0,n.jsx)(t.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,n.jsxs)(t.p,{children:["The project contains the ",(0,n.jsx)(t.a,{href:"/getting-started/install-agent",children:"Tracetest Agent"}),", and the ",(0,n.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop Demo app"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"docker-compose.agent.yaml"})," file in the root directory of the quick start runs the Pokeshop Demo app, ",(0,n.jsx)(t.a,{href:"https://github.com/SigNoz/signoz",children:"SigNoz"}),", and the ",(0,n.jsx)(t.a,{href:"/concepts/agent",children:"Tracetest Agent"})," setup."]}),"\n",(0,n.jsx)(t.h2,{id:"configuring-the-pokeshop-demo-app",children:"Configuring the Pokeshop Demo App"}),"\n",(0,n.jsx)(t.p,{children:"The Pokeshop API is a fully instrumented REST API that makes use of different services to mimic a real life scenario."}),"\n",(0,n.jsxs)(t.p,{children:["It is instrumented using the ",(0,n.jsx)(t.a,{href:"https://opentelemetry.io/docs/instrumentation/js/getting-started/nodejs/",children:"OpenTelemetry standards for Node.js"}),", sending the data to the ADOT collector that will be pushing the telemetry information to both the AWS X-Ray service."]}),"\n",(0,n.jsxs)(t.p,{children:["This is a ",(0,n.jsx)(t.a,{href:"https://github.com/kubeshop/pokeshop/blob/master/api/src/telemetry/tracing.ts",children:"fragment from the main tracing file"})," from the ",(0,n.jsx)(t.a,{href:"https://github.com/kubeshop/pokeshop",children:"Pokeshop API repo"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Configure the ",(0,n.jsx)(t.code,{children:".env"})," like shown below."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'# Get the required information here: https://app.tracetest.io/retrieve-token\n\nTRACETEST_TOKEN="<YOUR_TRACETEST_TOKEN>"\nTRACETEST_ENVIRONMENT_ID="<YOUR_ENV_ID>"\n'})}),"\n",(0,n.jsx)(t.h2,{id:"run-pokeshop-signoz-and-tracetest",children:"Run Pokeshop, SigNoz, and Tracetest"}),"\n",(0,n.jsx)(t.p,{children:"To execute the tests, run this command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"docker compose run tracetest-run\n"})}),"\n",(0,n.jsx)(t.p,{children:"This will:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Start the Node.js app, the OpenTelemetry Collector, and send the traces to Signoz."}),"\n",(0,n.jsx)(t.li,{children:"Start the Tracetest Agent."}),"\n",(0,n.jsx)(t.li,{children:"Configure the SigNoz tracing backend and create tests in your environment."}),"\n",(0,n.jsx)(t.li,{children:"Run the tests."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The output of the test will look similar to this:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"Configuring Tracetest\n SUCCESS  Successfully configured Tracetest CLI\nRunning Trace-Based Tests...\n\u2714 RunGroup: #RLG4_lCSR (https://app.tracetest.io/organizations/ttorg_e66318ba6544b856/environments/ttenv_4b0e8945dbe5045a/run/RLG4_lCSR)\n Summary: 1 passed, 0 failed, 0 pending\n  \u2714 Pokeshop - Import (https://app.tracetest.io/organizations/ttorg_e66318ba6544b856/environments/ttenv_4b0e8945dbe5045a/test/ZVJwkpC4g/run/1/test) - trace id: 538981f2be22430a3ec260772ed00c83\n\t\u2714 All HTTP Spans: Status  code is 200\n\t\u2714 Validate that this span always exists after the message queue\n\t\u2714 Validate that Redis is using Charizard.\n\t\u2714 Validate that the Postgres has Charizard.\n"})}),"\n",(0,n.jsx)(t.h2,{id:"view-trace-spans-over-time-in-signoz",children:"View Trace Spans Over Time in SigNoz"}),"\n",(0,n.jsx)(t.p,{children:"To access a historical overview of all the trace spans the Pokeshop Demo app generates, jump over to SigNoz. With SigNoz and Tracetest, you get the best of both worlds. You can run trace-based tests and automate running E2E and integration tests against real trace data. And, use SigNoz to get a historical overview of all traces your distributed application generates."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1697715807/Blogposts/signoz-integration/new/image_53_ms9rcw.webp",alt:"honeycomb"})}),"\n",(0,n.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,n.jsxs)(t.p,{children:["Please visit our ",(0,n.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples",children:"examples in GitHub"})," and join our ",(0,n.jsx)(t.a,{href:"https://dub.sh/tracetest-community",children:"Slack Community"})," for more info!"]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(96540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);