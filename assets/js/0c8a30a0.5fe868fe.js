"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[5647],{45338:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>h,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>p});var s=r(74848),n=r(28453),a=r(49489),l=r(7227),o=r(2250),i=r(92945);const c={id:"overview",title:"Overview",description:"Get started with installing Tracetest Core. Tracetest Core allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},h=void 0,d={id:"core/getting-started/overview",title:"Overview",description:"Get started with installing Tracetest Core. Tracetest Core allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",source:"@site/docs/core/getting-started/overview.mdx",sourceDirName:"core/getting-started",slug:"/core/getting-started/overview",permalink:"/core/getting-started/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/core/getting-started/overview.mdx",tags:[],version:"current",frontMatter:{id:"overview",title:"Overview",description:"Get started with installing Tracetest Core. Tracetest Core allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"CLI Reference",permalink:"/cli/reference/tracetest_wait"},next:{title:"Configuration",permalink:"/core/configuration/overview"}},u={},p=[{value:"Install the Tracetest CLI",id:"install-the-tracetest-cli",level:2},{value:"Install the Tracetest Server",id:"install-the-tracetest-server",level:2}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components},{Details:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This page showcases getting started with Tracetest Core by using the Tracetest CLI, Docker, or Kubernetes."}),"\n",(0,s.jsxs)(t.p,{children:["This simple installation includes a demo app called ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop"})," that will be installed alongside Tracetest Core. It shows how to configure OpenTelemetry and Tracetest Core and the architecture of the Pokeshop sample app."]}),"\n",(0,s.jsx)(t.h2,{id:"install-the-tracetest-cli",children:"Install the Tracetest CLI"}),"\n",(0,s.jsx)(i.A,{}),"\n",(0,s.jsx)(t.admonition,{title:"Want more info?",type:"tip",children:(0,s.jsxs)(t.p,{children:["Read the CLI installation reference ",(0,s.jsx)(t.a,{href:"/cli/cli-installation-reference",children:"here"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"install-the-tracetest-server",children:"Install the Tracetest Server"}),"\n",(0,s.jsxs)(t.p,{children:["Tracetest Core runs as a standalone container. It runs a Server and exposes a Web UI on port ",(0,s.jsx)(t.code,{children:"11633"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"You have three options to install Tracetest Server:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Using the Tracetest CLI to guide your installation in Docker and Kubernetes."}),"\n",(0,s.jsxs)(t.li,{children:["Using the official ",(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/helm-charts/tree/main/charts/tracetest",children:"Helm chart"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Using the ",(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples/quick-start-pokeshop",children:"Docker Compose Quick Start with the Pokeshop Sample App"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(a.A,{groupId:"installation",children:[(0,s.jsxs)(l.A,{value:"cli",label:"Tracetest CLI",default:!0,children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"tracetest server install\n"})}),(0,s.jsxs)(a.A,{groupId:"container-orchestrators",children:[(0,s.jsxs)(l.A,{value:"docker-compose",label:"Docker Compose",default:!0,children:[(0,s.jsx)(o.A,{language:"text",title:"Terminal",children:"How do you want to run Tracetest? [type to search]:\n> Using Docker Compose\n  Using Kubernetes"}),(0,s.jsxs)(t.p,{children:["Choose to install Tracetest with the OpenTelemetry Collector and the ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop"})," sample app."]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",metastring:'title="Expected output:"',children:"Do you have OpenTelemetry based tracing already set up, or would you like us to install a demo tracing environment and app? [type to search]: \n  I have a tracing environment already. - Just install Tracetest.\n> Just learning tracing! Install Tracetest, OpenTelemetry Collector and the sample app.\n"})}),(0,s.jsxs)(t.p,{children:["Choosing any option, this installer will create a ",(0,s.jsx)(t.code,{children:"tracetest"})," directory in the current directory and add a ",(0,s.jsx)(t.code,{children:"docker-compose.yaml"})," file to it."]}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["If you choose the first option, the ",(0,s.jsx)(t.code,{children:"docker-compose.yaml"})," will have only Tracetest Core and its dependencies."]}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsxs)(t.strong,{children:["By choosing the second option, a sample app called ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop"})," will be installed with Tracetest Core, allowing you to create sample tests right away!"]})}),"\n"]}),(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Click to view Pokeshop Sample App Architecture"})}),(0,s.jsx)(t.p,{children:"Here's the Architecture of the Pokeshop Sample App:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["an ",(0,s.jsx)(t.strong,{children:"API"})," that serves client requests,"]}),"\n",(0,s.jsxs)(t.li,{children:["a ",(0,s.jsx)(t.strong,{children:"Worker"})," who deals with background processes."]}),"\n"]}),(0,s.jsxs)(t.p,{children:["The communication between the API and Worker is made using a ",(0,s.jsx)(t.code,{children:"RabbitMQ"})," queue, and both services emit telemetry data to OpenTelemetry Collector and communicate with a Postgres database."]}),(0,s.jsx)(t.p,{children:"Tracetest triggers tests against the Node.js API."}),(0,s.jsx)(t.mermaid,{value:"flowchart TD\n    A[(Redis)]\n    B[(Postgres)]\n    C(Node.js API)\n    D(RabbitMQ)\n    E(Worker)\n    F(OpenTelemetry Collector)\n    G(Tracetest)\n\n    G --\x3e C\n    F --\x3e G\n    C --\x3e A\n    C --\x3e B\n    C --\x3e D\n    D --\x3e E\n    E --\x3e B\n    C --\x3e F\n    E --\x3e F\n    \n    "})]}),(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Start Docker Compose from the directory where you ran ",(0,s.jsx)(t.code,{children:"tracetest server install"}),"."]})}),(0,s.jsx)(o.A,{language:"bash",title:"Terminal",children:"docker compose -f tracetest/docker-compose.yaml up -d"}),(0,s.jsxs)(t.p,{children:["This will start the Tracetest Server and expose the Web UI on ",(0,s.jsx)(t.a,{href:"http://localhost:11633",children:(0,s.jsx)(t.code,{children:"http://localhost:11633"})}),"."]})]}),(0,s.jsxs)(l.A,{value:"kubernetes",label:"Kubernetes",children:[(0,s.jsx)(o.A,{language:"text",title:"Terminal",children:"How do you want to run TraceTest? [type to search]:\n  Using Docker Compose\n> Using Kubernetes"}),(0,s.jsxs)(t.p,{children:["Choose to install Tracetest Core with the OpenTelemetry Collector and the ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop"})," sample app."]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",metastring:'title="Expected output:"',children:"Do you have OpenTelemetry based tracing already set up, or would you like us to install a demo tracing environment and app? [type to search]: \n  I have a tracing environment already - Just install Tracetest.\n> Just learning tracing! Install Tracetest, OpenTelemetry Collector and the sample app.\n"})}),(0,s.jsxs)(t.p,{children:["Choosing any option, this installer will create a ",(0,s.jsx)(t.code,{children:"tracetest"})," namespace in the Kubernetes context you choose and create deployments for Tracetest Core and its dependencies."]}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["If you choose the first option, the ",(0,s.jsx)(t.code,{children:"tracetest"})," namespace will only contain Tracetest Core and its dependencies."]}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsxs)(t.strong,{children:["By choosing the second option, a sample app called ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop"})," will be installed in a ",(0,s.jsx)(t.code,{children:"demo"})," namespace alongside Tracetest Core, allowing you to create sample tests right away!"]})}),"\n"]}),(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Click to view Pokeshop Sample App Architecture"})}),(0,s.jsx)(t.p,{children:"Here's the Architecture of the Pokeshop Sample App:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["an ",(0,s.jsx)(t.strong,{children:"API"})," that serves client requests,"]}),"\n",(0,s.jsxs)(t.li,{children:["a ",(0,s.jsx)(t.strong,{children:"Worker"})," who deals with background processes."]}),"\n"]}),(0,s.jsxs)(t.p,{children:["The communication between the API and Worker is made using a ",(0,s.jsx)(t.code,{children:"RabbitMQ"})," queue, and both services emit telemetry data to OpenTelemetry Collector and communicate with a Postgres database."]}),(0,s.jsx)(t.p,{children:"Tracetest triggers tests against the Node.js API."}),(0,s.jsx)(t.mermaid,{value:"flowchart TD\n    A[(Redis)]\n    B[(Postgres)]\n    C(Node.js API)\n    D(RabbitMQ)\n    E(Worker)\n    F(OpenTelemetry Collector)\n    G(Tracetest)\n\n    G --\x3e C\n    F --\x3e G\n    C --\x3e A\n    C --\x3e B\n    C --\x3e D\n    D --\x3e E\n    E --\x3e B\n    C --\x3e F\n    E --\x3e F\n    \n    "})]}),(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Access the Tracetest Server by port forwarding to the Tracetest ",(0,s.jsx)(t.code,{children:"service"}),"."]})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:"title=Terminal",children:'export POD_NAME=$(kubectl get pods --namespace demo -l "app.kubernetes.io/name=pokemon-api,app.kubernetes.io/instance=demo" -o jsonpath="{.items[0].metadata.name}")\nexport CONTAINER_PORT=$(kubectl get pod --namespace demo $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")\nkubectl --namespace demo port-forward $POD_NAME 8080:$CONTAINER_PORT\necho "Open http://127.0.0.1:8080 to view the Pokeshop demo app"\n\nkubectl --kubeconfig <path-to-your-home>/.kube/config --context <your-cluster-context> --namespace tracetest port-forward svc/tracetest 11633\necho "Open http://127.0.0.1:11633 to view the Tracetest Web UI"\n'})}),(0,s.jsxs)(t.p,{children:["Access the Tracetest Web UI on ",(0,s.jsx)(t.a,{href:"http://localhost:11633",children:(0,s.jsx)(t.code,{children:"http://localhost:11633"})}),"."]})]})]})]}),(0,s.jsxs)(l.A,{value:"helm",label:"Helm Chart",children:[(0,s.jsxs)(t.p,{children:["First, be sure that you have ",(0,s.jsx)(t.a,{href:"https://helm.sh/",children:"Helm"})," installed in your machine."]}),(0,s.jsxs)(t.p,{children:["The Tracetest Helm charts are located ",(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/helm-charts/tree/main/charts/tracetest",children:"here"}),"."]}),(0,s.jsx)(t.p,{children:"You can install them locally on your machine with the command:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:"title=Terminal",children:"helm repo add kubeshop https://kubeshop.github.io/helm-charts\nhelm repo update\n"})}),(0,s.jsxs)(t.p,{children:["After that, you can install Tracetest with ",(0,s.jsx)(t.code,{children:"helm install"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:"title=Terminal",children:"helm install tracetest kubeshop/tracetest --namespace=tracetest --create-namespace\n"})}),(0,s.jsx)(t.p,{children:"Or, generate a manifest file and apply it manually in your Kubernetes cluster:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:"title=Terminal",children:"helm template tracetest kubeshop/tracetest > tracetest-kubernetes-manifests.yaml\nkubectl apply -f ./tracetest-kubernetes-manifests.yaml\n"})}),(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Access the Tracetest Server by port forwarding to the Tracetest ",(0,s.jsx)(t.code,{children:"service"}),"."]})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:"title=Terminal",children:"kubectl --kubeconfig <path-to-your-home>/.kube/config --context <your-cluster-context> --namespace tracetest port-forward svc/tracetest 11633\n"})}),(0,s.jsxs)(t.p,{children:["Access the Tracetest Web UI on ",(0,s.jsx)(t.a,{href:"http://localhost:11633",children:(0,s.jsx)(t.code,{children:"http://localhost:11633"})}),"."]})]}),(0,s.jsxs)(l.A,{value:"docker-compose",label:"Docker Compose",children:[(0,s.jsxs)(t.p,{children:["First, be sure that you have ",(0,s.jsx)(t.a,{href:"https://docker.com/",children:"Docker"})," installed in your machine."]}),(0,s.jsxs)(t.p,{children:["The Quick Start with the Pokeshop Sample App is located ",(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/tree/main/examples/quick-start-pokeshop",children:"here"}),"."]}),(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["The ",(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/blob/main/examples/quick-start-pokeshop/docker-compose.yml",children:(0,s.jsx)(t.code,{children:"docker-compose.yaml"})})," contains Tracetest Core, the OpenTelemetry Collector, and a sample app called ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop"}),". This allows you to create sample tests right away!"]})}),(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Click to view Pokeshop Sample App Architecture"})}),(0,s.jsx)(t.p,{children:"Here's the Architecture of the Pokeshop Sample App:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["an ",(0,s.jsx)(t.strong,{children:"API"})," that serves client requests,"]}),"\n",(0,s.jsxs)(t.li,{children:["a ",(0,s.jsx)(t.strong,{children:"Worker"})," who deals with background processes."]}),"\n"]}),(0,s.jsxs)(t.p,{children:["The communication between the API and Worker is made using a ",(0,s.jsx)(t.code,{children:"RabbitMQ"})," queue, and both services emit telemetry data to OpenTelemetry Collector and communicate with a Postgres database."]}),(0,s.jsx)(t.p,{children:"Tracetest triggers tests against the Node.js API."}),(0,s.jsx)(t.mermaid,{value:"flowchart TD\n    A[(Redis)]\n    B[(Postgres)]\n    C(Node.js API)\n    D(RabbitMQ)\n    E(Worker)\n    F(OpenTelemetry Collector)\n    G(Tracetest)\n\n    G --\x3e C\n    F --\x3e G\n    C --\x3e A\n    C --\x3e B\n    C --\x3e D\n    D --\x3e E\n    E --\x3e B\n    C --\x3e F\n    E --\x3e F\n    \n    "})]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Start Docker Compose."})}),(0,s.jsx)(o.A,{language:"bash",title:"Terminal",children:"docker compose -f docker-compose.yaml up -d"}),(0,s.jsxs)(t.p,{children:["This will start the Tracetest Server and expose the Web UI on ",(0,s.jsx)(t.a,{href:"http://localhost:11633",children:(0,s.jsx)(t.code,{children:"http://localhost:11633"})}),"."]})]})]}),"\n",(0,s.jsxs)(t.admonition,{title:"Don't have OpenTelemetry installed?",type:"tip",children:[(0,s.jsxs)(t.p,{children:["Tracetest requires that you have ",(0,s.jsx)(t.a,{href:"https://opentelemetry.io/docs/instrumentation/",children:"OpenTelemetry instrumentation"})," added in your code, and configured ",(0,s.jsx)(t.a,{href:"/configuration/connecting-to-data-stores/jaeger",children:"sending traces to a trace data store"}),", or ",(0,s.jsx)(t.a,{href:"/configuration/connecting-to-data-stores/opentelemetry-collector",children:"Tracetest directly"}),"."]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/getting-started/no-otel",children:"Follow these instructions to install OpenTelemetry in 5 minutes without any code changes!"})})]})]})}function x(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},7227:(e,t,r)=>{r.d(t,{A:()=>l});r(96540);var s=r(34164);const n={tabItem:"tabItem_Ymn6"};var a=r(74848);function l(e){let{children:t,hidden:r,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(n.tabItem,l),hidden:r,children:t})}},49489:(e,t,r)=>{r.d(t,{A:()=>k});var s=r(96540),n=r(34164),a=r(24245),l=r(56347),o=r(36494),i=r(62814),c=r(45167),h=r(81269);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:r}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:r,attributes:s,default:n}}=e;return{value:t,label:r,attributes:s,default:n}}))}(r);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function p(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:r}=e;const n=(0,l.W6)(),a=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})}),[a,n])]}function x(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,a=u(e),[l,i]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:a}))),[c,d]=m({queryString:r,groupId:n}),[x,g]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,a]=(0,h.Dv)(r);return[n,(0,s.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:n}),b=(()=>{const e=c??x;return p({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{b&&i(b)}),[b]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),g(e)}),[d,g,a]),tabValues:a}}var g=r(11062);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=r(74848);function v(e){let{className:t,block:r,selectedValue:s,selectValue:l,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),h=e=>{const t=e.currentTarget,r=i.indexOf(t),n=o[r].value;n!==s&&(c(t),l(n))},d=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;t=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;t=i[r]??i[i.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":r},t),children:o.map((e=>{let{value:t,label:r,attributes:a}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>i.push(e),onKeyDown:d,onClick:h,...a,className:(0,n.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":s===t}),children:r??t},t)}))})}function f(e){let{lazy:t,children:r,selectedValue:n}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===n));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function y(e){const t=x(e);return(0,j.jsxs)("div",{className:(0,n.A)("tabs-container",b.tabList),children:[(0,j.jsx)(v,{...e,...t}),(0,j.jsx)(f,{...e,...t})]})}function k(e){const t=(0,g.A)();return(0,j.jsx)(y,{...e,children:d(e.children)},String(t))}},92945:(e,t,r)=>{r.d(t,{A:()=>o});r(96540);var s=r(49489),n=r(7227),a=r(2250),l=r(74848);function o(){function e(e){let{event:t,installationPlatform:r}=e;window.dataLayer=window.dataLayer||[],window.dataLayer.push({installationPlatform:r,event:"installationPlatform"})}return(0,l.jsxs)(s.A,{groupId:"operating-systems",children:[(0,l.jsx)(n.A,{value:"mac",label:"MAC",default:!0,children:(0,l.jsx)("div",{onClick:()=>e({installationPlatform:"MacOS"}),children:(0,l.jsx)(a.A,{language:"bash",title:"Terminal",children:"brew install kubeshop/tracetest/tracetest"})})}),(0,l.jsx)(n.A,{value:"linux",label:"LINUX",children:(0,l.jsx)("div",{onClick:()=>e({installationPlatform:"Linux"}),children:(0,l.jsx)(a.A,{language:"bash",title:"Terminal",children:"curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash"})})}),(0,l.jsx)(n.A,{value:"win",label:"WINDOWS",children:(0,l.jsx)("div",{onClick:()=>e({installationPlatform:"Windows"}),children:(0,l.jsx)(a.A,{language:"bash",title:"Terminal",children:"choco source add --name=kubeshop_repo --source=https://chocolatey.kubeshop.io/chocolatey ; choco install tracetest"})})})]})}}}]);