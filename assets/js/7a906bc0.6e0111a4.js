"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[7373],{2620:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var n=t(74848),a=t(28453);const i={id:"add-pokemon",title:"Pokeshop API - Add Pokemon",description:"As a testing ground, the Tracetest team has implemented a sample API instrumented with OpenTelemetry around the PokeAPI. This use case showcases a simple example of an API call where call data is validated and persisted into a database.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},o=void 0,r={id:"live-examples/pokeshop/use-cases/add-pokemon",title:"Pokeshop API - Add Pokemon",description:"As a testing ground, the Tracetest team has implemented a sample API instrumented with OpenTelemetry around the PokeAPI. This use case showcases a simple example of an API call where call data is validated and persisted into a database.",source:"@site/docs/live-examples/pokeshop/use-cases/add-pokemon.mdx",sourceDirName:"live-examples/pokeshop/use-cases",slug:"/live-examples/pokeshop/use-cases/add-pokemon",permalink:"/live-examples/pokeshop/use-cases/add-pokemon",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/live-examples/pokeshop/use-cases/add-pokemon.mdx",tags:[],version:"current",frontMatter:{id:"add-pokemon",title:"Pokeshop API - Add Pokemon",description:"As a testing ground, the Tracetest team has implemented a sample API instrumented with OpenTelemetry around the PokeAPI. This use case showcases a simple example of an API call where call data is validated and persisted into a database.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"guidesSidebar",previous:{title:"Pokeshop API Demo",permalink:"/live-examples/pokeshop/overview"},next:{title:"Pokeshop API - List Pokemon",permalink:"/live-examples/pokeshop/use-cases/list-pokemon"}},d={},l=[{value:"Building a Test for This Scenario",id:"building-a-test-for-this-scenario",level:2},{value:"Traces",id:"traces",level:3},{value:"Assertions",id:"assertions",level:3},{value:"Test Definition",id:"test-definition",level:3}];function c(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"This use case showcases a simple example of an API call where call data is validated and persisted into a database."}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n    participant Endpoint as POST /pokemon\n    participant API as API\n    participant Database as Postgres\n    \n    Endpoint->>API: request\n\n    alt request is invalid\n        API--\x3e>Endpoint: 400 Bad Request <br> <List of errors>\n    end\n\n    API->>Database: save pokemon\n    Database--\x3e>API: saved pokemon\n\n    API--\x3e>Endpoint: 201 Created <br> <Pokemon object>"}),"\n",(0,n.jsxs)(s.p,{children:["You can trigger this use case by calling the endpoint ",(0,n.jsx)(s.code,{children:"POST /pokemon"}),", with the following request body:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "name":  "meowth",\n  "type":  "normal",\n  "imageUrl":  "https://assets.pokemon.com/assets/cms2/img/pokedex/full/052.png",\n  "isFeatured":  true\n}\n'})}),"\n",(0,n.jsx)(s.p,{children:"It should return the following payload:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "id":  1000,\n  "name":  "meowth",\n  "type":  "normal",\n  "imageUrl":  "https://assets.pokemon.com/assets/cms2/img/pokedex/full/052.png",\n  "isFeatured":  true\n}\n'})}),"\n",(0,n.jsx)(s.h2,{id:"building-a-test-for-this-scenario",children:"Building a Test for This Scenario"}),"\n",(0,n.jsxs)(s.p,{children:["Using Tracetest, we can ",(0,n.jsx)(s.a,{href:"/web-ui/creating-tests",children:"create a test"})," that will execute an API call on ",(0,n.jsx)(s.code,{children:"POST /pokemon"})," and validate two properties:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["The API should return a proper result with ",(0,n.jsx)(s.strong,{children:"HTTP 201 Created"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["The database should return with ",(0,n.jsx)(s.strong,{children:"low latency (< 200ms)"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"traces",children:"Traces"}),"\n",(0,n.jsxs)(s.p,{children:["Running these tests for the first time will create an Observability trace like the image above, where you can see spans for the API call, validation (an API internal operation) and database calls:\n",(0,n.jsx)(s.img,{src:t(26135).A+"",width:"2014",height:"1418"})]}),"\n",(0,n.jsx)(s.h3,{id:"assertions",children:"Assertions"}),"\n",(0,n.jsxs)(s.p,{children:["With this trace, now we can build ",(0,n.jsx)(s.a,{href:"/concepts/assertions",children:"assertions"})," on Tracetest and validate the API response and the database latency:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"The API should return a proper result with HTTP 201 Created:"}),"\n",(0,n.jsx)(s.img,{src:t(31087).A+"",width:"2974",height:"908"})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"The database should return with low latency (< 200ms):"}),"\n",(0,n.jsx)(s.img,{src:t(39650).A+"",width:"2966",height:"1510"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Now you can validate this entire use case."}),"\n",(0,n.jsx)(s.h3,{id:"test-definition",children:"Test Definition"}),"\n",(0,n.jsxs)(s.p,{children:["If you want to replicate this entire test on Tracetest, you can replicate these steps on our Web UI or using our CLI, saving the following test definition as the file ",(0,n.jsx)(s.code,{children:"test-definition.yml"})," and later running:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sh",children:"tracetest run test -f test-definition.yml\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'type: Test\nspec:\n  name: Pokeshop - Add\n  description: Add a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      url: http://demo-pokemon-api.demo/pokemon\n      method: POST\n      headers:\n      - key: Content-Type\n        value: application/json\n      body: \'{"name":"meowth","type":"normal","imageUrl":"https://assets.pokemon.com/assets/cms2/img/pokedex/full/052.png","isFeatured":true}\'\n  specs:\n  - selector: span[tracetest.span.type="http" name="POST /pokemon" http.method="POST"]\n    assertions:\n    - attr:http.response.body  =  \'{"id":6152,"imageUrl":"https://assets.pokemon.com/assets/cms2/img/pokedex/full/052.png","isFeatured":true,"type":"normal","name":"meowth"}\'\n    - attr:http.status_code  =  201\n  - selector: span[tracetest.span.type="database"]\n    assertions:\n    - attr:tracetest.span.duration <= 200ms\n'})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},31087:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/add-pokemon-api-test-spec-e38a05b28ff40c3c081f7b2e36fdc642.png"},39650:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/add-pokemon-database-test-spec-680807e20e2d638867ccb8c3f5738884.png"},26135:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/add-pokemon-trace-57bd6b1bca1b5d66ab92b47b45d18450.png"},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>r});var n=t(96540);const a={},i=n.createContext(a);function o(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);