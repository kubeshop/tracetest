"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[7701],{1389:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=i(74848),s=i(28453);const r={id:"creating-tests-traceid",title:"Defining TraceID Tests as Text Files",description:"Tracetest enables developers to define tests as text files and run them using a CLI. Integrate the execution of tests in your existing CI pipeline.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},a=void 0,c={id:"cli/creating-tests-traceid",title:"Defining TraceID Tests as Text Files",description:"Tracetest enables developers to define tests as text files and run them using a CLI. Integrate the execution of tests in your existing CI pipeline.",source:"@site/docs/cli/creating-tests-traceid.mdx",sourceDirName:"cli",slug:"/cli/creating-tests-traceid",permalink:"/cli/creating-tests-traceid",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/cli/creating-tests-traceid.mdx",tags:[],version:"current",frontMatter:{id:"creating-tests-traceid",title:"Defining TraceID Tests as Text Files",description:"Tracetest enables developers to define tests as text files and run them using a CLI. Integrate the execution of tests in your existing CI pipeline.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Defining GraphQL Tests as Text Files",permalink:"/cli/creating-tests-graphql"},next:{title:"Defining Test Specifications in Text Files",permalink:"/cli/creating-test-specifications"}},o={},d=[];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"When defining a TraceID trigger, you are required to define a name for the TraceID variable. Then you use an existing TraceID from your tracing backend to run a test."}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["Please note you are required to use a ",(0,n.jsx)(t.a,{href:"/configuration/connecting-to-data-stores/overview#native-connection-polling",children:"Native Connection Tracing Backend integration"})," with Tracetest."]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"trigger:\n  type: traceid\n  traceid:\n    id: <TraceID>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>c});var n=i(96540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);