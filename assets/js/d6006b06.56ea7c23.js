"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[2999],{92594:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=i(74848),s=i(28453);const o={id:"overview",title:"CI/CD Automation",description:"Overview of running automated trace-based testing with Tracetest in CI/CD pipelines.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},r=void 0,c={id:"ci-cd-automation/overview",title:"CI/CD Automation",description:"Overview of running automated trace-based testing with Tracetest in CI/CD pipelines.",source:"@site/docs/ci-cd-automation/overview.mdx",sourceDirName:"ci-cd-automation",slug:"/ci-cd-automation/overview",permalink:"/ci-cd-automation/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/ci-cd-automation/overview.mdx",tags:[],version:"current",frontMatter:{id:"overview",title:"CI/CD Automation",description:"Overview of running automated trace-based testing with Tracetest in CI/CD pipelines.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"guidesSidebar",previous:{title:"Running Tracetest with Testkube",permalink:"/tools-and-integrations/testkube"},next:{title:"Github Actions Pipeline with Secrets",permalink:"/ci-cd-automation/github-actions-pipeline-with-secrets"}},a={},l=[{value:"Running Tracetest CLI from Docker",id:"running-tracetest-cli-from-docker",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"This section contains a general overview of running Tracetest in CI/CD pipelines."}),"\n",(0,n.jsx)(t.p,{children:"You can find guides for:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/ci-cd-automation/github-actions-pipeline-with-secrets",children:"GitHub Actions with Secrets"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/ci-cd-automation/testkube-pipeline",children:"Testkube"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/ci-cd-automation/tekton-pipeline",children:"Tekton"})}),"\n"]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["If you want to see more examples with other CI/CD tools, let us know by ",(0,n.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest/issues/new/choose",children:"opening an issue in GitHub"}),"!"]})}),"\n",(0,n.jsxs)(t.p,{children:["Tracetest is designed to work with all CI/CD platforms and automation tools. To enable Tracetest to run in CI/CD environments, make sure to ",(0,n.jsx)(t.a,{href:"/getting-started/install-cli",children:"install the Tracetest CLI and configure it to access your Tracetest account"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"To read more about integrating Tracetest with CI/CD tools, check out tutorials in our blog:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://kubeshop.io/blog/integrating-tracetest-with-github-actions-in-a-ci-pipeline",children:"Integrating Tracetest with GitHub Actions in a CI pipeline"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://tracetest.io/blog/50-faster-ci-pipelines-with-github-actions",children:"50% Faster CI Pipelines with GitHub Actions"})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"running-tracetest-cli-from-docker",children:"Running Tracetest CLI from Docker"}),"\n",(0,n.jsxs)(t.p,{children:["Many integrations with CI/CD tools can be accomplished by running the ",(0,n.jsx)(t.a,{href:"../cli/configuring-your-cli",children:"Tracetest CLI"})," to execute a test against a remote Tracetest server. If you do not want to install the Tracetest CLI in your environment, you can choose to directly execute it from a Docker image."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"How to Use"}),":"]}),"\n",(0,n.jsx)(t.p,{children:"Use the command below, substituting the following placeholders:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"your-tracetest-server-url"})," - the URL to the running Tracetest server you wish to execute the test on. Example: ",(0,n.jsx)(t.code,{children:"http://localhost:11633/"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"file-path"})," - The path to the saved Tracetest test. Example: ",(0,n.jsx)(t.code,{children:"./mytest.yaml"})]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:"wordWrap=true",children:"docker run --rm -it -v$(pwd):$(pwd) -w $(pwd) --network host --entrypoint tracetest kubeshop/tracetest:latest -s <your-tracetest-server-url> run test --file <file-path>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var n=i(96540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);