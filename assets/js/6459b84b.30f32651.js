"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[6459],{20333:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>x,frontMatter:()=>o,metadata:()=>h,toc:()=>p});var s=n(74848),r=n(28453),a=n(49489),l=n(7227),i=n(2250),c=n(92945);const o={id:"installation",title:"Installing Tracetest",description:"Get started by installing Tracetest! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",hide_table_of_contents:!0,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},d=void 0,h={id:"getting-started/installation",title:"Installing Tracetest",description:"Get started by installing Tracetest! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",source:"@site/docs/getting-started/installation.mdx",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/getting-started/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/getting-started/installation.mdx",tags:[],version:"current",frontMatter:{id:"installation",title:"Installing Tracetest",description:"Get started by installing Tracetest! Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",hide_table_of_contents:!0,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"}},u={},p=[{value:"Install the Tracetest CLI",id:"install-the-tracetest-cli",level:2},{value:"Install the Tracetest Agent",id:"install-the-tracetest-agent",level:2},{value:"Start the Sample Pokeshop API",id:"start-the-sample-pokeshop-api",level:2},{value:"Install Tracetest On-Prem",id:"install-tracetest-on-prem",level:2}];function g(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["This page showcases getting started with ",(0,s.jsx)(t.a,{href:"https://app.tracetest.io/",children:"Tracetest"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"You can configure Cloud-based Managed Tracetest by using the Tracetest CLI and Tracetest Agent, or Enterprise Self-hosted Tracetest in your own infrastructure."}),"\n",(0,s.jsxs)(a.A,{groupId:"saas-onprem",children:[(0,s.jsxs)(l.A,{value:"saas",label:"Cloud-based Managed Tracetest",default:!0,children:[(0,s.jsx)(t.h2,{id:"install-the-tracetest-cli",children:"Install the Tracetest CLI"}),(0,s.jsx)(c.A,{}),(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io/",children:"Sign in to Tracetest"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Create an ",(0,s.jsx)(t.a,{href:"/concepts/organizations",children:"Organization"})," and ",(0,s.jsx)(t.a,{href:"/concepts/environments",children:"Environment"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Copy your ",(0,s.jsx)(t.a,{href:"https://app.tracetest.io/retrieve-token",children:"Tracetest Organization API Key/Token and Environment ID"}),"."]}),"\n",(0,s.jsx)(t.li,{children:"Configure the CLI with your Organization API Key/Token and Environment ID."}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"tracetest configure -t <TRACETEST_API_KEY> --environment <TRACETEST_ENVIRONMENT_ID>\n"})}),(0,s.jsx)(t.h2,{id:"install-the-tracetest-agent",children:"Install the Tracetest Agent"}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/concepts/agent",children:"Tracetest Agent"})," runs as a standalone process. It runs either locally on your machine or as a container."]}),(0,s.jsxs)(a.A,{groupId:"installation",children:[(0,s.jsxs)(l.A,{value:"cli",label:"Tracetest CLI",default:!0,children:[(0,s.jsx)(i.A,{language:"text",title:"Terminal",children:"tracetest start --api-key <TRACETEST_API_KEY> --environment <TRACETEST_ENVIRONMENT_ID>"}),(0,s.jsx)(i.A,{language:"text",title:"Expected output:",children:"Tracetest start launches a lightweight agent. It enables you to run tests and collect traces with Tracetest.\nOnce started, Tracetest Agent exposes OTLP ports 4317 and 4318 to ingest traces via gRCP and HTTP.\n\n INFO  Running in desktop mode...\n INFO  Starting Agent with name...\nAgent is started! Leave the terminal open so tests can be run and traces gathered from this environment.\nYou can:\n> Open Tracetest in a browser to this environment\n  (Experimental) Open Dashboard\n  Stop this agent"}),(0,s.jsxs)(t.p,{children:["Once started, Tracetest Agent exposes OTLP ports ",(0,s.jsx)(t.code,{children:"4317"})," (gRPC) and ",(0,s.jsx)(t.code,{children:"4318"})," (HTTP) for trace ingestion. It executes tests in the environment where it is running and returns the response from triggered tests."]}),(0,s.jsxs)(t.p,{children:["gRPC: ",(0,s.jsx)(t.code,{children:"http://localhost:4317"})]}),(0,s.jsxs)(t.p,{children:["HTTP: ",(0,s.jsx)(t.code,{children:"http://localhost:4318/v1/traces"})]})]}),(0,s.jsxs)(l.A,{value:"docker",label:"Docker",children:[(0,s.jsx)(i.A,{language:"js",title:"Terminal",children:'docker run \\\n  -p 4317:4317 \\\n  -p 4318:4318 \\\n  -e TRACETEST_API_KEY="<TRACETEST_API_KEY>" \\\n  -e TRACETEST_ENVIRONMENT_ID="<TRACETEST_ENVIRONMENT_ID>" \\\n  kubeshop/tracetest-agent'}),(0,s.jsx)(t.p,{children:"The Tracetest Agent is running in Docker and ready to accept traces."}),(0,s.jsxs)(t.p,{children:["gRPC: ",(0,s.jsx)(t.code,{children:"http://<service-name>:4317"})]}),(0,s.jsxs)(t.p,{children:["HTTP: ",(0,s.jsx)(t.code,{children:"http://<service-name>:4318/v1/traces"})]}),(0,s.jsxs)(t.admonition,{title:"Docker Network",type:"note",children:[(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container."]}),(0,s.jsx)(t.p,{children:"To run tests against apps running on your local machine you have two options:"}),(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Run Tracetest Agent locally with the ",(0,s.jsx)(t.code,{children:"tracetest start"})," command."]}),"\n",(0,s.jsxs)(t.li,{children:["Add Tracetest Agent to the same network and use service name mapping. ",(0,s.jsxs)(t.em,{children:["Example: Instead of running an app on ",(0,s.jsx)(t.code,{children:"localhost:8080"}),", add it to your Docker Compose file, connect it to the same network as your Tracetest Agent service, and use ",(0,s.jsx)(t.code,{children:"<service-name>:8080"})," in the URL field when creating a test."]})]}),"\n"]}),(0,s.jsx)(t.p,{children:"You can reach services running on your local machine using:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Linux (docker version < 20.10.0): ",(0,s.jsx)(t.code,{children:"172.17.0.1:8080"})]}),"\n",(0,s.jsxs)(t.li,{children:["MacOS (docker version >= 18.03) and Linux (docker version >= 20.10.0): ",(0,s.jsx)(t.code,{children:"host.docker.internal:8080"})]}),"\n"]})]})]}),(0,s.jsxs)(l.A,{value:"docker-compose",label:"Docker Compose",children:[(0,s.jsx)(i.A,{language:"yaml",title:"docker-compose.yaml",children:"tracetest-agent:\n  image: kubeshop/tracetest-agent\n  environment:\n    - TRACETEST_API_KEY=<TRACETEST_API_KEY>\n    - TRACETEST_ENVIRONMENT_ID=<TRACETEST_ENVIRONMENT_ID>\n  ports:\n    - 4317:4317\n    - 4318:4318"}),(0,s.jsx)(t.p,{children:"The Tracetest Agent is running in Docker and ready to accept traces."}),(0,s.jsxs)(t.p,{children:["gRPC: ",(0,s.jsx)(t.code,{children:"http://tracetest-agent:4317"})]}),(0,s.jsxs)(t.p,{children:["HTTP: ",(0,s.jsx)(t.code,{children:"http://tracetest-agent:4318/v1/traces"})]}),(0,s.jsxs)(t.admonition,{title:"Docker Network",type:"note",children:[(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container."]}),(0,s.jsx)(t.p,{children:"To run tests against apps running on your local machine you have two options:"}),(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Run Tracetest Agent locally with the ",(0,s.jsx)(t.code,{children:"tracetest start"})," command."]}),"\n",(0,s.jsxs)(t.li,{children:["Add Tracetest Agent to the same network and use service name mapping. ",(0,s.jsxs)(t.em,{children:["Example: Instead of running an app on ",(0,s.jsx)(t.code,{children:"localhost:8080"}),", add it to your Docker Compose file, connect it to the same network as your Tracetest Agent service, and use ",(0,s.jsx)(t.code,{children:"<service-name>:8080"})," in the URL field when creating a test."]})]}),"\n"]}),(0,s.jsx)(t.p,{children:"You can reach services running on your local machine using:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Linux (docker version < 20.10.0): ",(0,s.jsx)(t.code,{children:"172.17.0.1:8080"})]}),"\n",(0,s.jsxs)(t.li,{children:["MacOS (docker version >= 18.03) and Linux (docker version >= 20.10.0): ",(0,s.jsx)(t.code,{children:"host.docker.internal:8080"})]}),"\n"]})]})]}),(0,s.jsxs)(l.A,{value:"kubernetes",label:"Kubernetes",children:[(0,s.jsx)(i.A,{language:"yaml",title:"tracetest-agent.yaml",children:'---\n# Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: tracetest-agent\n  labels:\n    app.kubernetes.io/name: tracetest-agent\n    app.kubernetes.io/instance: tracetest-agent\nspec:\n  selector:\n    app.kubernetes.io/name: tracetest-agent\n    app.kubernetes.io/instance: tracetest-agent\n  ports:\n    - name: grpc-collector-entrypoint\n      protocol: TCP\n      port: 4317\n      targetPort: 4317\n    - name: http-collector-entrypoint\n      protocol: TCP\n      port: 4318\n      targetPort: 4318\n---\n# Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: tracetest-agent\n  labels:\n    app: tracetest-agent\n    app.kubernetes.io/name: tracetest-agent\n    app.kubernetes.io/instance: tracetest-agent\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: tracetest-agent\n      app.kubernetes.io/instance: tracetest-agent\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: tracetest-agent\n        app.kubernetes.io/instance: tracetest-agent\n    spec:\n      containers:\n        - name: agent\n          image: "kubeshop/tracetest-agent:latest"\n          imagePullPolicy: Always\n          args: [\n            "--environment",\n            "<TRACETEST_ENVIRONMENT_ID>", # Add your env id\n            "--api-key",\n            "$TRACETEST_API_KEY",\n            "--server-url",\n            "https://app.tracetest.io",\n          ]\n          env:\n          - name: TRACETEST_API_KEY\n            value: "<TRACETEST_API_KEY>" # Add your API key\n'}),(0,s.jsx)(i.A,{language:"css",title:"Terminal",children:"kubectl apply -f ./tracetest-agent.yaml"}),(0,s.jsx)(t.p,{children:"The Tracetest Agent is running in Kubernetes and ready to accept traces."}),(0,s.jsxs)(t.p,{children:["gRPC: ",(0,s.jsx)(t.code,{children:"http://tracetest-agent.default.svc.cluster.local:4317"})]}),(0,s.jsxs)(t.p,{children:["HTTP: ",(0,s.jsx)(t.code,{children:"http://tracetest-agent.default.svc.cluster.local:4318/v1/traces"})]}),(0,s.jsxs)(t.admonition,{title:"K8s Network",type:"note",children:[(0,s.jsxs)(t.p,{children:["Make sure to check use the correct ",(0,s.jsx)(t.code,{children:"<service-name>"})," if you edit the Tracetest Agent ",(0,s.jsx)(t.code,{children:"service"})," name."]}),(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container.\nMake sure to run tests using the internal Kubernetes service networking eg: ",(0,s.jsx)(t.code,{children:"http://api.default.svc.cluster.local:port"}),"."]})]})]}),(0,s.jsxs)(l.A,{value:"helm",label:"Helm",children:[(0,s.jsx)(i.A,{language:"js",title:"Terminal",children:"helm repo add tracetestcloud https://kubeshop.github.io/tracetest-cloud-charts --force-update && \\\n\nhelm install agent tracetestcloud/tracetest-agent \\\n--set agent.apiKey=<TRACETEST_API_KEY> --set agent.environmentId=<TRACETEST_ENVIRONMENT_ID>"}),(0,s.jsxs)(t.p,{children:["The Tracetest Agent is running in Kubernetes and ready to accept traces. With this installation of using ",(0,s.jsx)(t.code,{children:"agent"})," as the ",(0,s.jsx)(t.code,{children:"<release-name>"}),", the trace ingestion endpoints will be:"]}),(0,s.jsxs)(t.p,{children:["gRPC: ",(0,s.jsx)(t.code,{children:"http://agent-tracetest-agent:4317"})]}),(0,s.jsxs)(t.p,{children:["HTTP: ",(0,s.jsx)(t.code,{children:"http://agent-tracetest-agent:4318/v1/traces"})]}),(0,s.jsx)(t.admonition,{title:"K8s Network",type:"note",children:(0,s.jsxs)(t.p,{children:["Running a test against ",(0,s.jsx)(t.code,{children:"localhost"})," will resolve as ",(0,s.jsx)(t.code,{children:"127.0.0.1"})," inside the Tracetest Agent container.\nMake sure to run tests using the internal Kubernetes service networking eg: ",(0,s.jsx)(t.code,{children:"http://pokeshop-pokemon-api:8081"}),"."]})})]})]}),(0,s.jsx)(t.h2,{id:"start-the-sample-pokeshop-api",children:"Start the Sample Pokeshop API"}),(0,s.jsxs)(t.p,{children:["To create tests quickly, start the official sample called ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop API"}),"."]}),(0,s.jsxs)(a.A,{groupId:"installation",children:[(0,s.jsxs)(l.A,{value:"cli",label:"Tracetest CLI",default:!0,children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/tracetest.git\ncd tracetest/examples/tracetest-agent/pokeshop/\n\ndocker compose up -d --build\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - Access the Pokeshop API demo to run tests."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://localhost:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://host.docker.internal"})," - Pokeshop is running in Docker. Tracetest Agent is running on ",(0,s.jsx)(t.code,{children:"localhost"}),". To ingest traces and trigger tests use the ",(0,s.jsx)(t.code,{children:"host.docker.internal"})," value instead of ",(0,s.jsx)(t.code,{children:"localhost"}),"."]}),"\n"]})]}),(0,s.jsxs)(l.A,{value:"docker",label:"Docker",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop\n\ndocker compose up -d --build\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is exposed from Docker to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port. To run tests you will use the Docker internal network and the service name, ",(0,s.jsx)(t.code,{children:"http://api:8081"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tracetest-agent:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]})]}),(0,s.jsxs)(l.A,{value:"docker-compose",label:"Docker Compose",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop\n\ndocker compose up -d --build\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is exposed from Docker to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port. To run tests you will use the Docker internal network and the service name, ",(0,s.jsx)(t.code,{children:"http://api:8081"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tracetest-agent:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]})]}),(0,s.jsxs)(l.A,{value:"kubernetes",label:"Kubernetes",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop/k8s\n\nkubectl apply -f .\n"})}),(0,s.jsxs)(t.p,{children:["To access the Pokeshop API run a ",(0,s.jsx)(t.code,{children:"port-forward"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl port-forward svc/api 8081:8081\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is port forwarded from Kubernetes to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port."]}),"\n",(0,s.jsxs)(t.li,{children:["To run tests you will use the Kubernetes internal network and the service name, ",(0,s.jsx)(t.code,{children:"http://api.default.svc.cluster.local:8081"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tracetest-agent.default.svc.cluster.local:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]})]}),(0,s.jsxs)(l.A,{value:"helm",label:"Helm",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone --depth 1 https://github.com/kubeshop/pokeshop.git\ncd pokeshop/helm-charts\n\nhelm dependency update\nhelm install -f values.yaml --create-namespace pokeshop .\n"})}),(0,s.jsxs)(t.p,{children:["To access the Pokeshop API run a ",(0,s.jsx)(t.code,{children:"port-forward"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl port-forward svc/pokeshop-pokemon-api 8081:8081\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://app.tracetest.io",children:(0,s.jsx)(t.code,{children:"https://app.tracetest.io/"})})," - Access the Tracetest Web UI. Sign up and create an organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"http://localhost:8081",children:(0,s.jsx)(t.code,{children:"http://localhost:8081"})})," - The Pokeshop API demo is port forwarded from Kubernetes to ",(0,s.jsx)(t.code,{children:"localhost"})," on this port."]}),"\n",(0,s.jsxs)(t.li,{children:["To run tests you will use the Kubernetes internal network and the service name, ",(0,s.jsx)(t.code,{children:"http://pokeshop-pokemon-api:8081"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"http://agent-tracetest-agent:4317"})," - Trace ingestion URL where Tracetest Agent will accept traces."]}),"\n"]})]})]}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"Click to view the sample Pokeshop API architecture"})}),(0,s.jsx)(t.p,{children:"Here's the Architecture of the Pokeshop Sample App:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["an ",(0,s.jsx)(t.strong,{children:"API"})," that serves client requests,"]}),"\n",(0,s.jsxs)(t.li,{children:["a ",(0,s.jsx)(t.strong,{children:"Worker"})," who deals with background processes."]}),"\n"]}),(0,s.jsxs)(t.p,{children:["The communication between the API and Worker is made using a ",(0,s.jsx)(t.code,{children:"RabbitMQ"})," queue, and both services emit telemetry data to OpenTelemetry Collector and communicate with a Postgres database."]}),(0,s.jsx)(t.p,{children:"Tracetest triggers tests against the Node.js API."}),(0,s.jsx)(t.mermaid,{value:"flowchart TD\n    A[(Redis)]\n    B[(Postgres)]\n    C(Node.js API)\n    D(RabbitMQ)\n    E(Worker)\n    F(OpenTelemetry Collector)\n    G(Tracetest)\n\n    G --\x3e C\n    F --\x3e G\n    C --\x3e A\n    C --\x3e B\n    C --\x3e D\n    D --\x3e E\n    E --\x3e B\n    C --\x3e F\n    E --\x3e F\n    \n    "})]})]}),(0,s.jsxs)(l.A,{value:"on-prem",label:"Enterprise Self-hosted Tracetest",default:!0,children:[(0,s.jsx)(t.h2,{id:"install-tracetest-on-prem",children:"Install Tracetest On-Prem"}),(0,s.jsx)(t.admonition,{title:"For Development Environment",type:"note",children:(0,s.jsx)(t.p,{children:"This installation is meant for testing purposes only. It uses self signed certificates, so your browser will show a warning about it."})}),(0,s.jsxs)(t.admonition,{title:"For Production",type:"tip",children:[(0,s.jsx)(t.p,{children:"For the Production-ready installation:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/kubeshop/tracetest-cloud-charts/blob/main/README.md",children:"View the official Helm chart readme"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/install/on-prem-helm",children:"View the official installation docs"}),"."]}),"\n"]})]}),(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Install ",(0,s.jsx)(t.a,{href:"https://helm.sh/",children:"Helm"})," and ",(0,s.jsx)(t.a,{href:"https://kind.sigs.k8s.io/",children:"kind"})," on your machine. Clone the official Tracetest Helm chart."]}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"git clone https://github.com/kubeshop/tracetest-cloud-charts.git\ncd ./tracetest-cloud-charts\n"})}),(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Request a ",(0,s.jsxs)(t.strong,{children:["license key, ",(0,s.jsx)(t.a,{href:"https://tracetest.io/on-prem-installation",children:"here"})]}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Run the setup script with a demo. Add your license key when you get prompted."}),"\n"]}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"sh ./scripts/setup_kind_cluster.sh --install-demo\n"})}),(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsxs)(t.li,{children:["Add the following lines to your ",(0,s.jsx)(t.code,{children:"/etc/hosts"})," file to access Tracetest."]}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"sudo sh -c 'echo \"127.0.0.1 tracetest.localdev\" >> /etc/hosts'\nsudo sh -c 'echo \"127.0.0.1 pokeshop.localdev\" >> /etc/hosts'\n"})}),(0,s.jsxs)(t.p,{children:["This setup will configure a local kind cluster with Tracetest On-Prem and the ",(0,s.jsx)(t.a,{href:"/live-examples/pokeshop/overview",children:"Pokeshop API demo"}),", with all networking and prerequisites configured to work locally. You can go to the following links:"]}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://tracetest.localdev:30000",children:(0,s.jsx)(t.code,{children:"https://tracetest.localdev:30000"})})," - Access the Tracetest Web UI. You get a user and an organization created for you."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://pokeshop.localdev:30000",children:(0,s.jsx)(t.code,{children:"https://pokeshop.localdev:30000"})})," - Access the Pokeshop API demo to run tests."]}),"\n"]})]})]}),"\n",(0,s.jsx)(t.admonition,{title:"Don't have OpenTelemetry installed?",type:"tip",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/getting-started/no-otel",children:"Follow these instructions to install OpenTelemetry in 5 minutes without any code changes!"})})})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},7227:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);var s=n(34164);const r={tabItem:"tabItem_Ymn6"};var a=n(74848);function l(e){let{children:t,hidden:n,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,l),hidden:n,children:t})}},49489:(e,t,n)=>{n.d(t,{A:()=>f});var s=n(96540),r=n(34164),a=n(24245),l=n(56347),i=n(36494),c=n(62814),o=n(45167),d=n(81269);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:s,default:r}}=e;return{value:t,label:n,attributes:s,default:r}}))}(n);return function(e){const t=(0,o.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=u(e),[l,c]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:a}))),[o,h]=g({queryString:n,groupId:r}),[x,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,d.Dv)(n);return[r,(0,s.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),j=(()=>{const e=o??x;return p({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{j&&c(j)}),[j]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),m(e)}),[h,m,a]),tabValues:a}}var m=n(11062);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var T=n(74848);function b(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),r=i[n].value;r!==s&&(o(t),l(r))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return(0,T.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,T.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>c.push(e),onKeyDown:h,onClick:d,...a,className:(0,r.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":s===t}),children:n??t},t)}))})}function k(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,T.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function v(e){const t=x(e);return(0,T.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,T.jsx)(b,{...e,...t}),(0,T.jsx)(k,{...e,...t})]})}function f(e){const t=(0,m.A)();return(0,T.jsx)(v,{...e,children:h(e.children)},String(t))}},92945:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var s=n(49489),r=n(7227),a=n(2250),l=n(74848);function i(){function e(e){let{event:t,installationPlatform:n}=e;window.dataLayer=window.dataLayer||[],window.dataLayer.push({installationPlatform:n,event:"installationPlatform"})}return(0,l.jsxs)(s.A,{groupId:"operating-systems",children:[(0,l.jsx)(r.A,{value:"mac",label:"MAC",default:!0,children:(0,l.jsx)("div",{onClick:()=>e({installationPlatform:"MacOS"}),children:(0,l.jsx)(a.A,{language:"bash",title:"Terminal",children:"brew install kubeshop/tracetest/tracetest"})})}),(0,l.jsx)(r.A,{value:"linux",label:"LINUX",children:(0,l.jsx)("div",{onClick:()=>e({installationPlatform:"Linux"}),children:(0,l.jsx)(a.A,{language:"bash",title:"Terminal",children:"curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash"})})}),(0,l.jsx)(r.A,{value:"win",label:"WINDOWS",children:(0,l.jsx)("div",{onClick:()=>e({installationPlatform:"Windows"}),children:(0,l.jsx)(a.A,{language:"bash",title:"Terminal",children:"choco source add --name=kubeshop_repo --source=https://chocolatey.kubeshop.io/chocolatey ; choco install tracetest"})})})]})}}}]);