version: "3.5"
name: pokeshop

services:
  tracetest-agent:
    environment:
      TRACETEST_DEV: ${TRACETEST_DEV}
      TRACETEST_API_KEY: ${TRACETEST_AGENT_API_KEY}
      TRACETEST_SERVER_URL: ${TRACETEST_SERVER_URL}
    image: kubeshop/tracetest-agent:latest
    networks:
      default: null

  tracetest-e2e:
    build: .
    depends_on:
      - api
      - worker
    command: npm start
    environment:
      - POKESHOP_DEMO_URL=http://api:8081
      - TRACETEST_API_TOKEN=${TRACETEST_API_TOKEN}

  # pokeshop demo services
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 1s
      timeout: 5s
      retries: 60

  cache:
    image: redis:6
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 1s
      timeout: 3s
      retries: 60

  queue:
    image: rabbitmq:3.12
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q check_running
      interval: 1s
      timeout: 5s
      retries: 60

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.59.0
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command:
      - '--config'
      - '/otel-local-config.yaml'
    volumes:
      - ./collector.config.yaml:/otel-local-config.yaml

  api:
    image: kubeshop/demo-pokemon-api:latest
    restart: unless-stopped
    pull_policy: always
    environment:
      REDIS_URL: cache
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres?schema=public
      RABBITMQ_HOST: queue
      POKE_API_BASE_URL: https://pokeapi.co/api/v2
      COLLECTOR_ENDPOINT: http://otel-collector:4317
      HTTP_COLLECTOR_ENDPOINT: http://otel-collector:4318/v1/traces
      NPM_RUN_COMMAND: api
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'localhost:8081']
      interval: 1s
      timeout: 3s
      retries: 60
    ports:
      - 8081:8081
    depends_on:
      postgres:
        condition: service_healthy
      cache:
        condition: service_healthy
      queue:
        condition: service_healthy

  worker:
    image: kubeshop/demo-pokemon-api:latest
    restart: unless-stopped
    pull_policy: always
    environment:
      REDIS_URL: cache
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres?schema=public
      RABBITMQ_HOST: queue
      POKE_API_BASE_URL: https://pokeapi.co/api/v2
      COLLECTOR_ENDPOINT: http://otel-collector:4317
      NPM_RUN_COMMAND: worker
    depends_on:
      postgres:
        condition: service_healthy
      cache:
        condition: service_healthy
      queue:
        condition: service_healthy

  rpc:
    image: kubeshop/demo-pokemon-api:latest
    restart: unless-stopped
    pull_policy: always
    environment:
      REDIS_URL: cache
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres?schema=public
      RABBITMQ_HOST: queue
      POKE_API_BASE_URL: https://pokeapi.co/api/v2
      COLLECTOR_ENDPOINT: http://otel-collector:4317
      NPM_RUN_COMMAND: rpc
    healthcheck:
      test: ['CMD', 'lsof', '-i', '8082']
      interval: 1s
      timeout: 3s
      retries: 60
    depends_on:
      postgres:
        condition: service_healthy
      cache:
        condition: service_healthy
      queue:
        condition: service_healthy
