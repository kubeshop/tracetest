version: '3'

services:
  your-api:
    build: ./your-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - YOUR_API_PORT=10013
      - OTEL_SERVICE_NAME=your-api
      - OTEL_EXPORTER_GRPC_URL=http://otel-collector:4317
      - WALLET_API_ENDPOINT=http://wallet:10010/wallet
      - PAYMENT_EXECUTOR_API_ENDPOINT=http://payment-executor:10012/payment/execute
    ports:
      - 10013:10013
    depends_on:
      - otel-collector
      - payment-executor
      - wallet

  payment-executor:
    build: ./payment-executor-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PAYMENT_EXECUTOR_API_PORT=10012
      - OTEL_SERVICE_NAME=payment-executor-api
      - OTEL_EXPORTER_HTTP_URL=http://otel-collector:4318/v1/traces
      - RISK_ANALYSIS_URL=http://risk-analysis:10011/computeRisk
    ports:
      - 10012:10012
    depends_on:
      - otel-collector
      - risk-analysis

  risk-analysis:
    build: ./risk-analysis-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - RISK_ANALYSIS_API_PORT=10011
      - OTEL_SERVICE_NAME=risk-analysis-api
      - OTEL_EXPORTER_GRPC_URL=otel-collector:4317
    ports:
      - 10011:10011
    depends_on:
      - otel-collector

  wallet:
    build: ./wallet-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - WALLET_API_PORT=10010
      - OTEL_SERVICE_NAME=wallet-api
      - OTEL_EXPORTER_GRPC_URL=http://otel-collector:4317
    ports:
      - 10010:10010
    depends_on:
      - otel-collector

  tracetest:
    image: kubeshop/tracetest:latest
    platform: linux/amd64
    volumes:
      - type: bind
        source: ./tracetest/tracetest-config.yaml
        target: /app/tracetest.yaml
      - type: bind
        source: ./tracetest/tracetest-provision.yaml
        target: /app/provisioning.yaml
    ports:
      - 11633:11633
    command: --provisioning-file /app/provisioning.yaml
    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started
      your-api:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--spider", "localhost:11633"]
      interval: 1s
      timeout: 3s
      retries: 60
    environment:
      TRACETEST_DEV: ${TRACETEST_DEV}

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 1s
      timeout: 5s
      retries: 60

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.59.0
    command:
      - "--config"
      - "/otel-local-config.yaml"
    volumes:
      - ./tracetest/collector.config.yaml:/otel-local-config.yaml
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:1.48.0
    restart: unless-stopped
    ports:
      - 16686:16686
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "localhost:16686"]
      interval: 1s
      timeout: 3s
      retries: 60
