version: "3"
services:
  # next:
  #   image: quick-start-nextjs
  #   build:
  #     context: ./next-app
  #     dockerfile: ./Dockerfile
  #   command: npm start
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
  #     - APP_HOST=${APP_HOST}
  #   depends_on:
  #     app:
  #       condition: service_started
  #     tracetest-agent:
  #       condition: service_started

  react:
    image: quick-start-reactjs
    build:
      context: ./react-app
      dockerfile: ./Dockerfile
      args:
        - REACT_APP_APP_HOST=${REACT_APP_APP_HOST}
        - REACT_APP_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${REACT_APP_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
    ports:
      - "3000:80"
    depends_on:
      app:
        condition: service_started
      tracetest-agent:
        condition: service_started

  app:
    image: quick-start-nodejs-app
    build:
      context: ./node-app
      dockerfile: ./Dockerfile
    command: npm run app
    ports:
      - "8081:8081"
    environment:
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
      - AVAILABILITY_HOST=${AVAILABILITY_HOST}
    depends_on:
      tracetest-agent:
        condition: service_started
      availability:
        condition: service_started

  availability:
    image: quick-start-nodejs-availability
    build:
      context: ./node-app
      dockerfile: ./Dockerfile
    command: npm run availability
    ports:
      - "8082:8082"
    environment:
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
    depends_on:
      tracetest-agent:
        condition: service_started

  # Cloud-based Managed Tracetest
  tracetest-agent:
    image: kubeshop/tracetest-agent:latest
    environment:
      # Get the required information here: https://app.tracetest.io/retrieve-token
      - TRACETEST_API_KEY=${TRACETEST_TOKEN}
      - TRACETEST_ENVIRONMENT_ID=${TRACETEST_ENVIRONMENT_ID}
    ports:
      - "4318:4318"

  tracetest-apply:
    build:
      dockerfile: Dockerfile.tracetest
    volumes:
      - ./resources:/resources
    environment:
      TRACETEST_TOKEN: ${TRACETEST_TOKEN}
      TRACETEST_ENVIRONMENT_ID: ${TRACETEST_ENVIRONMENT_ID}
    entrypoint:
      - bash
      - /resources/apply.sh
    networks:
      default: null
    depends_on:
      react:
        condition: service_started
      tracetest-agent:
        condition: service_started

  tracetest-run:
    build:
      dockerfile: Dockerfile.tracetest
    volumes:
      - ./resources:/resources
    environment:
      TRACETEST_TOKEN: ${TRACETEST_TOKEN}
      TRACETEST_ENVIRONMENT_ID: ${TRACETEST_ENVIRONMENT_ID}
    entrypoint:
      - bash
      - /resources/run.sh
    networks:
      default: null
    depends_on:
      tracetest-apply:
        condition: service_completed_successfully
