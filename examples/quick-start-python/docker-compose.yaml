version: "3"
services:
  app:
    image: quick-start-python
    platform: linux/amd64
    extra_hosts:
      - "host.docker.internal:host-gateway"
    build: .
    ports:
      - "8080:8080"
    # using the command here instead of the Dockerfile
    command: opentelemetry-instrument --traces_exporter otlp --service_name app --exporter_otlp_endpoint ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT} --exporter_otlp_insecure true flask run --host=0.0.0.0 --port=8080
    depends_on:
      tracetest-agent:
        condition: service_started
      # tracetest: # For Tracetest Core
      #   condition: service_started

    # Cloud-based Managed Tracetest
  tracetest-agent:
    image: kubeshop/tracetest-agent:latest
    environment:
      # Get the required information here: https://app.tracetest.io/retrieve-token
      - TRACETEST_API_KEY=${TRACETEST_TOKEN}
      - TRACETEST_ENVIRONMENT_ID=${TRACETEST_ENVIRONMENT_ID}

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.59.0
    command:
      - "--config"
      - "/otel-local-config.yaml"
    volumes:
      - ./collector.config.yaml:/otel-local-config.yaml

  tracetest-apply:
    build:
      dockerfile: Dockerfile.tracetest
    volumes:
      - ./resources:/resources
    environment:
      TRACETEST_TOKEN: ${TRACETEST_TOKEN}
      TRACETEST_ENVIRONMENT_ID: ${TRACETEST_ENVIRONMENT_ID}
    entrypoint:
      - bash
      - /resources/apply.sh
    networks:
      default: null
    depends_on:
      app:
        condition: service_started
      tracetest-agent:
        condition: service_started

  tracetest-run:
    build:
      dockerfile: Dockerfile.tracetest
    volumes:
      - ./resources:/resources
    environment:
      TRACETEST_TOKEN: ${TRACETEST_TOKEN}
      TRACETEST_ENVIRONMENT_ID: ${TRACETEST_ENVIRONMENT_ID}
    entrypoint:
      - bash
      - /resources/run.sh
    networks:
      default: null
    depends_on:
      tracetest-apply:
        condition: service_completed_successfully
