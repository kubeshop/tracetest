version: '3'
services:
  payment-order-api:
    image: payment-order-api
    platform: linux/amd64
    build: ./payment-order-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 8080:8080
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - OTEL_SERVICE_NAME=payment-order-api
      - KAFKA_BROKER_URL=kafka:9092
      - KAFKA_TOPIC=paymentOrders
    depends_on:
      otel-collector:
        condition: service_started
      kafka:
        condition: service_healthy

  payment-storage-worker:
    image: payment-storage-worker
    platform: linux/amd64
    build: ./payment-storage-worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - OTEL_SERVICE_NAME=payment-storage-worker
      - KAFKA_BROKER_URL=kafka:9092
      - KAFKA_TOPIC=paymentOrders
    depends_on:
      otel-collector:
        condition: service_started
      kafka:
        condition: service_healthy
      payment-order-api:
        condition: service_started

  risk-analysis-worker:
    image: risk-analysis-worker
    platform: linux/amd64
    build: ./risk-analysis-worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=risk-analysis-worker
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - KAFKA_BROKER_URL=kafka:9092
      - KAFKA_TOPIC=paymentOrders
    depends_on:
      otel-collector:
        condition: service_started
      kafka:
        condition: service_healthy
      payment-order-api:
        condition: service_started

  kafka:
    image: confluentinc/cp-kafka:latest-ubi8
    ports:
      - 29092:29092
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:29092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_HOST://:29092
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@0.0.0.0:9093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_PROCESS_ROLES=controller,broker
      - KAFKA_NODE_ID=1
      - KAFKA_METADATA_LOG_SEGMENT_MS=15000
      - KAFKA_METADATA_MAX_RETENTION_MS=60000
      - KAFKA_METADATA_LOG_MAX_RECORD_BYTES_BETWEEN_SNAPSHOTS=2800
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_HEAP_OPTS=-Xmx200m -Xms200m
      - CLUSTER_ID=ckjPoprWQzOf0-FuNkGfFQ
    healthcheck:
      test: nc -z kafka 9092
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 10

  tracetest:
    image: kubeshop/tracetest:${TAG:-latest}
    platform: linux/amd64
    volumes:
      - type: bind
        source: ./tracetest/tracetest-config.yaml
        target: /app/tracetest.yaml
      - type: bind
        source: ./tracetest/tracetest-provision.yaml
        target: /app/provisioning.yaml
    ports:
      - 11633:11633
    command: --provisioning-file /app/provisioning.yaml
    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started
      jaeger:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--spider", "localhost:11633"]
      interval: 1s
      timeout: 3s
      retries: 60
    environment:
      TRACETEST_DEV: ${TRACETEST_DEV}

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 1s
      timeout: 5s
      retries: 60
    ports:
      - 5432:5432

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.59.0
    command:
      - "--config"
      - "/otel-local-config.yaml"
    volumes:
      - ./tracetest/collector.config.yaml:/otel-local-config.yaml
    ports:
      - 4317:4317
    depends_on:
      jaeger:
        condition: service_started

  jaeger:
    image: jaegertracing/all-in-one:latest
    restart: unless-stopped
    ports:
      - 16686:16686
      - 16685:16685
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "localhost:16686"]
      interval: 1s
      timeout: 3s
      retries: 60
