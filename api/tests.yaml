openapi: 3.0.0
components:
  schemas:
    Test:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        version:
          type: integer
          description: version number of the test
        serviceUnderTest:
          type: object
          properties:
            request:
              $ref: "./http.yaml#/components/schemas/HTTPRequest"
        definition:
          $ref: "#/components/schemas/TestDefinition"
          description: Definition of assertions that are going to be made
        referenceTestRun:
          $ref: "#/components/schemas/TestRun"

    TestDefinition:
      type: object
      properties:
        definitions:
          type: array
          items:
            type: object
            properties:
              selector:
                type: string
              assertions:
                type: array
                items:
                  $ref: "#/components/schemas/Assertion"
      example:
        definitions:
          - selector: 'span[tracetest.span.type="http"]'
            assertions:
            - attribute: tracetest.span.duration
              comparator: "<"
              expected: "2000"
            - attribute: http.status_code
              comparator: "="
              expected: "200"

    Assertion:
      type: object
      properties:
        attribute:
          type: string
        comparator:
          type: string
        expected:
          type: string

    TestRun:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        traceId:
          type: string
          readOnly: true
        spanId:
          type: string
          readOnly: true
        testVersion:
          type: integer
          description: Test version used when running this test run
        state:
          type: string
          enum: [CREATED, EXECUTING, AWAITING_TRACE, AWAITING_TEST_RESULTS, FINISHED, FAILED]
          description: Current execution state
        lastErrorState:
          type: string
          description: Details of the cause for the last `FAILED` state
        createdAt:
          type: string
          format: date-time
        serviceTriggeredAt:
          type: string
          format: date-time
        serviceTriggerCompletedAt:
          type: string
          format: date-time
        obtainedTraceAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        request:
          $ref: "./http.yaml#/components/schemas/HTTPRequest"
        response:
          $ref: "./http.yaml#/components/schemas/HTTPResponse"
          description: TODO(pov) This is HTTP Response object for now, at some point it might be GRPC/SOAP/...
        trace:
          $ref: "./trace.yaml#/components/schemas/Trace"
        result:
          $ref: "#/components/schemas/AssertionResults"

    AssertionResults:
      type: object
      properties:
        allPassed:
          type: boolean
        results:
          type: array
          items:
            type: object
            properties:
              selector:
                type: string
              results:
                type: array
                items:
                  $ref: "#/components/schemas/AssertionResult"
      example:
        allPassed: true
        results:
          - selector: 'span[tracetest.span.type="http"]'
            results:
            - assertion:
                attribute: http.status_code
                comparator: "="
                expected: "200"
              allPassed: true
              spanResults:
                - spanId: "123"
                  observedValue: "test"
                  passed: true
            - assertion:
                attribute: http.status_code
                comparator: "="
                expected: "200"
              allPassed: true
              spanResults:
                - spanId: "123"
                  observedValue: "test"
                  passed: true

    AssertionResult:
      type: object
      properties:
        assertion:
          $ref: "#/components/schemas/Assertion"
        allPassed:
          type: boolean
        spanResults:
          type: array
          items:
            $ref: "#/components/schemas/AssertionSpanResult"

    AssertionSpanResult:
      type: object
      properties:
        spanId:
          type: string
        observedValue:
          type: string
        passed:
          type: boolean
        error:
          type: string
