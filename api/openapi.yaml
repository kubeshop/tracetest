openapi: 3.0.0
info:
  version: 0.2.1
  title: TraceTest
  description: OpenAPI definition for TraceTest endpoint and resources
servers:
  - url: /api
paths:
  /tests:
    get:
      tags:
        - api
      summary: "Get tests"
      description: "get tests"
      operationId: getTests
      parameters:
        - in: query
          name: take
          description: "indicates how many tests can be returned by each page"
          schema:
            type: integer
            default: 20
        - in: query
          name: skip
          description: "indicates how many tests will be skipped when paginating"
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./tests.yaml#/definitions/Test"
        500:
          description: "problem with getting tests"
    post:
      tags:
        - api
      summary: "Create new test"
      description: "Create new test action"
      operationId: createTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/definitions/Test"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/definitions/Test"
        500:
          description: "problem with creating test"

  /tests/{testId}:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "get test"
      description: "get test"
      operationId: getTest
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/definitions/Test"
        500:
          description: "problem with getting a test"
    put:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "update test"
      description: "update test action"
      operationId: updateTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/definitions/Test"
      responses:
        204:
          description: successful operation
        500:
          description: "problem with updating test"
    delete:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "delete a test"
      description: "delete a test"
      operationId: deleteTest
      responses:
        "204":
          description: OK
  /tests/{testId}/run:
    post:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "run test"
      description: "run a particular test"
      operationId: runTest
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/definitions/TestRun"

  /tests/{testId}/results/{resultId}:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: resultId
          schema:
            type: string
            format: uuid
          required: true
      summary: "get test Run"
      description: "get a particular test Run"
      operationId: getTestRun
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/definitions/TestRun"
    put:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: resultId
          schema:
            type: string
            format: uuid
          required: true
      summary: "update test result state"
      description: "update test result state for a particular test"
      operationId: updateTestResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/definitions/TestRunResult"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/definitions/TestRunResult"
  /tests/{testId}/results:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: take
          description: "indicates how many results can be returned by each page"
          schema:
            type: integer
            default: 20
        - in: query
          name: skip
          description: "indicates how many results will be skipped when paginating"
          schema:
            type: integer
            default: 0
      summary: "get the results for a test"
      description: "get the results from a particular test"
      operationId: getTestResults
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./tests.yaml#/definitions/TestRunResult"
  /tests/{testId}/assertions:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      operationId: getAssertions
      summary: "Get assertions for a test"
      description: "Gets all assertions associated to a particular test"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./tests.yaml#/definitions/Assertion"
    post:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "Create an assertion for a test"
      description: "Create an assertion for a particular test"
      operationId: createAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/definitions/Assertion"
      responses:
        "200":
          description: OK
  /tests/{testId}/assertions/{assertionId}:
    put:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: assertionId
          schema:
            type: string
            format: uuid
          required: true
      summary: "update an assertion"
      description: "update an assertion"
      operationId: updateAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/definitions/Assertion"
      responses:
        "204":
          description: OK
    delete:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: assertionId
          schema:
            type: string
            format: uuid
          required: true
      summary: "delete an assertion"
      description: "delete an assertion"
      operationId: deleteAssertion
      responses:
        "204":
          description: OK
