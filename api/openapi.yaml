openapi: 3.0.0
info:
  version: 0.2.1
  title: TraceTest
  description: OpenAPI definition for TraceTest endpoint and resources
servers:
  - url: /api
paths:
  /tests:
    get:
      tags:
        - api
      summary: "Get tests"
      description: "get tests"
      operationId: getTests
      parameters:
        - in: query
          name: take
          description: "indicates how many tests can be returned by each page"
          schema:
            type: integer
            default: 20
        - in: query
          name: skip
          description: "indicates how many tests will be skipped when paginating"
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./tests.yaml#/components/schemas/Test"
        500:
          description: "problem with getting tests"
    post:
      tags:
        - api
      summary: "Create new test"
      description: "Create new test action"
      operationId: createTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/components/schemas/Test"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/components/schemas/Test"
        500:
          description: "problem with creating test"
  /tests/{testId}:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "get test"
      description: "get test"
      operationId: getTest
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/components/schemas/Test"
        500:
          description: "problem with getting a test"
    put:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "update test"
      description: "update test action"
      operationId: updateTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/components/schemas/Test"
      responses:
        204:
          description: successful operation
        500:
          description: "problem with updating test"
    delete:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "delete a test"
      description: "delete a test"
      operationId: deleteTest
      responses:
        "204":
          description: OK
  /tests/{testId}/run:
    post:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "run test"
      description: "run a particular test"
      operationId: runTest
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/components/schemas/TestRun"
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: take
          description: "indicates how many results can be returned by each page"
          schema:
            type: integer
            default: 20
        - in: query
          name: skip
          description: "indicates how many results will be skipped when paginating"
          schema:
            type: integer
            default: 0
      summary: "get the runs for a test"
      description: "get the runs from a particular test"
      operationId: getTestRuns
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./tests.yaml#/components/schemas/TestRun"
  /tests/{testId}/run/{runId}/select:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: runId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: query
          schema:
            type: string
      summary: "retrieve spans that will be selected by selector"
      description: "get the spans ids that would be selected by a specific selector query"
      operationId: getTestResultSelectedSpans
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /tests/{testId}/run/{runId}/dry-run:
    put:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: runId
          schema:
            type: string
            format: uuid
          required: true
      summary: "run given assertions against the traces from the given run without persisting anything"
      description: "use this method to test a definition against an actual trace without creating a new version or persisting anything"
      operationId: dryRunAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/components/schemas/TestDefinition"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/components/schemas/AssertionResults"
  /tests/{testId}/run/{runId}/rerun:
    post:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: runId
          schema:
            type: string
            format: uuid
          required: true
      summary: "rerun a test run"
      description: "rerun a test run"
      operationId: rerunTestRun
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/components/schemas/TestRun"
  /tests/{testId}/run/{runId}/junit.xml:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: runId
          schema:
            type: string
            format: uuid
          required: true
      summary: "get test run results in JUnit xml format"
      description: "get test run results in JUnit xml format"
      operationId: getRunResultJUnit
      responses:
        200:
          description: JUnit formatted file
          content:
            application/xml:
              schema:
                type: string


  /tests/{testId}/run/{runId}:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: runId
          schema:
            type: string
            format: uuid
          required: true
      summary: "get test Run"
      description: "get a particular test Run"
      operationId: getTestRun
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./tests.yaml#/components/schemas/TestRun"
    delete:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: runId
          schema:
            type: string
            format: uuid
          required: true
      summary: "delete a test run"
      description: "delete a test run"
      operationId: deleteTestRun
      responses:
        "204":
          description: OK
  /tests/{testId}/definition:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      operationId: getTestDefinition
      summary: "Get definition for a test"
      description: "Gets definition for a test"
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./tests.yaml#/components/schemas/TestDefinition"
    put:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
      summary: "Set testDefinition for a test"
      description: "Set testDefinition for a particular test"
      operationId: setTestDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./tests.yaml#/components/schemas/TestDefinition"
      responses:
        204:
          description: OK

  /tests/{testId}/version/{version}/definition.yaml:
    get:
      tags:
        - api
      parameters:
        - in: path
          name: testId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: version
          schema:
            type: integer
          required: true
      summary: Get the test definition as an YAML file
      description: Get the test definition as an YAML file
      operationId: getTestVersionDefinitionFile
      responses:
        200:
          description: OK
          content:
            application/yaml:
              schema:
                type: string